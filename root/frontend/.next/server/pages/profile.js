module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pages/profile.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/auth2.js":
/*!**********************!*\
  !*** ./lib/auth2.js ***!
  \**********************/
/*! exports provided: AuthProvider, useAuth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthProvider\", function() { return AuthProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useAuth\", function() { return useAuth; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-cookie */ \"js-cookie\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _services_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/api */ \"./services/api.js\");\nvar _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/lib/auth2.js\";\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\nconst API_URL = \"http://localhost:1337\" || false;\n\nconst AuthContext = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"createContext\"])({});\nconst AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(true);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    async function loadUserFromCookies() {\n      const token = js_cookie__WEBPACK_IMPORTED_MODULE_3___default.a.get(\"token\");\n      console.log(JSON.stringify(js_cookie__WEBPACK_IMPORTED_MODULE_3___default.a.get()));\n      if (token) {\n        console.log(\"Got a token in the cookies, let's see if it is valid\");\n        _services_api__WEBPACK_IMPORTED_MODULE_4__[\"default\"].defaults.headers.Authorization = `Bearer ${token}`;\n        const {\n          user: user\n        } = await _services_api__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(\"users/me\");\n        console.log(`user object: ${user}`);\n        if (user) setUser(user);\n      }\n      setLoading(false);\n    }\n    loadUserFromCookies();\n  }, []);\n  const login = (identifier, password) => {\n    //prevent function from being ran on the server\n    if (true) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios__WEBPACK_IMPORTED_MODULE_2___default.a.post(`${API_URL}/auth/local/`, {\n        identifier,\n        password\n      }).then(res => {\n        //set token response from Strapi for server validation\n        js_cookie__WEBPACK_IMPORTED_MODULE_3___default.a.set(\"token\", res.data.jwt);\n        //set user with data response\n        const {\n          user: user\n        } = res.data;\n        setUser(user);\n        console.log(`AUTHENTICATED LOGIN USER = ${JSON.stringify(user)}`);\n        //resolve the promise to set loading to false in SignUp form\n        resolve(res);\n        //redirect back to home page for restaurance selection\n        next_router__WEBPACK_IMPORTED_MODULE_1___default.a.push(\"/\");\n      }).catch(error => {\n        //reject the promise and pass the error object back to the form\n        console.log(error);\n        reject(error);\n      });\n    });\n  };\n  const registerUser = (username, email, password) => {\n    //prevent function from being ran on the server\n    //to make sure that it is on the client side,\n    //if window is not defined, than it is running on server\n    if (true) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios__WEBPACK_IMPORTED_MODULE_2___default.a.post(`${API_URL}/auth/local/register`, {\n        username,\n        email,\n        password\n      }).then(res => {\n        //use Cookie capability to store JWT token\n        //set token response from Strapi for server validation\n        js_cookie__WEBPACK_IMPORTED_MODULE_3___default.a.set(\"token\", res.data.jwt);\n        const {\n          user: user\n        } = res.data;\n        setUser(user);\n        console.log(`USER HAS BEEN REGISTERED, USER = ${JSON.stringify(user)}`);\n        //resolve the promise to set loading to false in SignUp form\n        resolve(res);\n        //redirect back to home page for restaurance selection\n        next_router__WEBPACK_IMPORTED_MODULE_1___default.a.push(\"/\");\n      }).catch(error => {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n    });\n  };\n\n  // Only Authenticated User Can Have Access To This Route\n  //Therefore JWT must be provided\n  //response should have updated user data\n  //test route with POSTMAN\n\n  const updateUser = (id, username) => {\n    if (true) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios__WEBPACK_IMPORTED_MODULE_2___default.a.put(`${API_URL}/auth/local/updateUser`, {\n        query: {\n          where: {\n            id: id\n          },\n          data: {\n            username: username\n          }\n        }\n      }).then(res => {\n        console.log(res.data);\n        const {\n          user: user\n        } = res.data;\n        setUser(user);\n        resolve(res);\n      }).catch(error => {\n        //reject the promise and pass the error object back to the form\n        console.log(error);\n        reject(error);\n      });\n    });\n  };\n  const logout = (email, password) => {\n    //remove token and user cookie\n    js_cookie__WEBPACK_IMPORTED_MODULE_3___default.a.remove(\"token\");\n    delete window.__user;\n    // sync logout between multiple windows\n    window.localStorage.setItem(\"logout\", Date.now());\n    //Set user to null\n    setUser(null);\n    headerToken = \"\";\n    console.log(`USER HAS BEEN LOGGED OUT`);\n    //redirect to the home page\n    next_router__WEBPACK_IMPORTED_MODULE_1___default.a.push(\"/\");\n  };\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user,\n      login,\n      updateUser,\n      registerUser,\n      loading,\n      logout\n    },\n    __self: undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, children);\n};\nconst useAuth = () => Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useContext\"])(AuthContext);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/auth2.js\n");

/***/ }),

/***/ "./node_modules/reactstrap/dist/reactstrap.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/reactstrap/dist/reactstrap.cjs ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var React = __webpack_require__(/*! react */ \"react\");\nvar PropTypes = __webpack_require__(/*! prop-types */ \"prop-types\");\nvar classNames = __webpack_require__(/*! classnames */ \"classnames\");\nvar reactPopper = __webpack_require__(/*! react-popper */ \"react-popper\");\nvar ReactDOM = __webpack_require__(/*! react-dom */ \"react-dom\");\nvar reactTransitionGroup = __webpack_require__(/*! react-transition-group */ \"react-transition-group\");\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\nvar classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);\nvar ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction getScrollbarWidth() {\n  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\nfunction setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n}\nfunction isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\nfunction getOriginalBodyPadding() {\n  var style = window.getComputedStyle(document.body, null);\n  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n}\nfunction conditionallyUpdateScrollbar() {\n  var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\nvar globalCssModule;\nfunction setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\nfunction mapToCssModules(className, cssModule) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (cssModule === void 0) {\n    cssModule = globalCssModule;\n  }\n\n  if (!cssModule) return className;\n  return className.split(' ').map(function (c) {\n    return cssModule[c] || c;\n  }).join(' ');\n}\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\n\nfunction omit(obj, omitKeys) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\n\nfunction pick(obj, keys) {\n  var pickKeys = Array.isArray(keys) ? keys : [keys];\n  var length = pickKeys.length;\n  var key;\n  var result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n\n  return result;\n}\nvar warned = {};\nfunction warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n\n    warned[message] = true;\n  }\n}\nfunction deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat([].slice.call(arguments, 3)));\n  };\n} // Shim Element if needed (e.g. in Node environment)\n\nvar Element = typeof window === 'object' && window.Element || function () {};\n\nfunction DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nvar targetPropType = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func, DOMElement, PropTypes__default[\"default\"].shape({\n  current: PropTypes__default[\"default\"].any\n})]);\nvar tagPropType = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].shape({\n  $$typeof: PropTypes__default[\"default\"].symbol,\n  render: PropTypes__default[\"default\"].func\n}), PropTypes__default[\"default\"].arrayOf(PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].shape({\n  $$typeof: PropTypes__default[\"default\"].symbol,\n  render: PropTypes__default[\"default\"].func\n})]))]); // These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\nvar TransitionTimeouts = {\n  Fade: 150,\n  // $transition-fade\n  Collapse: 350,\n  // $transition-collapse\n  Modal: 300,\n  // $modal-transition\n  Carousel: 600,\n  // $carousel-transition\n  Offcanvas: 300 // $offcanvas-transition\n\n}; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nvar TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nvar TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED: 'entered',\n  EXITING: 'exiting',\n  EXITED: 'exited'\n};\nvar keyCodes = {\n  esc: 27,\n  space: 32,\n  enter: 13,\n  tab: 9,\n  up: 38,\n  down: 40,\n  home: 36,\n  end: 35,\n  n: 78,\n  p: 80\n};\nvar PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\nfunction toNumber(value) {\n  var type = typeof value;\n  var NAN = 0 / 0;\n\n  if (type === 'number') {\n    return value;\n  }\n\n  if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? \"\" + other : other;\n  }\n\n  if (type !== 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  var isBinary = /^0b[01]+$/i.test(value);\n  return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;\n}\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  var tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n}\nfunction findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n\n  if (isFunction(target)) {\n    return target();\n  }\n\n  if (typeof target === 'string' && canUseDOM) {\n    var selection = document.querySelectorAll(target);\n\n    if (!selection.length) {\n      selection = document.querySelectorAll(\"#\" + target);\n    }\n\n    if (!selection.length) {\n      throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n    }\n\n    return selection;\n  }\n\n  return target;\n}\nfunction isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n\n  return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n}\nfunction getTarget(target, allElements) {\n  var els = findDOMElements(target);\n\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n\n    if (els === null) {\n      return [];\n    }\n\n    return [els];\n  }\n\n  if (isArrayOrNodeList(els)) {\n    return els[0];\n  }\n\n  return els;\n}\nvar defaultToggleEvents = ['touchstart', 'click'];\nfunction addMultipleEventListeners(_els, handler, _events, useCapture) {\n  var els = _els;\n\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  var events = _events;\n\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n    throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n  }\n\n  Array.prototype.forEach.call(events, function (event) {\n    Array.prototype.forEach.call(els, function (el) {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\nvar focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal):not(.offcanvas)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];\n\nvar utils = {\n  __proto__: null,\n  getScrollbarWidth: getScrollbarWidth,\n  setScrollbarWidth: setScrollbarWidth,\n  isBodyOverflowing: isBodyOverflowing,\n  getOriginalBodyPadding: getOriginalBodyPadding,\n  conditionallyUpdateScrollbar: conditionallyUpdateScrollbar,\n  setGlobalCssModule: setGlobalCssModule,\n  mapToCssModules: mapToCssModules,\n  omit: omit,\n  pick: pick,\n  warnOnce: warnOnce,\n  deprecated: deprecated,\n  DOMElement: DOMElement,\n  targetPropType: targetPropType,\n  tagPropType: tagPropType,\n  TransitionTimeouts: TransitionTimeouts,\n  TransitionPropTypeKeys: TransitionPropTypeKeys,\n  TransitionStatuses: TransitionStatuses,\n  keyCodes: keyCodes,\n  PopperPlacements: PopperPlacements,\n  canUseDOM: canUseDOM,\n  isReactRefObj: isReactRefObj,\n  isObject: isObject,\n  toNumber: toNumber,\n  isFunction: isFunction,\n  findDOMElements: findDOMElements,\n  isArrayOrNodeList: isArrayOrNodeList,\n  getTarget: getTarget,\n  defaultToggleEvents: defaultToggleEvents,\n  addMultipleEventListeners: addMultipleEventListeners,\n  focusableElements: focusableElements\n};\n\nvar _excluded$1h = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nvar propTypes$1m = {\n  tag: tagPropType,\n  fluid: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string]),\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$1k = {\n  tag: 'div'\n};\n\nfunction Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1h);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, containerClass), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nContainer.propTypes = propTypes$1m;\nContainer.defaultProps = defaultProps$1k;\n\nvar _excluded$1g = [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"widths\"];\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar rowColsPropType = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string]);\nvar propTypes$1l = {\n  tag: tagPropType,\n  noGutters: deprecated(PropTypes__default[\"default\"].bool, 'Please use Bootstrap 5 gutter utility classes. https://getbootstrap.com/docs/5.0/layout/gutters/'),\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType,\n  xxl: rowColsPropType,\n  widths: PropTypes__default[\"default\"].array\n};\nvar defaultProps$1j = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nfunction Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1g);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames__default[\"default\"](className, noGutters ? 'gx-0' : null, 'row', colClasses), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nRow.propTypes = propTypes$1l;\nRow.defaultProps = defaultProps$1j;\n\nvar _excluded$1f = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nvar colWidths$1 = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar stringOrNumberProp$1 = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string]);\nvar columnProps$1 = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].shape({\n  size: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string]),\n  order: stringOrNumberProp$1,\n  offset: stringOrNumberProp$1\n})]);\nvar propTypes$1k = {\n  tag: tagPropType,\n  xs: columnProps$1,\n  sm: columnProps$1,\n  md: columnProps$1,\n  lg: columnProps$1,\n  xl: columnProps$1,\n  xxl: columnProps$1,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  widths: PropTypes__default[\"default\"].array\n};\nvar defaultProps$1i = {\n  tag: 'div',\n  widths: colWidths$1\n};\n\nvar getColumnSizeClass$1 = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  }\n\n  if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar getColumnClasses = function getColumnClasses(attributes, cssModule, widths) {\n  if (widths === void 0) {\n    widths = colWidths$1;\n  }\n\n  var modifiedAttributes = attributes;\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = modifiedAttributes[colWidth];\n    delete modifiedAttributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass$1(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames__default[\"default\"]((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass$1(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n  return {\n    colClasses: colClasses,\n    modifiedAttributes: modifiedAttributes\n  };\n};\n\nfunction Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1f);\n\n  var _getColumnClasses = getColumnClasses(attributes, cssModule, widths),\n      modifiedAttributes = _getColumnClasses.modifiedAttributes,\n      colClasses = _getColumnClasses.colClasses;\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, colClasses), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, modifiedAttributes, {\n    className: classes\n  }));\n}\n\nCol.propTypes = propTypes$1k;\nCol.defaultProps = defaultProps$1i;\n\nvar _excluded$1e = [\"expand\", \"className\", \"cssModule\", \"light\", \"dark\", \"fixed\", \"sticky\", \"color\", \"container\", \"tag\", \"children\"];\nvar propTypes$1j = {\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Theme the navbar by adding a background color  */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Use any of the responsive containers to change how wide the content in your navbar is presented. */\n  container: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string]),\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** This prop is passed if the background is dark, to make the text lighter */\n  dark: PropTypes__default[\"default\"].bool,\n\n  /** Determine if to show toggler button */\n  expand: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string]),\n\n  /** Make the navbar fixed at the top */\n  fixed: PropTypes__default[\"default\"].string,\n  full: PropTypes__default[\"default\"].bool,\n\n  /** Add `.navbar-light` class */\n  light: PropTypes__default[\"default\"].bool,\n  role: PropTypes__default[\"default\"].string,\n\n  /** Use `position: sticky` which isn't fully supported in every browser */\n  sticky: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$1h = {\n  tag: 'nav',\n  expand: false,\n  container: 'fluid'\n};\n\nvar getExpandClass = function getExpandClass(expand) {\n  if (expand === false) {\n    return false;\n  }\n\n  if (expand === true || expand === 'xs') {\n    return 'navbar-expand';\n  }\n\n  return \"navbar-expand-\" + expand;\n};\n\nfunction Navbar(props) {\n  var _classNames;\n\n  var expand = props.expand,\n      className = props.className,\n      cssModule = props.cssModule,\n      light = props.light,\n      dark = props.dark,\n      fixed = props.fixed,\n      sticky = props.sticky,\n      color = props.color,\n      container = props.container,\n      Tag = props.tag,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1e);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'navbar', getExpandClass(expand), (_classNames = {\n    'navbar-light': light,\n    'navbar-dark': dark\n  }, _classNames[\"bg-\" + color] = color, _classNames[\"fixed-\" + fixed] = fixed, _classNames[\"sticky-\" + sticky] = sticky, _classNames)), cssModule);\n  var containerClass = container && container === true ? 'container' : \"container-\" + container;\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }), container ? /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n    className: containerClass\n  }, children) : children);\n}\n\nNavbar.propTypes = propTypes$1j;\nNavbar.defaultProps = defaultProps$1h;\n\nvar _excluded$1d = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$1i = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$1g = {\n  tag: 'a'\n};\n\nfunction NavbarBrand(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1d);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'navbar-brand'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nNavbarBrand.propTypes = propTypes$1i;\nNavbarBrand.defaultProps = defaultProps$1g;\n\nvar _excluded$1c = [\"className\", \"cssModule\", \"active\", \"tag\"];\nvar propTypes$1h = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  active: PropTypes__default[\"default\"].bool\n};\nvar defaultProps$1f = {\n  tag: 'span'\n};\n\nfunction NavbarText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1c);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'navbar-text'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nNavbarText.propTypes = propTypes$1h;\nNavbarText.defaultProps = defaultProps$1f;\n\nvar _excluded$1b = [\"className\", \"cssModule\", \"children\", \"tag\"];\nvar propTypes$1g = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  type: PropTypes__default[\"default\"].string,\n\n  /** Pass children so this component can wrap the child elements */\n  children: PropTypes__default[\"default\"].node\n};\nvar defaultProps$1e = {\n  tag: 'button',\n  type: 'button'\n};\n\nfunction NavbarToggler(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1b);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'navbar-toggler'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n    \"aria-label\": \"Toggle navigation\"\n  }, attributes, {\n    className: classes\n  }), children || /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n    className: mapToCssModules('navbar-toggler-icon', cssModule)\n  }));\n}\n\nNavbarToggler.propTypes = propTypes$1g;\nNavbarToggler.defaultProps = defaultProps$1e;\n\nvar _excluded$1a = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nvar propTypes$1f = {\n  /** Adding card prop adds `.card-header-tabs` or `.card-header-pills` class */\n  card: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** fills the nav to extend to full available width */\n  fill: PropTypes__default[\"default\"].bool,\n\n  /** Change the horizontal alignment of your nav */\n  horizontal: PropTypes__default[\"default\"].oneOf(['center', 'end']),\n\n  /**  All horizontal space will be occupied by nav links, but unlike the `fill` above, every nav item will be the same width. */\n  justified: PropTypes__default[\"default\"].bool,\n\n  /** Add navbar for a full-height and lightweight navigation */\n  navbar: PropTypes__default[\"default\"].bool,\n\n  /** Make NavItems look like pills */\n  pills: PropTypes__default[\"default\"].bool,\n\n  /** Make NavItems look like tabs */\n  tabs: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Stack your navigation by changing the flex item direction */\n  vertical: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string])\n};\nvar defaultProps$1d = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  }\n\n  if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nfunction Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1a);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nNav.propTypes = propTypes$1f;\nNav.defaultProps = defaultProps$1d;\n\nvar _excluded$19 = [\"className\", \"cssModule\", \"active\", \"tag\"];\nvar propTypes$1e = {\n  /** Add active class to element */\n  active: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$1c = {\n  tag: 'li'\n};\n\nfunction NavItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$19);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'nav-item', active ? 'active' : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nNavItem.propTypes = propTypes$1e;\nNavItem.defaultProps = defaultProps$1c;\n\nvar _excluded$18 = [\"className\", \"cssModule\", \"active\", \"tag\", \"innerRef\"];\nvar propTypes$1d = {\n  /** Add active class to NavLink */\n  active: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Disable the link */\n  disabled: PropTypes__default[\"default\"].bool,\n  href: PropTypes__default[\"default\"].any,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n\n  /** Function to be triggered on click */\n  onClick: PropTypes__default[\"default\"].func,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$1b = {\n  tag: 'a'\n};\n\nvar NavLink = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(NavLink, _React$Component);\n\n  function NavLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = NavLink.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.href === '#') {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        active = _this$props.active,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$18);\n\n    var classes = mapToCssModules(classNames__default[\"default\"](className, 'nav-link', {\n      disabled: attributes.disabled,\n      active: active\n    }), cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      onClick: this.onClick,\n      className: classes\n    }));\n  };\n\n  return NavLink;\n}(React__default[\"default\"].Component);\n\nNavLink.propTypes = propTypes$1d;\nNavLink.defaultProps = defaultProps$1b;\nvar NavLink$1 = NavLink;\n\nvar _excluded$17 = [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"];\nvar propTypes$1c = {\n  /** Aria label */\n  'aria-label': PropTypes__default[\"default\"].string,\n\n  /** Pass children so this component can wrap them */\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Add custom class to list tag */\n  listClassName: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for list tag */\n  listTag: tagPropType,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$1a = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nfunction Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$17);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className), cssModule);\n  var listClasses = mapToCssModules(classNames__default[\"default\"]('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React__default[\"default\"].createElement(ListTag, {\n    className: listClasses\n  }, children));\n}\n\nBreadcrumb.propTypes = propTypes$1c;\nBreadcrumb.defaultProps = defaultProps$1a;\n\nvar _excluded$16 = [\"className\", \"cssModule\", \"active\", \"tag\"];\nvar propTypes$1b = {\n  /** Adds a visual \"active\" state to a Breadcrumb Item */\n  active: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class to the element */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$19 = {\n  tag: 'li'\n};\n\nfunction BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$16);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n}\n\nBreadcrumbItem.propTypes = propTypes$1b;\nBreadcrumbItem.defaultProps = defaultProps$19;\n\nvar _excluded$15 = [\"className\", \"cssModule\", \"variant\", \"innerRef\"];\nvar propTypes$1a = {\n  /** Disable the button if needed */\n  active: PropTypes__default[\"default\"].bool,\n\n  /** Aria label */\n  'aria-label': PropTypes__default[\"default\"].string,\n\n  /** Function to be triggered on click */\n  onClick: PropTypes__default[\"default\"].func,\n\n  /** Change the variant to white */\n  variant: PropTypes__default[\"default\"].oneOf(['white']),\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func])\n};\nvar defaultProps$18 = {\n  'aria-label': 'close'\n};\n\nfunction CloseButton(props) {\n  var className = props.className,\n      variant = props.variant,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$15);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'btn-close', variant && \"btn-close-\" + variant));\n  return /*#__PURE__*/React__default[\"default\"].createElement(\"button\", _extends({\n    ref: innerRef,\n    type: \"button\",\n    className: classes\n  }, attributes));\n}\n\nCloseButton.propTypes = propTypes$1a;\nCloseButton.defaultProps = defaultProps$18;\n\nvar _excluded$14 = [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"];\nvar propTypes$19 = {\n  /** Manually set the visual state of the button to active */\n  active: PropTypes__default[\"default\"].bool,\n\n  /** Aria label */\n  'aria-label': PropTypes__default[\"default\"].string,\n  block: PropTypes__default[\"default\"].bool,\n\n  /** Pass children so this component can wrap them */\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Use the button as a close button */\n  close: PropTypes__default[\"default\"].bool,\n\n  /** Change color of Button to one of the available colors */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Disables the button */\n  disabled: PropTypes__default[\"default\"].bool,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n\n  /** Function to be triggered on click */\n  onClick: PropTypes__default[\"default\"].func,\n\n  /** Adds outline to the button */\n  outline: PropTypes__default[\"default\"].bool,\n\n  /** Make the button bigger or smaller */\n  size: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$17 = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nfunction Button(props) {\n  var onClick = React.useCallback(function (e) {\n    if (props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (props.onClick) {\n      return props.onClick(e);\n    }\n  }, [props.onClick, props.disabled]);\n\n  var active = props.active,\n      ariaLabel = props['aria-label'],\n      block = props.block,\n      className = props.className,\n      close = props.close,\n      cssModule = props.cssModule,\n      color = props.color,\n      outline = props.outline,\n      size = props.size,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$14);\n\n  if (close) {\n    return /*#__PURE__*/React__default[\"default\"].createElement(CloseButton, attributes);\n  }\n\n  var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'btn', btnOutlineColor, size ? \"btn-\" + size : false, block ? 'd-block w-100' : false, {\n    active: active,\n    disabled: props.disabled\n  }), cssModule);\n\n  if (attributes.href && Tag === 'button') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n    type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n  }, attributes, {\n    className: classes,\n    ref: innerRef,\n    onClick: onClick,\n    \"aria-label\": ariaLabel\n  }));\n}\n\nButton.propTypes = propTypes$19;\nButton.defaultProps = defaultProps$17;\n\nvar _excluded$13 = [\"className\"];\nvar propTypes$18 = {\n  onClick: PropTypes__default[\"default\"].func,\n  onBlur: PropTypes__default[\"default\"].func,\n  onFocus: PropTypes__default[\"default\"].func,\n  defaultValue: PropTypes__default[\"default\"].bool,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$16 = {\n  defaultValue: false\n};\n\nfunction ButtonToggle(props) {\n  var _useState = React.useState(props.defaultValue),\n      toggled = _useState[0],\n      setToggled = _useState[1];\n\n  var _useState2 = React.useState(false),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var onBlur = React.useCallback(function (e) {\n    if (props.onBlur) {\n      props.onBlur(e);\n    }\n\n    setFocus(false);\n  }, [props.onBlur]);\n  var onFocus = React.useCallback(function (e) {\n    if (props.onFocus) {\n      props.onFocus(e);\n    }\n\n    setFocus(true);\n  }, [props.onFocus]);\n  var onClick = React.useCallback(function (e) {\n    if (props.onClick) {\n      props.onClick(e);\n    }\n\n    setToggled(!toggled);\n  }, [props.onClick]);\n\n  var className = props.className,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$13);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, {\n    focus: focus\n  }), props.cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Button, _extends({\n    active: toggled,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onClick: onClick,\n    className: classes\n  }, attributes));\n}\n\nButtonToggle.propTypes = propTypes$18;\nButtonToggle.defaultProps = defaultProps$16;\n\n/**\n * DropdownContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  isOpen: PropTypes.bool.isRequired,\n *  direction: PropTypes.oneOf(['up', 'down', 'start', 'end']).isRequired,\n *  inNavbar: PropTypes.bool.isRequired,\n *  disabled: PropTypes.bool\n * }\n */\n\nvar DropdownContext = React__default[\"default\"].createContext({});\n\nvar InputGroupContext = React__default[\"default\"].createContext({});\n\nvar _excluded$12 = [\"className\", \"cssModule\", \"direction\", \"isOpen\", \"group\", \"size\", \"nav\", \"setActiveFromChild\", \"active\", \"tag\", \"menuRole\"];\nvar propTypes$17 = {\n  a11y: PropTypes__default[\"default\"].bool,\n  disabled: PropTypes__default[\"default\"].bool,\n  direction: PropTypes__default[\"default\"].oneOf(['up', 'down', 'start', 'end', 'left', 'right']),\n  group: PropTypes__default[\"default\"].bool,\n  isOpen: PropTypes__default[\"default\"].bool,\n  nav: PropTypes__default[\"default\"].bool,\n  active: PropTypes__default[\"default\"].bool,\n  size: PropTypes__default[\"default\"].string,\n  tag: tagPropType,\n  toggle: PropTypes__default[\"default\"].func,\n  children: PropTypes__default[\"default\"].node,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  dropup: PropTypes__default[\"default\"].bool,\n  inNavbar: PropTypes__default[\"default\"].bool,\n  setActiveFromChild: PropTypes__default[\"default\"].bool,\n  menuRole: PropTypes__default[\"default\"].oneOf(['listbox', 'menu'])\n};\nvar defaultProps$15 = {\n  a11y: true,\n  isOpen: false,\n  direction: 'down',\n  nav: false,\n  active: false,\n  inNavbar: false,\n  setActiveFromChild: false\n};\nvar preventDefaultKeys = [keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down, keyCodes.end, keyCodes.home];\n\nvar Dropdown = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Dropdown, _React$Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.addEvents = _this.addEvents.bind(_assertThisInitialized(_this));\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    _this.removeEvents = _this.removeEvents.bind(_assertThisInitialized(_this));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.handleMenuRef = _this.handleMenuRef.bind(_assertThisInitialized(_this));\n    _this.handleToggleRef = _this.handleToggleRef.bind(_assertThisInitialized(_this));\n    _this.containerRef = React__default[\"default\"].createRef();\n    _this.menuRef = React__default[\"default\"].createRef();\n    _this.toggleRef = React__default[\"default\"].createRef(); // ref for DropdownToggle\n\n    return _this;\n  }\n\n  var _proto = Dropdown.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.handleProps();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.isOpen !== prevProps.isOpen) {\n      this.handleProps();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removeEvents();\n  };\n\n  _proto.handleMenuRef = function handleMenuRef(menuRef) {\n    this.menuRef.current = menuRef;\n  };\n\n  _proto.handleToggleRef = function handleToggleRef(toggleRef) {\n    this.toggleRef.current = toggleRef;\n  };\n\n  _proto.handleDocumentClick = function handleDocumentClick(e) {\n    if (e && (e.which === 3 || e.type === 'keyup' && e.which !== keyCodes.tab)) return;\n    var container = this.getContainer();\n    var menu = this.getMenu();\n    var toggle = this.getToggle();\n    var targetIsToggle = e.target === toggle;\n    var clickIsInMenu = menu && menu.contains(e.target) && menu !== e.target;\n    var clickIsInInput = false;\n\n    if (container) {\n      // this is only for InputGroup with type dropdown\n      clickIsInInput = container.classList.contains('input-group') && container.classList.contains('dropdown') && e.target.tagName === 'INPUT';\n    }\n\n    if ((targetIsToggle && !clickIsInInput || clickIsInMenu) && (e.type !== 'keyup' || e.which === keyCodes.tab)) {\n      return;\n    }\n\n    this.toggle(e);\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(e) {\n    var _this2 = this;\n\n    var isTargetMenuItem = e.target.getAttribute('role') === 'menuitem' || e.target.getAttribute('role') === 'option';\n    var isTargetMenuCtrl = this.getMenuCtrl() === e.target;\n    var isTab = keyCodes.tab === e.which;\n\n    if (/input|textarea/i.test(e.target.tagName) || isTab && !this.props.a11y || isTab && !(isTargetMenuItem || isTargetMenuCtrl)) {\n      return;\n    }\n\n    if (preventDefaultKeys.indexOf(e.which) !== -1 || e.which >= 48 && e.which <= 90) {\n      e.preventDefault();\n    }\n\n    if (this.props.disabled) return;\n\n    if (isTargetMenuCtrl) {\n      if ([keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down].indexOf(e.which) > -1) {\n        // Open the menu (if not open) and focus the first menu item\n        if (!this.props.isOpen) {\n          this.toggle(e);\n        }\n\n        setTimeout(function () {\n          return _this2.getMenuItems()[0].focus();\n        });\n      } else if (this.props.isOpen && isTab) {\n        // Focus the first menu item if tabbing from an open menu. We need this\n        // for cases where the DropdownMenu sets a custom container, which may\n        // not be the natural next item to tab to from the DropdownToggle.\n        e.preventDefault();\n        this.getMenuItems()[0].focus();\n      } else if (this.props.isOpen && e.which === keyCodes.esc) {\n        this.toggle(e);\n      }\n    }\n\n    if (this.props.isOpen && isTargetMenuItem) {\n      if ([keyCodes.tab, keyCodes.esc].indexOf(e.which) > -1) {\n        this.toggle(e);\n        this.getMenuCtrl().focus();\n      } else if ([keyCodes.space, keyCodes.enter].indexOf(e.which) > -1) {\n        e.target.click();\n        this.getMenuCtrl().focus();\n      } else if ([keyCodes.down, keyCodes.up].indexOf(e.which) > -1 || [keyCodes.n, keyCodes.p].indexOf(e.which) > -1 && e.ctrlKey) {\n        var $menuitems = this.getMenuItems();\n        var index = $menuitems.indexOf(e.target);\n\n        if (keyCodes.up === e.which || keyCodes.p === e.which && e.ctrlKey) {\n          index = index !== 0 ? index - 1 : $menuitems.length - 1;\n        } else if (keyCodes.down === e.which || keyCodes.n === e.which && e.ctrlKey) {\n          index = index === $menuitems.length - 1 ? 0 : index + 1;\n        }\n\n        $menuitems[index].focus();\n      } else if (keyCodes.end === e.which) {\n        var _$menuitems = this.getMenuItems();\n\n        _$menuitems[_$menuitems.length - 1].focus();\n      } else if (keyCodes.home === e.which) {\n        var _$menuitems2 = this.getMenuItems();\n\n        _$menuitems2[0].focus();\n      } else if (e.which >= 48 && e.which <= 90) {\n        var _$menuitems3 = this.getMenuItems();\n\n        var charPressed = String.fromCharCode(e.which).toLowerCase();\n\n        for (var i = 0; i < _$menuitems3.length; i += 1) {\n          var firstLetter = _$menuitems3[i].textContent && _$menuitems3[i].textContent[0].toLowerCase();\n\n          if (firstLetter === charPressed) {\n            _$menuitems3[i].focus();\n\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  _proto.handleProps = function handleProps() {\n    if (this.props.isOpen) {\n      this.addEvents();\n    } else {\n      this.removeEvents();\n    }\n  };\n\n  _proto.getContextValue = function getContextValue() {\n    return {\n      toggle: this.toggle,\n      isOpen: this.props.isOpen,\n      direction: this.props.direction === 'down' && this.props.dropup ? 'up' : this.props.direction,\n      inNavbar: this.props.inNavbar,\n      disabled: this.props.disabled,\n      // Callback that should be called by DropdownMenu to provide a ref to\n      // a HTML tag that's used for the DropdownMenu\n      onMenuRef: this.handleMenuRef,\n      onToggleRef: this.handleToggleRef,\n      menuRole: this.props.menuRole\n    };\n  };\n\n  _proto.getContainer = function getContainer() {\n    return this.containerRef.current;\n  };\n\n  _proto.getMenu = function getMenu() {\n    return this.menuRef.current;\n  };\n\n  _proto.getToggle = function getToggle() {\n    return this.toggleRef.current;\n  };\n\n  _proto.getMenuCtrl = function getMenuCtrl() {\n    if (this._$menuCtrl) return this._$menuCtrl;\n    this._$menuCtrl = this.getToggle();\n    return this._$menuCtrl;\n  };\n\n  _proto.getItemType = function getItemType() {\n    if (this.props.menuRole === 'listbox') {\n      return 'option';\n    }\n\n    return 'menuitem';\n  };\n\n  _proto.getMenuItems = function getMenuItems() {\n    // In a real menu with a child DropdownMenu, `this.getMenu()` should never\n    // be null, but it is sometimes null in tests. To mitigate that, we just\n    // use `this.getContainer()` as the fallback `menuContainer`.\n    var menuContainer = this.getMenu() || this.getContainer();\n    return [].slice.call(menuContainer.querySelectorAll(\"[role=\\\"\" + this.getItemType() + \"\\\"]\"));\n  };\n\n  _proto.addEvents = function addEvents() {\n    var _this3 = this;\n\n    ['click', 'touchstart', 'keyup'].forEach(function (event) {\n      return document.addEventListener(event, _this3.handleDocumentClick, true);\n    });\n  };\n\n  _proto.removeEvents = function removeEvents() {\n    var _this4 = this;\n\n    ['click', 'touchstart', 'keyup'].forEach(function (event) {\n      return document.removeEventListener(event, _this4.handleDocumentClick, true);\n    });\n  };\n\n  _proto.toggle = function toggle(e) {\n    if (this.props.disabled) {\n      return e && e.preventDefault();\n    }\n\n    return this.props.toggle(e);\n  };\n\n  _proto.render = function render() {\n    var _classNames,\n        _this5 = this,\n        _ref;\n\n    var _omit = omit(this.props, ['toggle', 'disabled', 'inNavbar', 'a11y']),\n        className = _omit.className,\n        cssModule = _omit.cssModule,\n        direction = _omit.direction,\n        isOpen = _omit.isOpen,\n        group = _omit.group,\n        size = _omit.size,\n        nav = _omit.nav,\n        setActiveFromChild = _omit.setActiveFromChild,\n        active = _omit.active,\n        tag = _omit.tag,\n        attrs = _objectWithoutPropertiesLoose(_omit, _excluded$12);\n\n    var Tag = tag || (nav ? 'li' : 'div');\n    var subItemIsActive = false;\n\n    if (setActiveFromChild) {\n      React__default[\"default\"].Children.map(this.props.children[1].props.children, function (dropdownItem) {\n        if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;\n      });\n    }\n\n    var classes = mapToCssModules(classNames__default[\"default\"](className, nav && active ? 'active' : false, setActiveFromChild && subItemIsActive ? 'active' : false, (_classNames = {\n      'btn-group': group\n    }, _classNames[\"btn-group-\" + size] = !!size, _classNames.dropdown = !group, _classNames.dropup = direction === 'up', _classNames.dropstart = direction === 'start' || direction === 'left', _classNames.dropend = direction === 'end' || direction === 'right', _classNames.show = isOpen, _classNames['nav-item'] = nav, _classNames)), cssModule);\n\n    if (this.context.insideInputGroup) {\n      return /*#__PURE__*/React__default[\"default\"].createElement(DropdownContext.Provider, {\n        value: this.getContextValue()\n      }, /*#__PURE__*/React__default[\"default\"].createElement(reactPopper.Manager, null, React__default[\"default\"].Children.map(this.props.children, function (child) {\n        return React__default[\"default\"].cloneElement(child, {\n          onKeyDown: _this5.handleKeyDown\n        });\n      })));\n    }\n\n    return /*#__PURE__*/React__default[\"default\"].createElement(DropdownContext.Provider, {\n      value: this.getContextValue()\n    }, /*#__PURE__*/React__default[\"default\"].createElement(reactPopper.Manager, null, /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attrs, (_ref = {}, _ref[typeof Tag === 'string' ? 'ref' : 'innerRef'] = this.containerRef, _ref), {\n      onKeyDown: this.handleKeyDown,\n      className: classes\n    }))));\n  };\n\n  return Dropdown;\n}(React__default[\"default\"].Component);\n\nDropdown.propTypes = propTypes$17;\nDropdown.defaultProps = defaultProps$15;\nDropdown.contextType = InputGroupContext;\nvar Dropdown$1 = Dropdown;\n\nvar propTypes$16 = {\n  children: PropTypes__default[\"default\"].node\n};\n\nfunction ButtonDropdown(props) {\n  return /*#__PURE__*/React__default[\"default\"].createElement(Dropdown$1, _extends({\n    group: true\n  }, props));\n}\n\nButtonDropdown.propTypes = propTypes$16;\n\nvar _excluded$11 = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\nvar propTypes$15 = {\n  /** Aria label */\n  'aria-label': PropTypes__default[\"default\"].string,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** In order for assistive technologies (such as screen readers) to convey that a series of buttons is grouped, an appropriate role attribute needs to be provided. For button groups, this would be role=\"group\", while toolbars should have a role=\"toolbar\". */\n  role: PropTypes__default[\"default\"].string,\n\n  /** Make the button bigger or smaller */\n  size: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Make button group vertical */\n  vertical: PropTypes__default[\"default\"].bool\n};\nvar defaultProps$14 = {\n  tag: 'div',\n  role: 'group'\n};\n\nfunction ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$11);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nButtonGroup.propTypes = propTypes$15;\nButtonGroup.defaultProps = defaultProps$14;\n\nvar _excluded$10 = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$14 = {\n  /** Aria label */\n  'aria-label': PropTypes__default[\"default\"].string,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** In order for assistive technologies (such as screen readers) to convey that a series of buttons is grouped, an appropriate role attribute needs to be provided. For button groups, this would be role=\"group\", while toolbars should have a role=\"toolbar\". */\n  role: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$13 = {\n  tag: 'div',\n  role: 'toolbar'\n};\n\nfunction ButtonToolbar(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$10);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'btn-toolbar'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nButtonToolbar.propTypes = propTypes$14;\nButtonToolbar.defaultProps = defaultProps$13;\n\nvar _excluded$$ = [\"className\", \"cssModule\", \"divider\", \"tag\", \"header\", \"active\", \"text\"];\nvar propTypes$13 = {\n  children: PropTypes__default[\"default\"].node,\n  active: PropTypes__default[\"default\"].bool,\n  disabled: PropTypes__default[\"default\"].bool,\n  divider: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  header: PropTypes__default[\"default\"].bool,\n  onClick: PropTypes__default[\"default\"].func,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  toggle: PropTypes__default[\"default\"].bool,\n  text: PropTypes__default[\"default\"].bool\n};\nvar defaultProps$12 = {\n  tag: 'button',\n  toggle: true\n};\n\nvar DropdownItem = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DropdownItem, _React$Component);\n\n  function DropdownItem(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.getTabIndex = _this.getTabIndex.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = DropdownItem.prototype;\n\n  _proto.onClick = function onClick(e) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        header = _this$props.header,\n        divider = _this$props.divider,\n        text = _this$props.text;\n\n    if (disabled || header || divider || text) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.props.toggle) {\n      this.context.toggle(e);\n    }\n  };\n\n  _proto.getRole = function getRole() {\n    if (this.context.menuRole === 'listbox') {\n      return 'option';\n    }\n\n    return 'menuitem';\n  };\n\n  _proto.getTabIndex = function getTabIndex() {\n    var _this$props2 = this.props,\n        disabled = _this$props2.disabled,\n        header = _this$props2.header,\n        divider = _this$props2.divider,\n        text = _this$props2.text;\n\n    if (disabled || header || divider || text) {\n      return '-1';\n    }\n\n    return '0';\n  };\n\n  _proto.render = function render() {\n    var tabIndex = this.getTabIndex();\n    var role = tabIndex > -1 ? this.getRole() : undefined;\n\n    var _omit = omit(this.props, ['toggle']),\n        className = _omit.className,\n        cssModule = _omit.cssModule,\n        divider = _omit.divider,\n        Tag = _omit.tag,\n        header = _omit.header,\n        active = _omit.active,\n        text = _omit.text,\n        props = _objectWithoutPropertiesLoose(_omit, _excluded$$);\n\n    var classes = mapToCssModules(classNames__default[\"default\"](className, {\n      disabled: props.disabled,\n      'dropdown-item': !divider && !header && !text,\n      active: active,\n      'dropdown-header': header,\n      'dropdown-divider': divider,\n      'dropdown-item-text': text\n    }), cssModule);\n\n    if (Tag === 'button') {\n      if (header) {\n        Tag = 'h6';\n      } else if (divider) {\n        Tag = 'div';\n      } else if (props.href) {\n        Tag = 'a';\n      } else if (text) {\n        Tag = 'span';\n      }\n    }\n\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n      type: Tag === 'button' && (props.onClick || this.props.toggle) ? 'button' : undefined\n    }, props, {\n      tabIndex: tabIndex,\n      role: role,\n      className: classes,\n      onClick: this.onClick\n    }));\n  };\n\n  return DropdownItem;\n}(React__default[\"default\"].Component);\n\nDropdownItem.propTypes = propTypes$13;\nDropdownItem.defaultProps = defaultProps$12;\nDropdownItem.contextType = DropdownContext;\nvar DropdownItem$1 = DropdownItem;\n\nvar _excluded$_ = [\"className\", \"cssModule\", \"dark\", \"end\", \"right\", \"tag\", \"flip\", \"modifiers\", \"persist\", \"strategy\", \"container\", \"updateOnSelect\"];\nvar propTypes$12 = {\n  tag: tagPropType,\n  children: PropTypes__default[\"default\"].node.isRequired,\n  dark: PropTypes__default[\"default\"].bool,\n  end: PropTypes__default[\"default\"].bool,\n\n  /** Flips the menu to the opposite side if there is not enough space to fit */\n  flip: PropTypes__default[\"default\"].bool,\n  modifiers: PropTypes__default[\"default\"].array,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  style: PropTypes__default[\"default\"].object,\n  persist: PropTypes__default[\"default\"].bool,\n  strategy: PropTypes__default[\"default\"].string,\n  container: targetPropType,\n\n  /** Update popper layout when a click event comes up. This leverages event bubbling. */\n  updateOnSelect: PropTypes__default[\"default\"].bool,\n  right: deprecated(PropTypes__default[\"default\"].bool, 'Please use \"end\" instead.')\n};\nvar defaultProps$11 = {\n  tag: 'div',\n  flip: true,\n  modifiers: []\n};\nvar directionPositionMap = {\n  up: 'top',\n  left: 'left',\n  right: 'right',\n  start: 'left',\n  end: 'right',\n  down: 'bottom'\n};\n\nvar DropdownMenu = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DropdownMenu, _React$Component);\n\n  function DropdownMenu() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DropdownMenu.prototype;\n\n  _proto.getRole = function getRole() {\n    if (this.context.menuRole === 'listbox') {\n      return 'listbox';\n    }\n\n    return 'menu';\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        dark = _this$props.dark,\n        end = _this$props.end,\n        right = _this$props.right,\n        tag = _this$props.tag,\n        flip = _this$props.flip,\n        modifiers = _this$props.modifiers,\n        persist = _this$props.persist,\n        strategy = _this$props.strategy,\n        container = _this$props.container,\n        updateOnSelect = _this$props.updateOnSelect,\n        attrs = _objectWithoutPropertiesLoose(_this$props, _excluded$_);\n\n    var classes = mapToCssModules(classNames__default[\"default\"](className, 'dropdown-menu', {\n      'dropdown-menu-dark': dark,\n      'dropdown-menu-end': end || right,\n      show: this.context.isOpen\n    }), cssModule);\n    var Tag = tag;\n\n    if (persist || this.context.isOpen && !this.context.inNavbar) {\n      var position1 = directionPositionMap[this.context.direction] || 'bottom';\n      var position2 = end || right ? 'end' : 'start';\n      var poperPlacement = position1 + \"-\" + position2;\n      var poperModifiers = [].concat(modifiers, [{\n        name: 'flip',\n        enabled: !!flip\n      }]);\n      var popper = /*#__PURE__*/React__default[\"default\"].createElement(reactPopper.Popper, {\n        placement: poperPlacement,\n        modifiers: poperModifiers,\n        strategy: strategy\n      }, function (_ref) {\n        var ref = _ref.ref,\n            style = _ref.style,\n            placement = _ref.placement,\n            update = _ref.update;\n\n        var combinedStyle = _objectSpread2(_objectSpread2({}, _this.props.style), style);\n\n        var handleRef = function handleRef(tagRef) {\n          // Send the ref to `react-popper`\n          ref(tagRef); // Send the ref to the parent Dropdown so that clicks outside\n          // it will cause it to close\n\n          var onMenuRef = _this.context.onMenuRef;\n          if (onMenuRef) onMenuRef(tagRef);\n        };\n\n        return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n          tabIndex: \"-1\",\n          role: _this.getRole(),\n          ref: handleRef\n        }, attrs, {\n          style: combinedStyle,\n          \"aria-hidden\": !_this.context.isOpen,\n          className: classes,\n          \"data-popper-placement\": placement,\n          onClick: function onClick() {\n            return updateOnSelect && update();\n          }\n        }));\n      });\n\n      if (container) {\n        return ReactDOM__default[\"default\"].createPortal(popper, getTarget(container));\n      }\n\n      return popper;\n    }\n\n    var onMenuRef = this.context.onMenuRef;\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n      tabIndex: \"-1\",\n      role: this.getRole()\n    }, attrs, {\n      ref: onMenuRef,\n      \"aria-hidden\": !this.context.isOpen,\n      className: classes,\n      \"data-popper-placement\": attrs.placement\n    }));\n  };\n\n  return DropdownMenu;\n}(React__default[\"default\"].Component);\n\nDropdownMenu.propTypes = propTypes$12;\nDropdownMenu.defaultProps = defaultProps$11;\nDropdownMenu.contextType = DropdownContext;\nvar DropdownMenu$1 = DropdownMenu;\n\nvar _excluded$Z = [\"className\", \"color\", \"cssModule\", \"caret\", \"split\", \"nav\", \"tag\", \"innerRef\"];\nvar propTypes$11 = {\n  caret: PropTypes__default[\"default\"].bool,\n  color: PropTypes__default[\"default\"].string,\n  children: PropTypes__default[\"default\"].node,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  disabled: PropTypes__default[\"default\"].bool,\n  onClick: PropTypes__default[\"default\"].func,\n  'aria-haspopup': PropTypes__default[\"default\"].bool,\n  split: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  nav: PropTypes__default[\"default\"].bool,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func])\n};\nvar defaultProps$10 = {\n  color: 'secondary',\n  'aria-haspopup': true\n};\n\nvar DropdownToggle = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled || this.context.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.context.toggle(e);\n  };\n\n  _proto.getRole = function getRole() {\n    return this.context.menuRole || this.props['aria-haspopup'];\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        color = _this$props.color,\n        cssModule = _this$props.cssModule,\n        caret = _this$props.caret,\n        split = _this$props.split,\n        nav = _this$props.nav,\n        tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        props = _objectWithoutPropertiesLoose(_this$props, _excluded$Z);\n\n    var ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n    var classes = mapToCssModules(classNames__default[\"default\"](className, {\n      'dropdown-toggle': caret || split,\n      'dropdown-toggle-split': split,\n      'nav-link': nav\n    }), cssModule);\n    var children = typeof props.children !== 'undefined' ? props.children : /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n      className: \"visually-hidden\"\n    }, ariaLabel);\n    var Tag;\n\n    if (nav && !tag) {\n      Tag = 'a';\n      props.href = '#';\n    } else if (!tag) {\n      Tag = Button;\n      props.color = color;\n      props.cssModule = cssModule;\n    } else {\n      Tag = tag;\n    }\n\n    if (this.context.inNavbar) {\n      return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, props, {\n        className: classes,\n        onClick: this.onClick,\n        ref: this.context.onToggleRef,\n        \"aria-expanded\": this.context.isOpen,\n        \"aria-haspopup\": this.getRole(),\n        children: children\n      }));\n    }\n\n    return /*#__PURE__*/React__default[\"default\"].createElement(reactPopper.Reference, {\n      innerRef: innerRef\n    }, function (_ref) {\n      var _ref2;\n\n      var ref = _ref.ref;\n\n      var handleRef = function handleRef(tagRef) {\n        ref(tagRef);\n        var onToggleRef = _this2.context.onToggleRef;\n        if (onToggleRef) onToggleRef(tagRef);\n      };\n\n      return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, props, (_ref2 = {}, _ref2[typeof Tag === 'string' ? 'ref' : 'innerRef'] = handleRef, _ref2), {\n        className: classes,\n        onClick: _this2.onClick,\n        \"aria-expanded\": _this2.context.isOpen,\n        \"aria-haspopup\": _this2.getRole(),\n        children: children\n      }));\n    });\n  };\n\n  return DropdownToggle;\n}(React__default[\"default\"].Component);\n\nDropdownToggle.propTypes = propTypes$11;\nDropdownToggle.defaultProps = defaultProps$10;\nDropdownToggle.contextType = DropdownContext;\nvar DropdownToggle$1 = DropdownToggle;\n\nvar _excluded$Y = [\"tag\", \"baseClass\", \"baseClassActive\", \"className\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar propTypes$10 = _objectSpread2(_objectSpread2({}, reactTransitionGroup.Transition.propTypes), {}, {\n  children: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].arrayOf(PropTypes__default[\"default\"].node), PropTypes__default[\"default\"].node]),\n  tag: tagPropType,\n  baseClass: PropTypes__default[\"default\"].string,\n  baseClassActive: PropTypes__default[\"default\"].string,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func])\n});\n\nvar defaultProps$$ = _objectSpread2(_objectSpread2({}, reactTransitionGroup.Transition.defaultProps), {}, {\n  tag: 'div',\n  baseClass: 'fade',\n  baseClassActive: 'show',\n  timeout: TransitionTimeouts.Fade,\n  appear: true,\n  enter: true,\n  exit: true,\n  \"in\": true\n});\n\nfunction Fade(props) {\n  var Tag = props.tag,\n      baseClass = props.baseClass,\n      baseClassActive = props.baseClassActive,\n      className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      innerRef = props.innerRef,\n      otherProps = _objectWithoutPropertiesLoose(props, _excluded$Y);\n\n  var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n  var childProps = omit(otherProps, TransitionPropTypeKeys);\n  return /*#__PURE__*/React__default[\"default\"].createElement(reactTransitionGroup.Transition, transitionProps, function (status) {\n    var isActive = status === 'entered';\n    var classes = mapToCssModules(classNames__default[\"default\"](className, baseClass, isActive && baseClassActive), cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n      className: classes\n    }, childProps, {\n      ref: innerRef\n    }), children);\n  });\n}\n\nFade.propTypes = propTypes$10;\nFade.defaultProps = defaultProps$$;\n\n/**\n * AccordionContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  openId: PropTypes.string,\n * }\n */\n\nvar AccordionContext = React__default[\"default\"].createContext({});\n\nvar _excluded$X = [\"flush\", \"open\", \"toggle\", \"className\", \"cssModule\", \"tag\", \"innerRef\"];\nvar propTypes$$ = {\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Render accordions edge-to-edge with their parent container */\n  flush: PropTypes__default[\"default\"].bool,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** The current active key that corresponds to the currently expanded card */\n  open: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].array, PropTypes__default[\"default\"].string]).isRequired,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Function that's triggered on clicking `AccordionHeader` */\n  toggle: PropTypes__default[\"default\"].func.isRequired\n};\nvar defaultProps$_ = {\n  tag: 'div'\n};\n\nfunction Accordion(props) {\n  var flush = props.flush,\n      open = props.open,\n      toggle = props.toggle,\n      className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$X);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'accordion', {\n    'accordion-flush': flush\n  }), cssModule);\n  var accordionContext = React.useMemo(function () {\n    return {\n      open: open,\n      toggle: toggle\n    };\n  });\n  return /*#__PURE__*/React__default[\"default\"].createElement(AccordionContext.Provider, {\n    value: accordionContext\n  }, /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  })));\n}\n\nAccordion.propTypes = propTypes$$;\nAccordion.defaultProps = defaultProps$_;\n\nvar _excluded$W = [\"defaultOpen\", \"stayOpen\"];\nvar propTypes$_ = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n  children: PropTypes__default[\"default\"].node,\n  defaultOpen: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].array, PropTypes__default[\"default\"].string]),\n  stayOpen: PropTypes__default[\"default\"].bool\n};\nvar defaultProps$Z = {\n  tag: 'div'\n};\n\nfunction UncontrolledAccordion(_ref) {\n  var defaultOpen = _ref.defaultOpen,\n      stayOpen = _ref.stayOpen,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$W);\n\n  var _useState = React.useState(defaultOpen || (stayOpen ? [] : undefined)),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var toggle = function toggle(id) {\n    if (stayOpen) {\n      if (open.includes(id)) {\n        setOpen(open.filter(function (accordionId) {\n          return accordionId !== id;\n        }));\n      } else {\n        setOpen([].concat(open, [id]));\n      }\n    } else if (open === id) {\n      setOpen(undefined);\n    } else {\n      setOpen(id);\n    }\n  };\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Accordion, _extends({}, props, {\n    open: open,\n    toggle: toggle\n  }));\n}\n\nUncontrolledAccordion.propTypes = propTypes$_;\nUncontrolledAccordion.defaultProps = defaultProps$Z;\n\nvar _excluded$V = [\"className\", \"cssModule\", \"tag\", \"innerRef\", \"children\", \"targetId\"];\nvar propTypes$Z = {\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing base class name with a new class name */\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Unique key used to control item's collapse/expand */\n  targetId: PropTypes__default[\"default\"].string.isRequired\n};\nvar defaultProps$Y = {\n  tag: 'h2'\n};\n\nfunction AccordionHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      children = props.children,\n      targetId = props.targetId,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$V);\n\n  var _useContext = React.useContext(AccordionContext),\n      open = _useContext.open,\n      toggle = _useContext.toggle;\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'accordion-header'), cssModule);\n  var buttonClasses = mapToCssModules(classNames__default[\"default\"]('accordion-button', {\n    collapsed: !(Array.isArray(open) ? open.includes(targetId) : open === targetId)\n  }), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }), /*#__PURE__*/React__default[\"default\"].createElement(\"button\", {\n    type: \"button\",\n    className: buttonClasses,\n    onClick: function onClick() {\n      return toggle(targetId);\n    }\n  }, children));\n}\n\nAccordionHeader.propTypes = propTypes$Z;\nAccordionHeader.defaultProps = defaultProps$Y;\n\nvar _excluded$U = [\"className\", \"cssModule\", \"tag\", \"innerRef\"];\nvar propTypes$Y = {\n  children: PropTypes__default[\"default\"].node,\n\n  /** To add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing base class name with a new class name */\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$X = {\n  tag: 'div'\n};\n\nfunction AccordionItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$U);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'accordion-item'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\n\nAccordionItem.propTypes = propTypes$Y;\nAccordionItem.defaultProps = defaultProps$X;\n\nvar _excluded$T = [\"tag\", \"horizontal\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nvar propTypes$X = _objectSpread2(_objectSpread2({}, reactTransitionGroup.Transition.propTypes), {}, {\n  /** Make content animation appear horizontally */\n  horizontal: PropTypes__default[\"default\"].bool,\n\n  /** Set if Collapse is open or closed */\n  isOpen: PropTypes__default[\"default\"].bool,\n  children: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].arrayOf(PropTypes__default[\"default\"].node), PropTypes__default[\"default\"].node]),\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].node,\n  navbar: PropTypes__default[\"default\"].bool,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].shape({\n    current: PropTypes__default[\"default\"].object\n  })\n});\n\nvar defaultProps$W = _objectSpread2(_objectSpread2({}, reactTransitionGroup.Transition.defaultProps), {}, {\n  horizontal: false,\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      dimension: null\n    };\n    _this.nodeRef = props.innerRef || React__default[\"default\"].createRef();\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(_, isAppearing) {\n    var node = this.getNode();\n    this.setState({\n      dimension: this.getDimension(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(_, isAppearing) {\n    var node = this.getNode();\n    this.setState({\n      dimension: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit() {\n    var node = this.getNode();\n    this.setState({\n      dimension: this.getDimension(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting() {\n    var node = this.getNode(); // getting this variable triggers a reflow\n\n    this.getDimension(node); // eslint-disable-line no-unused-vars\n\n\n    this.setState({\n      dimension: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited() {\n    var node = this.getNode();\n    this.setState({\n      dimension: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.getNode = function getNode() {\n    return this.nodeRef.current;\n  };\n\n  _proto.getDimension = function getDimension(node) {\n    return this.props.horizontal ? node.scrollWidth : node.scrollHeight;\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        horizontal = _this$props.horizontal,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded$T);\n\n    var dimension = this.state.dimension;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React__default[\"default\"].createElement(reactTransitionGroup.Transition, _extends({}, transitionProps, {\n      \"in\": isOpen,\n      nodeRef: this.nodeRef,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var _ref;\n\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames__default[\"default\"](className, horizontal && 'collapse-horizontal', collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = dimension === null ? null : (_ref = {}, _ref[horizontal ? 'width' : 'height'] = dimension, _ref);\n      return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread2(_objectSpread2({}, childProps.style), style),\n        className: classes,\n        ref: _this2.nodeRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(React.Component);\n\nCollapse.propTypes = propTypes$X;\nCollapse.defaultProps = defaultProps$W;\nvar Collapse$1 = Collapse;\n\nvar _excluded$S = [\"className\", \"cssModule\", \"tag\", \"innerRef\", \"children\", \"accordionId\"];\nvar propTypes$W = {\n  /** Unique key used to control item's collapse/expand */\n  accordionId: PropTypes__default[\"default\"].string.isRequired,\n\n  /** To add custom class */\n  className: PropTypes__default[\"default\"].string,\n  children: PropTypes__default[\"default\"].node,\n\n  /** Change existing base class name with a new class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Pass ref to the component */\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$V = {\n  tag: 'div'\n};\n\nfunction AccordionBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      children = props.children,\n      accordionId = props.accordionId,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$S);\n\n  var _useContext = React.useContext(AccordionContext),\n      open = _useContext.open;\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'accordion-collapse'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Collapse$1, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef,\n    isOpen: Array.isArray(open) ? open.includes(accordionId) : open === accordionId\n  }), /*#__PURE__*/React__default[\"default\"].createElement(Tag, {\n    className: \"accordion-body\"\n  }, children));\n}\n\nAccordionBody.propTypes = propTypes$W;\nAccordionBody.defaultProps = defaultProps$V;\n\nvar _excluded$R = [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"];\nvar propTypes$V = {\n  /** Pass children so this component can wrap the child elements */\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change background color of Badge */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n\n  /** Add rounded corners to the Badge */\n  pill: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$U = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nfunction Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$R);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'badge', 'bg-' + color, pill ? 'rounded-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\n\nBadge.propTypes = propTypes$V;\nBadge.defaultProps = defaultProps$U;\n\nvar _excluded$Q = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nvar propTypes$U = {\n  /** Toggles card padding using `.card-body` */\n  body: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change background color of component */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** Inverts the color */\n  inverse: PropTypes__default[\"default\"].bool,\n\n  /** Changes the card to have only outline */\n  outline: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$T = {\n  tag: 'div'\n};\n\nfunction Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$Q);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\n\nCard.propTypes = propTypes$U;\nCard.defaultProps = defaultProps$T;\n\nvar _excluded$P = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$T = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$S = {\n  tag: 'div'\n};\n\nfunction CardGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$P);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-group'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardGroup.propTypes = propTypes$T;\nCardGroup.defaultProps = defaultProps$S;\n\nvar _excluded$O = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$S = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$R = {\n  tag: 'div'\n};\n\nfunction CardDeck(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$O);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-deck'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardDeck.propTypes = propTypes$S;\nCardDeck.defaultProps = defaultProps$R;\n\nvar _excluded$N = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$R = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$Q = {\n  tag: 'div'\n};\n\nfunction CardColumns(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$N);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-columns'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardColumns.propTypes = propTypes$R;\nCardColumns.defaultProps = defaultProps$Q;\n\nvar _excluded$M = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nvar propTypes$Q = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$P = {\n  tag: 'div'\n};\n\nfunction CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$M);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-body'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\n\nCardBody.propTypes = propTypes$Q;\nCardBody.defaultProps = defaultProps$P;\n\nvar _excluded$L = [\"className\", \"cssModule\", \"tag\", \"innerRef\"];\nvar propTypes$P = {\n  tag: tagPropType,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$O = {\n  tag: 'a'\n};\n\nfunction CardLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$L);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-link'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n}\n\nCardLink.propTypes = propTypes$P;\nCardLink.defaultProps = defaultProps$O;\n\nvar _excluded$K = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$O = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$N = {\n  tag: 'div'\n};\n\nfunction CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$K);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardFooter.propTypes = propTypes$O;\nCardFooter.defaultProps = defaultProps$N;\n\nvar _excluded$J = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$N = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$M = {\n  tag: 'div'\n};\n\nfunction CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$J);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-header'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardHeader.propTypes = propTypes$N;\nCardHeader.defaultProps = defaultProps$M;\n\nvar _excluded$I = [\"className\", \"cssModule\", \"top\", \"bottom\", \"tag\"];\nvar propTypes$M = {\n  /** Add `bottom` prop if image is at bottom of card */\n  bottom: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Add `top` prop if image is at top of card */\n  top: PropTypes__default[\"default\"].bool\n};\nvar defaultProps$L = {\n  tag: 'img'\n};\n\nfunction CardImg(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      top = props.top,\n      bottom = props.bottom,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$I);\n\n  var cardImgClassName = 'card-img';\n\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, cardImgClassName), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardImg.propTypes = propTypes$M;\nCardImg.defaultProps = defaultProps$L;\n\nvar _excluded$H = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$L = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$K = {\n  tag: 'div'\n};\n\nfunction CardImgOverlay(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$H);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-img-overlay'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardImgOverlay.propTypes = propTypes$L;\nCardImgOverlay.defaultProps = defaultProps$K;\n\n/**\n * CarouselContext\n * {\n *  direction: PropTypes.oneOf(['start', 'end']).isRequired,\n * }\n */\n\nvar CarouselContext = React__default[\"default\"].createContext({});\n\nvar _excluded$G = [\"in\", \"children\", \"cssModule\", \"slide\", \"tag\", \"className\"];\n\nvar CarouselItem = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CarouselItem, _React$Component);\n\n  function CarouselItem(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      startAnimation: false\n    };\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    _this.onEntering = _this.onEntering.bind(_assertThisInitialized(_this));\n    _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n    _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));\n    _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = CarouselItem.prototype;\n\n  _proto.onEnter = function onEnter(node, isAppearing) {\n    this.setState({\n      startAnimation: false\n    });\n    this.props.onEnter(node, isAppearing);\n  };\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    // getting this variable triggers a reflow\n    var offsetHeight = node.offsetHeight;\n    this.setState({\n      startAnimation: true\n    });\n    this.props.onEntering(node, isAppearing);\n    return offsetHeight;\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      startAnimation: false\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    this.setState({\n      startAnimation: true\n    });\n    node.dispatchEvent(new CustomEvent('slide.bs.carousel'));\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    node.dispatchEvent(new CustomEvent('slid.bs.carousel'));\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        isIn = _this$props[\"in\"],\n        children = _this$props.children,\n        cssModule = _this$props.cssModule,\n        slide = _this$props.slide,\n        Tag = _this$props.tag,\n        className = _this$props.className,\n        transitionProps = _objectWithoutPropertiesLoose(_this$props, _excluded$G);\n\n    return /*#__PURE__*/React__default[\"default\"].createElement(reactTransitionGroup.Transition, _extends({}, transitionProps, {\n      enter: slide,\n      exit: slide,\n      \"in\": isIn,\n      onEnter: this.onEnter,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var direction = _this2.context.direction;\n      var isActive = status === TransitionStatuses.ENTERED || status === TransitionStatuses.EXITING;\n      var directionClassName = (status === TransitionStatuses.ENTERING || status === TransitionStatuses.EXITING) && _this2.state.startAnimation && (direction === 'end' ? 'carousel-item-start' : 'carousel-item-end');\n      var orderClassName = status === TransitionStatuses.ENTERING && (direction === 'end' ? 'carousel-item-next' : 'carousel-item-prev');\n      var itemClasses = mapToCssModules(classNames__default[\"default\"](className, 'carousel-item', isActive && 'active', directionClassName, orderClassName), cssModule);\n      return /*#__PURE__*/React__default[\"default\"].createElement(Tag, {\n        className: itemClasses\n      }, children);\n    });\n  };\n\n  return CarouselItem;\n}(React__default[\"default\"].Component);\n\nCarouselItem.propTypes = _objectSpread2(_objectSpread2({}, reactTransitionGroup.Transition.propTypes), {}, {\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  \"in\": PropTypes__default[\"default\"].bool,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n  children: PropTypes__default[\"default\"].node,\n\n  /** Enable/disable animation */\n  slide: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string\n});\nCarouselItem.defaultProps = _objectSpread2(_objectSpread2({}, reactTransitionGroup.Transition.defaultProps), {}, {\n  tag: 'div',\n  timeout: TransitionTimeouts.Carousel,\n  slide: true\n});\nCarouselItem.contextType = CarouselContext;\nvar CarouselItem$1 = CarouselItem;\n\nvar SWIPE_THRESHOLD = 40;\nvar propTypes$K = {\n  /** the current active slide of the carousel */\n  activeIndex: PropTypes__default[\"default\"].number,\n\n  /** a function which should advance the carousel to the next slide (via activeIndex) */\n  next: PropTypes__default[\"default\"].func.isRequired,\n\n  /** a function which should advance the carousel to the previous slide (via activeIndex) */\n  previous: PropTypes__default[\"default\"].func.isRequired,\n\n  /** controls if the left and right arrow keys should control the carousel */\n  keyboard: PropTypes__default[\"default\"].bool,\n\n  /** If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n   * mouseleave. If set to false, hovering over the carousel won't pause it.\n   */\n  pause: PropTypes__default[\"default\"].oneOf(['hover', false]),\n\n  /** Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load. */\n  ride: PropTypes__default[\"default\"].oneOf(['carousel']),\n\n  /** the interval at which the carousel automatically cycles */\n  interval: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].bool]),\n  children: PropTypes__default[\"default\"].array,\n\n  /** called when the mouse enters the Carousel */\n  mouseEnter: PropTypes__default[\"default\"].func,\n\n  /** called when the mouse exits the Carousel */\n  mouseLeave: PropTypes__default[\"default\"].func,\n\n  /** controls whether the slide animation on the Carousel works or not */\n  slide: PropTypes__default[\"default\"].bool,\n\n  /** make the controls, indicators and captions dark on the Carousel */\n  dark: PropTypes__default[\"default\"].bool,\n  fade: PropTypes__default[\"default\"].bool,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Enable touch support */\n  enableTouch: PropTypes__default[\"default\"].bool\n};\nvar propsToOmit$2 = Object.keys(propTypes$K);\nvar defaultProps$J = {\n  interval: 5000,\n  pause: 'hover',\n  keyboard: true,\n  slide: true,\n  enableTouch: true,\n  fade: false\n};\n\nvar Carousel = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Carousel, _React$Component);\n\n  function Carousel(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_this));\n    _this.renderItems = _this.renderItems.bind(_assertThisInitialized(_this));\n    _this.hoverStart = _this.hoverStart.bind(_assertThisInitialized(_this));\n    _this.hoverEnd = _this.hoverEnd.bind(_assertThisInitialized(_this));\n    _this.handleTouchStart = _this.handleTouchStart.bind(_assertThisInitialized(_this));\n    _this.handleTouchEnd = _this.handleTouchEnd.bind(_assertThisInitialized(_this));\n    _this.touchStartX = 0;\n    _this.touchStartY = 0;\n    _this.state = {\n      activeIndex: _this.props.activeIndex,\n      direction: 'end',\n      indicatorClicked: false\n    };\n    return _this;\n  }\n\n  var _proto = Carousel.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Set up the cycle\n    if (this.props.ride === 'carousel') {\n      this.setInterval();\n    } // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n\n\n    document.addEventListener('keyup', this.handleKeyPress);\n  };\n\n  Carousel.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var newState = null;\n    var activeIndex = prevState.activeIndex,\n        direction = prevState.direction,\n        indicatorClicked = prevState.indicatorClicked;\n\n    if (nextProps.activeIndex !== activeIndex) {\n      // Calculate the direction to turn\n      if (nextProps.activeIndex === activeIndex + 1) {\n        direction = 'end';\n      } else if (nextProps.activeIndex === activeIndex - 1) {\n        direction = 'start';\n      } else if (nextProps.activeIndex < activeIndex) {\n        direction = indicatorClicked ? 'start' : 'end';\n      } else if (nextProps.activeIndex !== activeIndex) {\n        direction = indicatorClicked ? 'end' : 'start';\n      }\n\n      newState = {\n        activeIndex: nextProps.activeIndex,\n        direction: direction,\n        indicatorClicked: false\n      };\n    }\n\n    return newState;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeIndex === this.state.activeIndex) return;\n    this.setInterval();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearInterval();\n    document.removeEventListener('keyup', this.handleKeyPress);\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(evt) {\n    if (this.props.keyboard) {\n      if (evt.keyCode === 37) {\n        this.props.previous();\n      } else if (evt.keyCode === 39) {\n        this.props.next();\n      }\n    }\n  };\n\n  _proto.handleTouchStart = function handleTouchStart(e) {\n    if (!this.props.enableTouch) {\n      return;\n    }\n\n    this.touchStartX = e.changedTouches[0].screenX;\n    this.touchStartY = e.changedTouches[0].screenY;\n  };\n\n  _proto.handleTouchEnd = function handleTouchEnd(e) {\n    if (!this.props.enableTouch) {\n      return;\n    }\n\n    var currentX = e.changedTouches[0].screenX;\n    var currentY = e.changedTouches[0].screenY;\n    var diffX = Math.abs(this.touchStartX - currentX);\n    var diffY = Math.abs(this.touchStartY - currentY); // Don't swipe if Y-movement is bigger than X-movement\n\n    if (diffX < diffY) {\n      return;\n    }\n\n    if (diffX < SWIPE_THRESHOLD) {\n      return;\n    }\n\n    if (currentX < this.touchStartX) {\n      this.props.next();\n    } else {\n      this.props.previous();\n    }\n  };\n\n  _proto.getContextValue = function getContextValue() {\n    return {\n      direction: this.state.direction\n    };\n  };\n\n  _proto.setInterval = function (_setInterval) {\n    function setInterval() {\n      return _setInterval.apply(this, arguments);\n    }\n\n    setInterval.toString = function () {\n      return _setInterval.toString();\n    };\n\n    return setInterval;\n  }(function () {\n    var _this2 = this;\n\n    // make sure not to have multiple intervals going...\n    this.clearInterval();\n\n    if (this.props.interval) {\n      this.cycleInterval = setInterval(function () {\n        _this2.props.next();\n      }, parseInt(this.props.interval, 10));\n    }\n  });\n\n  _proto.clearInterval = function (_clearInterval) {\n    function clearInterval() {\n      return _clearInterval.apply(this, arguments);\n    }\n\n    clearInterval.toString = function () {\n      return _clearInterval.toString();\n    };\n\n    return clearInterval;\n  }(function () {\n    clearInterval(this.cycleInterval);\n  });\n\n  _proto.hoverStart = function hoverStart() {\n    if (this.props.pause === 'hover') {\n      this.clearInterval();\n    }\n\n    if (this.props.mouseEnter) {\n      var _this$props;\n\n      (_this$props = this.props).mouseEnter.apply(_this$props, [].slice.call(arguments));\n    }\n  };\n\n  _proto.hoverEnd = function hoverEnd() {\n    if (this.props.pause === 'hover') {\n      this.setInterval();\n    }\n\n    if (this.props.mouseLeave) {\n      var _this$props2;\n\n      (_this$props2 = this.props).mouseLeave.apply(_this$props2, [].slice.call(arguments));\n    }\n  };\n\n  _proto.renderItems = function renderItems(carouselItems, className) {\n    var _this3 = this;\n\n    var slide = this.props.slide;\n    return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n      className: className\n    }, carouselItems.map(function (item, index) {\n      var isIn = index === _this3.state.activeIndex;\n      return React__default[\"default\"].cloneElement(item, {\n        \"in\": isIn,\n        slide: slide\n      });\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    var _this$props3 = this.props,\n        cssModule = _this$props3.cssModule,\n        slide = _this$props3.slide,\n        className = _this$props3.className,\n        dark = _this$props3.dark,\n        fade = _this$props3.fade;\n    var attributes = omit(this.props, propsToOmit$2);\n    var outerClasses = mapToCssModules(classNames__default[\"default\"](className, 'carousel', fade && 'carousel-fade', slide && 'slide', dark && 'carousel-dark'), cssModule);\n    var innerClasses = mapToCssModules(classNames__default[\"default\"]('carousel-inner'), cssModule); // filter out booleans, null, or undefined\n\n    var children = this.props.children.filter(function (child) {\n      return child !== null && child !== undefined && typeof child !== 'boolean';\n    });\n    var slidesOnly = children.every(function (child) {\n      return child.type === CarouselItem$1;\n    }); // Rendering only slides\n\n    if (slidesOnly) {\n      return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _extends({}, attributes, {\n        className: outerClasses,\n        onMouseEnter: this.hoverStart,\n        onMouseLeave: this.hoverEnd\n      }), /*#__PURE__*/React__default[\"default\"].createElement(CarouselContext.Provider, {\n        value: this.getContextValue()\n      }, this.renderItems(children, innerClasses)));\n    } // Rendering slides and controls\n\n\n    if (children[0] instanceof Array) {\n      var _carouselItems = children[0];\n      var _controlLeft = children[1];\n      var _controlRight = children[2];\n      return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _extends({}, attributes, {\n        className: outerClasses,\n        onMouseEnter: this.hoverStart,\n        onMouseLeave: this.hoverEnd\n      }), /*#__PURE__*/React__default[\"default\"].createElement(CarouselContext.Provider, {\n        value: this.getContextValue()\n      }, this.renderItems(_carouselItems, innerClasses), _controlLeft, _controlRight));\n    } // Rendering indicators, slides and controls\n\n\n    var indicators = children[0];\n\n    var wrappedOnClick = function wrappedOnClick(e) {\n      if (typeof indicators.props.onClickHandler === 'function') {\n        _this4.setState({\n          indicatorClicked: true\n        }, function () {\n          return indicators.props.onClickHandler(e);\n        });\n      }\n    };\n\n    var wrappedIndicators = React__default[\"default\"].cloneElement(indicators, {\n      onClickHandler: wrappedOnClick\n    });\n    var carouselItems = children[1];\n    var controlLeft = children[2];\n    var controlRight = children[3];\n    return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _extends({}, attributes, {\n      className: outerClasses,\n      onMouseEnter: this.hoverStart,\n      onMouseLeave: this.hoverEnd,\n      onTouchStart: this.handleTouchStart,\n      onTouchEnd: this.handleTouchEnd\n    }), /*#__PURE__*/React__default[\"default\"].createElement(CarouselContext.Provider, {\n      value: this.getContextValue()\n    }, wrappedIndicators, this.renderItems(carouselItems, innerClasses), controlLeft, controlRight));\n  };\n\n  return Carousel;\n}(React__default[\"default\"].Component);\n\nCarousel.propTypes = propTypes$K;\nCarousel.defaultProps = defaultProps$J;\nvar Carousel$1 = Carousel;\n\nvar _excluded$F = [\"direction\", \"onClickHandler\", \"cssModule\", \"directionText\", \"className\"];\n\nfunction CarouselControl(props) {\n  var direction = props.direction,\n      onClickHandler = props.onClickHandler,\n      cssModule = props.cssModule,\n      directionText = props.directionText,\n      className = props.className,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$F);\n\n  var anchorClasses = mapToCssModules(classNames__default[\"default\"](className, \"carousel-control-\" + direction), cssModule);\n  var iconClasses = mapToCssModules(classNames__default[\"default\"](\"carousel-control-\" + direction + \"-icon\"), cssModule);\n  var screenReaderClasses = mapToCssModules(classNames__default[\"default\"]('visually-hidden'), cssModule);\n  return (\n    /*#__PURE__*/\n    // We need to disable this linting rule to use an `<a>` instead of\n    // `<button>` because that's what the Bootstrap examples require:\n    // https://getbootstrap.com/docs/4.5/components/carousel/#with-controls\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    React__default[\"default\"].createElement(\"a\", _extends({}, attributes, {\n      className: anchorClasses,\n      style: {\n        cursor: 'pointer'\n      },\n      role: \"button\",\n      tabIndex: \"0\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        onClickHandler();\n      }\n    }), /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n      className: iconClasses,\n      \"aria-hidden\": \"true\"\n    }), /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n      className: screenReaderClasses\n    }, directionText || direction))\n  );\n}\n\nCarouselControl.propTypes = {\n  /** Set the direction of control button */\n  direction: PropTypes__default[\"default\"].oneOf(['prev', 'next']).isRequired,\n\n  /** Function to be triggered on click */\n  onClickHandler: PropTypes__default[\"default\"].func.isRequired,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Screen reader text */\n  directionText: PropTypes__default[\"default\"].string,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string\n};\n\nvar _excluded$E = [\"items\", \"activeIndex\", \"cssModule\", \"onClickHandler\", \"className\"];\n\nfunction CarouselIndicators(props) {\n  var items = props.items,\n      activeIndex = props.activeIndex,\n      cssModule = props.cssModule,\n      onClickHandler = props.onClickHandler,\n      className = props.className,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$E);\n\n  var listClasses = mapToCssModules(classNames__default[\"default\"](className, 'carousel-indicators'), cssModule);\n  var indicators = items.map(function (item, idx) {\n    var indicatorClasses = mapToCssModules(classNames__default[\"default\"]({\n      active: activeIndex === idx\n    }), cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(\"button\", {\n      \"aria-label\": item.caption,\n      \"data-bs-target\": true,\n      type: \"button\",\n      key: \"\" + (item.key || Object.values(item).join('')),\n      onClick: function onClick(e) {\n        e.preventDefault();\n        onClickHandler(idx);\n      },\n      className: indicatorClasses\n    });\n  });\n  return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _extends({\n    className: listClasses\n  }, attributes), indicators);\n}\n\nCarouselIndicators.propTypes = {\n  /** The current active index */\n  activeIndex: PropTypes__default[\"default\"].number.isRequired,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Array of items to show */\n  items: PropTypes__default[\"default\"].array.isRequired,\n\n  /** Function to be triggered on click */\n  onClickHandler: PropTypes__default[\"default\"].func.isRequired\n};\n\nfunction CarouselCaption(props) {\n  var captionHeader = props.captionHeader,\n      captionText = props.captionText,\n      cssModule = props.cssModule,\n      className = props.className;\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'carousel-caption', 'd-none', 'd-md-block'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n    className: classes\n  }, /*#__PURE__*/React__default[\"default\"].createElement(\"h3\", null, captionHeader), /*#__PURE__*/React__default[\"default\"].createElement(\"p\", null, captionText));\n}\n\nCarouselCaption.propTypes = {\n  /** Heading for the caption */\n  captionHeader: PropTypes__default[\"default\"].node,\n\n  /** Text for caption */\n  captionText: PropTypes__default[\"default\"].node.isRequired,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object\n};\n\nvar _excluded$D = [\"defaultActiveIndex\", \"autoPlay\", \"indicators\", \"controls\", \"items\", \"goToIndex\"];\nvar propTypes$J = {\n  items: PropTypes__default[\"default\"].array.isRequired,\n  indicators: PropTypes__default[\"default\"].bool,\n  controls: PropTypes__default[\"default\"].bool,\n  autoPlay: PropTypes__default[\"default\"].bool,\n  defaultActiveIndex: PropTypes__default[\"default\"].number,\n  activeIndex: PropTypes__default[\"default\"].number,\n  next: PropTypes__default[\"default\"].func,\n  previous: PropTypes__default[\"default\"].func,\n  goToIndex: PropTypes__default[\"default\"].func\n};\n\nvar UncontrolledCarousel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCarousel, _Component);\n\n  function UncontrolledCarousel(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.animating = false;\n    _this.state = {\n      activeIndex: props.defaultActiveIndex || 0\n    };\n    _this.next = _this.next.bind(_assertThisInitialized(_this));\n    _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n    _this.goToIndex = _this.goToIndex.bind(_assertThisInitialized(_this));\n    _this.onExiting = _this.onExiting.bind(_assertThisInitialized(_this));\n    _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledCarousel.prototype;\n\n  _proto.onExiting = function onExiting() {\n    this.animating = true;\n  };\n\n  _proto.onExited = function onExited() {\n    this.animating = false;\n  };\n\n  _proto.next = function next() {\n    var _this2 = this;\n\n    if (this.animating) return;\n    this.setState(function (prevState) {\n      var nextIndex = prevState.activeIndex === _this2.props.items.length - 1 ? 0 : prevState.activeIndex + 1;\n      return {\n        activeIndex: nextIndex\n      };\n    });\n  };\n\n  _proto.previous = function previous() {\n    var _this3 = this;\n\n    if (this.animating) return;\n    this.setState(function (prevState) {\n      var nextIndex = prevState.activeIndex === 0 ? _this3.props.items.length - 1 : prevState.activeIndex - 1;\n      return {\n        activeIndex: nextIndex\n      };\n    });\n  };\n\n  _proto.goToIndex = function goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({\n      activeIndex: newIndex\n    });\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    var _this$props = this.props,\n        autoPlay = _this$props.autoPlay,\n        indicators = _this$props.indicators,\n        controls = _this$props.controls,\n        items = _this$props.items,\n        goToIndex = _this$props.goToIndex,\n        props = _objectWithoutPropertiesLoose(_this$props, _excluded$D);\n\n    var activeIndex = this.state.activeIndex;\n    var slides = items.map(function (item) {\n      var key = item.key || item.src;\n      return /*#__PURE__*/React__default[\"default\"].createElement(CarouselItem$1, {\n        onExiting: _this4.onExiting,\n        onExited: _this4.onExited,\n        key: key\n      }, /*#__PURE__*/React__default[\"default\"].createElement(\"img\", {\n        className: \"d-block w-100\",\n        src: item.src,\n        alt: item.altText\n      }), /*#__PURE__*/React__default[\"default\"].createElement(CarouselCaption, {\n        captionText: item.caption,\n        captionHeader: item.header || item.caption\n      }));\n    });\n    return /*#__PURE__*/React__default[\"default\"].createElement(Carousel$1, _extends({\n      activeIndex: activeIndex,\n      next: this.next,\n      previous: this.previous,\n      ride: autoPlay ? 'carousel' : undefined\n    }, props), indicators && /*#__PURE__*/React__default[\"default\"].createElement(CarouselIndicators, {\n      items: items,\n      activeIndex: props.activeIndex || activeIndex,\n      onClickHandler: goToIndex || this.goToIndex\n    }), slides, controls && /*#__PURE__*/React__default[\"default\"].createElement(CarouselControl, {\n      direction: \"prev\",\n      directionText: \"Previous\",\n      onClickHandler: props.previous || this.previous\n    }), controls && /*#__PURE__*/React__default[\"default\"].createElement(CarouselControl, {\n      direction: \"next\",\n      directionText: \"Next\",\n      onClickHandler: props.next || this.next\n    }));\n  };\n\n  return UncontrolledCarousel;\n}(React.Component);\n\nUncontrolledCarousel.propTypes = propTypes$J;\nUncontrolledCarousel.defaultProps = {\n  controls: true,\n  indicators: true,\n  autoPlay: true\n};\nvar UncontrolledCarousel$1 = UncontrolledCarousel;\n\nvar _excluded$C = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$I = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$I = {\n  tag: 'div'\n};\n\nfunction CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$C);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardSubtitle.propTypes = propTypes$I;\nCardSubtitle.defaultProps = defaultProps$I;\n\nvar _excluded$B = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$H = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$H = {\n  tag: 'p'\n};\n\nfunction CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$B);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-text'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardText.propTypes = propTypes$H;\nCardText.defaultProps = defaultProps$H;\n\nvar _excluded$A = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$G = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$G = {\n  tag: 'div'\n};\n\nfunction CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$A);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'card-title'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nCardTitle.propTypes = propTypes$G;\nCardTitle.defaultProps = defaultProps$G;\n\nvar _excluded$z = [\"cssModule\", \"children\", \"isOpen\", \"flip\", \"target\", \"offset\", \"fallbackPlacements\", \"placementPrefix\", \"arrowClassName\", \"hideArrow\", \"popperClassName\", \"tag\", \"container\", \"modifiers\", \"strategy\", \"boundariesElement\", \"onClosed\", \"fade\", \"transition\", \"placement\"];\n\nfunction noop$2() {}\n\nvar propTypes$F = {\n  children: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].node, PropTypes__default[\"default\"].func]).isRequired,\n  popperClassName: PropTypes__default[\"default\"].string,\n  placement: PropTypes__default[\"default\"].string,\n  placementPrefix: PropTypes__default[\"default\"].string,\n  arrowClassName: PropTypes__default[\"default\"].string,\n  hideArrow: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  isOpen: PropTypes__default[\"default\"].bool,\n  cssModule: PropTypes__default[\"default\"].object,\n  offset: PropTypes__default[\"default\"].arrayOf(PropTypes__default[\"default\"].number),\n  fallbackPlacements: PropTypes__default[\"default\"].array,\n  flip: PropTypes__default[\"default\"].bool,\n  container: targetPropType,\n  target: targetPropType.isRequired,\n  modifiers: PropTypes__default[\"default\"].array,\n  strategy: PropTypes__default[\"default\"].string,\n  boundariesElement: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, DOMElement]),\n  onClosed: PropTypes__default[\"default\"].func,\n  fade: PropTypes__default[\"default\"].bool,\n  transition: PropTypes__default[\"default\"].shape(Fade.propTypes)\n};\nvar defaultProps$F = {\n  boundariesElement: 'scrollParent',\n  placement: 'auto',\n  hideArrow: false,\n  isOpen: false,\n  offset: [0, 0],\n  flip: true,\n  container: 'body',\n  modifiers: [],\n  onClosed: noop$2,\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps)\n};\n\nvar PopperContent = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(PopperContent, _React$Component);\n\n  function PopperContent(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.setTargetNode = _this.setTargetNode.bind(_assertThisInitialized(_this));\n    _this.getTargetNode = _this.getTargetNode.bind(_assertThisInitialized(_this));\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.isOpen\n    };\n    return _this;\n  }\n\n  PopperContent.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.isOpen && !state.isOpen) {\n      return {\n        isOpen: props.isOpen\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = PopperContent.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) {\n      this._element.childNodes[0].focus();\n    }\n  };\n\n  _proto.onClosed = function onClosed() {\n    this.props.onClosed();\n    this.setState({\n      isOpen: false\n    });\n  };\n\n  _proto.getTargetNode = function getTargetNode() {\n    return this.targetNode;\n  };\n\n  _proto.getContainerNode = function getContainerNode() {\n    return getTarget(this.props.container);\n  };\n\n  _proto.getRef = function getRef(ref) {\n    this._element = ref;\n  };\n\n  _proto.setTargetNode = function setTargetNode(node) {\n    this.targetNode = typeof node === 'string' ? getTarget(node) : node;\n  };\n\n  _proto.renderChildren = function renderChildren() {\n    var _this$props = this.props,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        isOpen = _this$props.isOpen,\n        flip = _this$props.flip,\n        offset = _this$props.offset,\n        fallbackPlacements = _this$props.fallbackPlacements,\n        placementPrefix = _this$props.placementPrefix,\n        _arrowClassName = _this$props.arrowClassName,\n        hideArrow = _this$props.hideArrow,\n        _popperClassName = _this$props.popperClassName,\n        tag = _this$props.tag,\n        modifiers = _this$props.modifiers,\n        strategy = _this$props.strategy,\n        boundariesElement = _this$props.boundariesElement,\n        fade = _this$props.fade,\n        transition = _this$props.transition,\n        placement = _this$props.placement,\n        attrs = _objectWithoutPropertiesLoose(_this$props, _excluded$z);\n\n    var arrowClassName = mapToCssModules(classNames__default[\"default\"]('arrow', _arrowClassName), cssModule);\n    var popperClassName = mapToCssModules(classNames__default[\"default\"](_popperClassName, placementPrefix ? placementPrefix + \"-auto\" : ''), this.props.cssModule);\n    var modifierNames = modifiers.map(function (m) {\n      return m.name;\n    });\n    var baseModifiers = [{\n      name: 'offset',\n      options: {\n        offset: offset\n      }\n    }, {\n      name: 'flip',\n      enabled: flip,\n      options: {\n        fallbackPlacements: fallbackPlacements\n      }\n    }, {\n      name: 'preventOverflow',\n      options: {\n        boundary: boundariesElement\n      }\n    }].filter(function (m) {\n      return !modifierNames.includes(m.name);\n    });\n    var extendedModifiers = [].concat(baseModifiers, modifiers);\n\n    var popperTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), transition), {}, {\n      baseClass: fade ? transition.baseClass : '',\n      timeout: fade ? transition.timeout : 0\n    });\n\n    return /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, popperTransition, attrs, {\n      \"in\": isOpen,\n      onExited: this.onClosed,\n      tag: tag\n    }), /*#__PURE__*/React__default[\"default\"].createElement(reactPopper.Popper, {\n      referenceElement: this.targetNode,\n      modifiers: extendedModifiers,\n      placement: placement,\n      strategy: strategy\n    }, function (_ref) {\n      var ref = _ref.ref,\n          style = _ref.style,\n          popperPlacement = _ref.placement,\n          isReferenceHidden = _ref.isReferenceHidden,\n          arrowProps = _ref.arrowProps,\n          update = _ref.update;\n      return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n        ref: ref,\n        style: style,\n        className: popperClassName,\n        \"data-popper-placement\": popperPlacement,\n        \"data-popper-reference-hidden\": isReferenceHidden ? 'true' : undefined\n      }, typeof children === 'function' ? children({\n        update: update\n      }) : children, !hideArrow && /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n        ref: arrowProps.ref,\n        className: arrowClassName,\n        style: arrowProps.style\n      }));\n    }));\n  };\n\n  _proto.render = function render() {\n    this.setTargetNode(this.props.target);\n\n    if (this.state.isOpen) {\n      return this.props.container === 'inline' ? this.renderChildren() : ReactDOM__default[\"default\"].createPortal( /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n        ref: this.getRef\n      }, this.renderChildren()), this.getContainerNode());\n    }\n\n    return null;\n  };\n\n  return PopperContent;\n}(React__default[\"default\"].Component);\n\nPopperContent.propTypes = propTypes$F;\nPopperContent.defaultProps = defaultProps$F;\nvar PopperContent$1 = PopperContent;\n\nfunction PopperTargetHelper(props, context) {\n  context.popperManager.setTargetNode(getTarget(props.target));\n  return null;\n}\n\nPopperTargetHelper.contextTypes = {\n  popperManager: PropTypes__default[\"default\"].object.isRequired\n};\nPopperTargetHelper.propTypes = {\n  target: targetPropType.isRequired\n};\n\nvar propTypes$E = {\n  children: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].node, PropTypes__default[\"default\"].func]),\n  placement: PropTypes__default[\"default\"].oneOf(PopperPlacements),\n  target: targetPropType.isRequired,\n  container: targetPropType,\n  isOpen: PropTypes__default[\"default\"].bool,\n  disabled: PropTypes__default[\"default\"].bool,\n  hideArrow: PropTypes__default[\"default\"].bool,\n  boundariesElement: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, DOMElement]),\n  className: PropTypes__default[\"default\"].string,\n  innerClassName: PropTypes__default[\"default\"].string,\n  arrowClassName: PropTypes__default[\"default\"].string,\n  popperClassName: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  toggle: PropTypes__default[\"default\"].func,\n  autohide: PropTypes__default[\"default\"].bool,\n  placementPrefix: PropTypes__default[\"default\"].string,\n  delay: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].shape({\n    show: PropTypes__default[\"default\"].number,\n    hide: PropTypes__default[\"default\"].number\n  }), PropTypes__default[\"default\"].number]),\n  modifiers: PropTypes__default[\"default\"].array,\n  strategy: PropTypes__default[\"default\"].string,\n  offset: PropTypes__default[\"default\"].arrayOf(PropTypes__default[\"default\"].number),\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].object]),\n  trigger: PropTypes__default[\"default\"].string,\n  fade: PropTypes__default[\"default\"].bool,\n  flip: PropTypes__default[\"default\"].bool\n};\nvar DEFAULT_DELAYS = {\n  show: 0,\n  hide: 50\n};\nvar defaultProps$E = {\n  isOpen: false,\n  hideArrow: false,\n  autohide: false,\n  delay: DEFAULT_DELAYS,\n  toggle: function toggle() {},\n  trigger: 'click',\n  fade: true\n};\n\nfunction isInDOMSubtree(element, subtreeRoot) {\n  return subtreeRoot && (element === subtreeRoot || subtreeRoot.contains(element));\n}\n\nfunction isInDOMSubtrees(element, subtreeRoots) {\n  if (subtreeRoots === void 0) {\n    subtreeRoots = [];\n  }\n\n  return subtreeRoots && subtreeRoots.length && subtreeRoots.filter(function (subTreeRoot) {\n    return isInDOMSubtree(element, subTreeRoot);\n  })[0];\n}\n\nvar TooltipPopoverWrapper = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TooltipPopoverWrapper, _React$Component);\n\n  function TooltipPopoverWrapper(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._targets = [];\n    _this.currentTargetElement = null;\n    _this.addTargetEvents = _this.addTargetEvents.bind(_assertThisInitialized(_this));\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.removeTargetEvents = _this.removeTargetEvents.bind(_assertThisInitialized(_this));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.showWithDelay = _this.showWithDelay.bind(_assertThisInitialized(_this));\n    _this.hideWithDelay = _this.hideWithDelay.bind(_assertThisInitialized(_this));\n    _this.onMouseOverTooltipContent = _this.onMouseOverTooltipContent.bind(_assertThisInitialized(_this));\n    _this.onMouseLeaveTooltipContent = _this.onMouseLeaveTooltipContent.bind(_assertThisInitialized(_this));\n    _this.show = _this.show.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.onEscKeyDown = _this.onEscKeyDown.bind(_assertThisInitialized(_this));\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.isOpen\n    };\n    _this._isMounted = false;\n    return _this;\n  }\n\n  var _proto = TooltipPopoverWrapper.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    this.updateTarget();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n    this.removeTargetEvents();\n    this._targets = null;\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n  };\n\n  TooltipPopoverWrapper.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.isOpen && !state.isOpen) {\n      return {\n        isOpen: props.isOpen\n      };\n    }\n\n    return null;\n  };\n\n  _proto.handleDocumentClick = function handleDocumentClick(e) {\n    var triggers = this.props.trigger.split(' ');\n\n    if (triggers.indexOf('legacy') > -1 && (this.props.isOpen || isInDOMSubtrees(e.target, this._targets))) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n\n      if (this.props.isOpen && !isInDOMSubtree(e.target, this._popover)) {\n        this.hideWithDelay(e);\n      } else if (!this.props.isOpen) {\n        this.showWithDelay(e);\n      }\n    } else if (triggers.indexOf('click') > -1 && isInDOMSubtrees(e.target, this._targets)) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n\n      if (!this.props.isOpen) {\n        this.showWithDelay(e);\n      } else {\n        this.hideWithDelay(e);\n      }\n    }\n  };\n\n  _proto.onMouseOverTooltipContent = function onMouseOverTooltipContent() {\n    if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n\n      if (this.state.isOpen && !this.props.isOpen) {\n        this.toggle();\n      }\n    }\n  };\n\n  _proto.onMouseLeaveTooltipContent = function onMouseLeaveTooltipContent(e) {\n    if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n      if (this._showTimeout) {\n        this.clearShowTimeout();\n      }\n\n      e.persist();\n      this._hideTimeout = setTimeout(this.hide.bind(this, e), this.getDelay('hide'));\n    }\n  };\n\n  _proto.onEscKeyDown = function onEscKeyDown(e) {\n    if (e.key === 'Escape') {\n      this.hide(e);\n    }\n  };\n\n  _proto.getRef = function getRef(ref) {\n    var innerRef = this.props.innerRef;\n\n    if (innerRef) {\n      if (typeof innerRef === 'function') {\n        innerRef(ref);\n      } else if (typeof innerRef === 'object') {\n        innerRef.current = ref;\n      }\n    }\n\n    this._popover = ref;\n  };\n\n  _proto.getDelay = function getDelay(key) {\n    var delay = this.props.delay;\n\n    if (typeof delay === 'object') {\n      return isNaN(delay[key]) ? DEFAULT_DELAYS[key] : delay[key];\n    }\n\n    return delay;\n  };\n\n  _proto.getCurrentTarget = function getCurrentTarget(target) {\n    if (!target) return null;\n\n    var index = this._targets.indexOf(target);\n\n    if (index >= 0) return this._targets[index];\n    return this.getCurrentTarget(target.parentElement);\n  };\n\n  _proto.show = function show(e) {\n    if (!this.props.isOpen) {\n      this.clearShowTimeout();\n      this.currentTargetElement = e ? e.currentTarget || this.getCurrentTarget(e.target) : null;\n\n      if (e && e.composedPath && typeof e.composedPath === 'function') {\n        var path = e.composedPath();\n        this.currentTargetElement = path && path[0] || this.currentTargetElement;\n      }\n\n      this.toggle(e);\n    }\n  };\n\n  _proto.showWithDelay = function showWithDelay(e) {\n    if (this._hideTimeout) {\n      this.clearHideTimeout();\n    }\n\n    this._showTimeout = setTimeout(this.show.bind(this, e), this.getDelay('show'));\n  };\n\n  _proto.hide = function hide(e) {\n    if (this.props.isOpen) {\n      this.clearHideTimeout();\n      this.currentTargetElement = null;\n      this.toggle(e);\n    }\n  };\n\n  _proto.hideWithDelay = function hideWithDelay(e) {\n    if (this._showTimeout) {\n      this.clearShowTimeout();\n    }\n\n    this._hideTimeout = setTimeout(this.hide.bind(this, e), this.getDelay('hide'));\n  };\n\n  _proto.clearShowTimeout = function clearShowTimeout() {\n    clearTimeout(this._showTimeout);\n    this._showTimeout = undefined;\n  };\n\n  _proto.clearHideTimeout = function clearHideTimeout() {\n    clearTimeout(this._hideTimeout);\n    this._hideTimeout = undefined;\n  };\n\n  _proto.addEventOnTargets = function addEventOnTargets(type, handler, isBubble) {\n    this._targets.forEach(function (target) {\n      target.addEventListener(type, handler, isBubble);\n    });\n  };\n\n  _proto.removeEventOnTargets = function removeEventOnTargets(type, handler, isBubble) {\n    this._targets.forEach(function (target) {\n      target.removeEventListener(type, handler, isBubble);\n    });\n  };\n\n  _proto.addTargetEvents = function addTargetEvents() {\n    if (this.props.trigger) {\n      var triggers = this.props.trigger.split(' ');\n\n      if (triggers.indexOf('manual') === -1) {\n        if (triggers.indexOf('click') > -1 || triggers.indexOf('legacy') > -1) {\n          document.addEventListener('click', this.handleDocumentClick, true);\n        }\n\n        if (this._targets && this._targets.length) {\n          if (triggers.indexOf('hover') > -1) {\n            this.addEventOnTargets('mouseover', this.showWithDelay, true);\n            this.addEventOnTargets('mouseout', this.hideWithDelay, true);\n          }\n\n          if (triggers.indexOf('focus') > -1) {\n            this.addEventOnTargets('focusin', this.show, true);\n            this.addEventOnTargets('focusout', this.hide, true);\n          }\n\n          this.addEventOnTargets('keydown', this.onEscKeyDown, true);\n        }\n      }\n    }\n  };\n\n  _proto.removeTargetEvents = function removeTargetEvents() {\n    if (this._targets) {\n      this.removeEventOnTargets('mouseover', this.showWithDelay, true);\n      this.removeEventOnTargets('mouseout', this.hideWithDelay, true);\n      this.removeEventOnTargets('keydown', this.onEscKeyDown, true);\n      this.removeEventOnTargets('focusin', this.show, true);\n      this.removeEventOnTargets('focusout', this.hide, true);\n    }\n\n    document.removeEventListener('click', this.handleDocumentClick, true);\n  };\n\n  _proto.updateTarget = function updateTarget() {\n    var newTarget = getTarget(this.props.target, true);\n\n    if (newTarget !== this._targets) {\n      this.removeTargetEvents();\n      this._targets = newTarget ? Array.from(newTarget) : [];\n      this.currentTargetElement = this.currentTargetElement || this._targets[0];\n      this.addTargetEvents();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    if (this.props.disabled || !this._isMounted) {\n      return e && e.preventDefault();\n    }\n\n    return this.props.toggle(e);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    if (this.props.isOpen) {\n      this.updateTarget();\n    }\n\n    var target = this.currentTargetElement || this._targets[0];\n\n    if (!target) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        innerClassName = _this$props.innerClassName,\n        isOpen = _this$props.isOpen,\n        hideArrow = _this$props.hideArrow,\n        boundariesElement = _this$props.boundariesElement,\n        placement = _this$props.placement,\n        placementPrefix = _this$props.placementPrefix,\n        arrowClassName = _this$props.arrowClassName,\n        popperClassName = _this$props.popperClassName,\n        container = _this$props.container,\n        modifiers = _this$props.modifiers,\n        strategy = _this$props.strategy,\n        offset = _this$props.offset,\n        fade = _this$props.fade,\n        flip = _this$props.flip,\n        children = _this$props.children;\n    var attributes = omit(this.props, Object.keys(propTypes$E));\n    var popperClasses = mapToCssModules(popperClassName, cssModule);\n    var classes = mapToCssModules(innerClassName, cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(PopperContent$1, {\n      className: className,\n      target: target,\n      isOpen: isOpen,\n      hideArrow: hideArrow,\n      boundariesElement: boundariesElement,\n      placement: placement,\n      placementPrefix: placementPrefix,\n      arrowClassName: arrowClassName,\n      popperClassName: popperClasses,\n      container: container,\n      modifiers: modifiers,\n      strategy: strategy,\n      offset: offset,\n      cssModule: cssModule,\n      fade: fade,\n      flip: flip\n    }, function (_ref) {\n      var update = _ref.update;\n      return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _extends({}, attributes, {\n        ref: _this2.getRef,\n        className: classes,\n        role: \"tooltip\",\n        onMouseOver: _this2.onMouseOverTooltipContent,\n        onMouseLeave: _this2.onMouseLeaveTooltipContent,\n        onKeyDown: _this2.onEscKeyDown\n      }), typeof children === 'function' ? children({\n        update: update\n      }) : children);\n    });\n  };\n\n  return TooltipPopoverWrapper;\n}(React__default[\"default\"].Component);\n\nTooltipPopoverWrapper.propTypes = propTypes$E;\nTooltipPopoverWrapper.defaultProps = defaultProps$E;\nvar TooltipPopoverWrapper$1 = TooltipPopoverWrapper;\n\nvar defaultProps$D = {\n  placement: 'right',\n  placementPrefix: 'bs-popover',\n  trigger: 'click',\n  offset: [0, 8]\n};\n\nfunction Popover(props) {\n  var popperClasses = classNames__default[\"default\"]('popover', 'show', props.popperClassName);\n  var classes = classNames__default[\"default\"]('popover-inner', props.innerClassName);\n  return /*#__PURE__*/React__default[\"default\"].createElement(TooltipPopoverWrapper$1, _extends({}, props, {\n    arrowClassName: \"popover-arrow\",\n    popperClassName: popperClasses,\n    innerClassName: classes\n  }));\n}\n\nPopover.propTypes = propTypes$E;\nPopover.defaultProps = defaultProps$D;\n\nvar omitKeys$4 = ['defaultOpen'];\n\nvar UncontrolledPopover = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledPopover, _Component);\n\n  function UncontrolledPopover(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledPopover.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState(function (prevState) {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Popover, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys$4)));\n  };\n\n  return UncontrolledPopover;\n}(React.Component);\nUncontrolledPopover.propTypes = _objectSpread2({\n  defaultOpen: PropTypes__default[\"default\"].bool\n}, Popover.propTypes);\n\nvar _excluded$y = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$D = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$C = {\n  tag: 'h3'\n};\n\nfunction PopoverHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$y);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'popover-header'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nPopoverHeader.propTypes = propTypes$D;\nPopoverHeader.defaultProps = defaultProps$C;\n\nvar _excluded$x = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$C = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$B = {\n  tag: 'div'\n};\n\nfunction PopoverBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$x);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'popover-body'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nPopoverBody.propTypes = propTypes$C;\nPopoverBody.defaultProps = defaultProps$B;\n\nvar _excluded$w = [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"];\nvar propTypes$B = {\n  /** Enable animation to bar */\n  animated: PropTypes__default[\"default\"].bool,\n  bar: PropTypes__default[\"default\"].bool,\n  barAriaLabelledBy: PropTypes__default[\"default\"].string,\n  barAriaValueText: PropTypes__default[\"default\"].string,\n  barClassName: PropTypes__default[\"default\"].string,\n  barStyle: PropTypes__default[\"default\"].object,\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Add custom color to the placeholder */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Maximum value of progress */\n  max: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].number]),\n\n  /** Minimum value of progress, defaults to zero */\n  min: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].number]),\n  multi: PropTypes__default[\"default\"].bool,\n\n  /** Add stripes to progress bar */\n  striped: PropTypes__default[\"default\"].bool,\n  style: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Current value of progress */\n  value: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].number])\n};\nvar defaultProps$A = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nfunction Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      min = props.min,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      style = props.style,\n      barStyle = props.barStyle,\n      barAriaValueText = props.barAriaValueText,\n      barAriaLabelledBy = props.barAriaLabelledBy,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$w);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames__default[\"default\"](className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames__default[\"default\"]('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread2(_objectSpread2(_objectSpread2({}, bar ? style : {}), barStyle), {}, {\n      width: percent + \"%\"\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React__default[\"default\"].createElement(\"div\", progressBarProps));\n}\n\nProgress.propTypes = propTypes$B;\nProgress.defaultProps = defaultProps$A;\n\nvar propTypes$A = {\n  children: PropTypes__default[\"default\"].node.isRequired,\n  node: PropTypes__default[\"default\"].any\n};\n\nvar Portal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Portal, _React$Component);\n\n  function Portal() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Portal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n\n    this.defaultNode = null;\n  };\n\n  _proto.render = function render() {\n    if (!canUseDOM) {\n      return null;\n    }\n\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    return ReactDOM__default[\"default\"].createPortal(this.props.children, this.props.node || this.defaultNode);\n  };\n\n  return Portal;\n}(React__default[\"default\"].Component);\n\nPortal.propTypes = propTypes$A;\nvar Portal$1 = Portal;\n\nfunction noop$1() {}\n\nvar FadePropTypes$1 = PropTypes__default[\"default\"].shape(Fade.propTypes);\nvar propTypes$z = {\n  /** */\n  autoFocus: PropTypes__default[\"default\"].bool,\n\n  /** Add backdrop to modal */\n  backdrop: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].oneOf(['static'])]),\n\n  /** add custom classname to backdrop */\n  backdropClassName: PropTypes__default[\"default\"].string,\n  backdropTransition: FadePropTypes$1,\n\n  /** Vertically center the modal */\n  centered: PropTypes__default[\"default\"].bool,\n\n  /** Add children for the modal to wrap */\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom className for modal content */\n  contentClassName: PropTypes__default[\"default\"].string,\n  className: PropTypes__default[\"default\"].string,\n  container: targetPropType,\n  cssModule: PropTypes__default[\"default\"].object,\n  external: PropTypes__default[\"default\"].node,\n\n  /** Enable/Disable animation */\n  fade: PropTypes__default[\"default\"].bool,\n\n  /** Make the modal fullscreen */\n  fullscreen: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].oneOf(['sm', 'md', 'lg', 'xl'])]),\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** The status of the modal, either open or close */\n  isOpen: PropTypes__default[\"default\"].bool,\n\n  /** Allow modal to be closed with escape key. */\n  keyboard: PropTypes__default[\"default\"].bool,\n\n  /** Identifies the element (or elements) that labels the current element. */\n  labelledBy: PropTypes__default[\"default\"].string,\n  modalClassName: PropTypes__default[\"default\"].string,\n  modalTransition: FadePropTypes$1,\n\n  /** Function to be triggered on close */\n  onClosed: PropTypes__default[\"default\"].func,\n\n  /** Function to be triggered on enter */\n  onEnter: PropTypes__default[\"default\"].func,\n\n  /** Function to be triggered on exit */\n  onExit: PropTypes__default[\"default\"].func,\n\n  /** Function to be triggered on open */\n  onOpened: PropTypes__default[\"default\"].func,\n\n  /** Returns focus to the element that triggered opening of the modal */\n  returnFocusAfterClose: PropTypes__default[\"default\"].bool,\n\n  /** Accessibility role */\n  role: PropTypes__default[\"default\"].string,\n\n  /** Make the modal scrollable */\n  scrollable: PropTypes__default[\"default\"].bool,\n\n  /** Two optional sizes `lg` and `sm` */\n  size: PropTypes__default[\"default\"].string,\n\n  /** Function to toggle modal visibility */\n  toggle: PropTypes__default[\"default\"].func,\n  trapFocus: PropTypes__default[\"default\"].bool,\n\n  /** Unmounts the modal when modal is closed */\n  unmountOnClose: PropTypes__default[\"default\"].bool,\n  wrapClassName: PropTypes__default[\"default\"].string,\n  zIndex: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string])\n};\nvar propsToOmit$1 = Object.keys(propTypes$z);\nvar defaultProps$z = {\n  isOpen: false,\n  autoFocus: true,\n  centered: false,\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop$1,\n  onClosed: noop$1,\n  modalTransition: {\n    timeout: TransitionTimeouts.Modal\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade // uses standard fade transition\n\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nvar Modal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n\n  function Modal(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._element = null;\n    _this._originalBodyPadding = null;\n    _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));\n    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));\n    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));\n    _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));\n    _this.handleStaticBackdropAnimation = _this.handleStaticBackdropAnimation.bind(_assertThisInitialized(_this));\n    _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));\n    _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));\n    _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n    _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));\n    _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));\n    _this.trapFocus = _this.trapFocus.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false,\n      showStaticBackdropAnimation: false\n    };\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        isOpen = _this$props.isOpen,\n        autoFocus = _this$props.autoFocus,\n        onEnter = _this$props.onEnter;\n\n    if (isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      });\n\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    } // traps focus inside the Modal, even if the browser address bar is focused\n\n\n    document.addEventListener('focus', this.trapFocus, true);\n    this._isMounted = true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      }); // let render() renders Modal Dialog first\n\n      return;\n    } // now Modal Dialog is rendered and we can refer this._element and this._dialog\n\n\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  ;\n\n  _proto.handleBackdropClick = function handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      var backdrop = this._dialog ? this._dialog.parentNode : null;\n\n      if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {\n        this.handleStaticBackdropAnimation();\n      }\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  };\n\n  _proto.handleTab = function handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.modalIndex < Modal.openCount - 1) return; // last opened modal\n\n    var focusableChildren = this.getFocusableChildren();\n    var totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    var currentFocus = this.getFocusedChild();\n    var focusedIndex = 0;\n\n    for (var i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  };\n\n  _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  };\n\n  _proto.handleEscape = function handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.toggle(e);\n      } else if (this.props.backdrop === 'static') {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleStaticBackdropAnimation();\n      }\n    }\n  };\n\n  _proto.handleStaticBackdropAnimation = function handleStaticBackdropAnimation() {\n    var _this2 = this;\n\n    this.clearBackdropAnimationTimeout();\n    this.setState({\n      showStaticBackdropAnimation: true\n    });\n    this._backdropAnimationTimeout = setTimeout(function () {\n      _this2.setState({\n        showStaticBackdropAnimation: false\n      });\n    }, 100);\n  };\n\n  _proto.onOpened = function onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.modalTransition.onEntered || noop$1)(node, isAppearing);\n  };\n\n  _proto.onClosed = function onClosed(node) {\n    var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted\n\n    this.props.onClosed();\n    (this.props.modalTransition.onExited || noop$1)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  _proto.setFocus = function setFocus() {\n    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n      this._dialog.parentNode.focus();\n    }\n  };\n\n  _proto.getFocusableChildren = function getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  };\n\n  _proto.getFocusedChild = function getFocusedChild() {\n    var currentFocus;\n    var focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n\n    return currentFocus;\n  };\n\n  _proto.trapFocus = function trapFocus(ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) {\n      // element is not attached\n      return;\n    }\n\n    if (this._dialog && this._dialog.parentNode === ev.target) {\n      // initial focus when the Modal is opened\n      return;\n    }\n\n    if (this.modalIndex < Modal.openCount - 1) {\n      // last opened modal\n      return;\n    }\n\n    var children = this.getFocusableChildren();\n\n    for (var i = 0; i < children.length; i += 1) {\n      // focus is already inside the Modal\n      if (children[i] === ev.target) return;\n    }\n\n    if (children.length > 0) {\n      // otherwise focus the first focusable element in the Modal\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  };\n\n  _proto.init = function init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n\n      this._element.setAttribute('tabindex', '-1');\n\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n\n    if (Modal.openCount < 1) {\n      Modal.originalBodyOverflow = window.getComputedStyle(document.body).overflow;\n    }\n    conditionallyUpdateScrollbar();\n\n    if (Modal.openCount === 0) {\n      document.body.className = classNames__default[\"default\"](document.body.className, mapToCssModules('modal-open', this.props.cssModule));\n      document.body.style.overflow = 'hidden';\n    }\n\n    this.modalIndex = Modal.openCount;\n    Modal.openCount += 1;\n  };\n\n  _proto.destroy = function destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  };\n\n  _proto.manageFocusAfterClose = function manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      var returnFocusAfterClose = this.props.returnFocusAfterClose;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  };\n\n  _proto.close = function close() {\n    if (Modal.openCount <= 1) {\n      var modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n\n      var modalOpenClassNameRegex = new RegExp(\"(^| )\" + modalOpenClassName + \"( |$)\");\n      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n      document.body.style.overflow = Modal.originalBodyOverflow;\n    }\n\n    this.manageFocusAfterClose();\n    Modal.openCount = Math.max(0, Modal.openCount - 1);\n    setScrollbarWidth(this._originalBodyPadding);\n  };\n\n  _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  };\n\n  _proto.renderModalDialog = function renderModalDialog() {\n    var _classNames,\n        _this3 = this;\n\n    var attributes = omit(this.props, propsToOmit$1);\n    var dialogBaseClass = 'modal-dialog';\n    return /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _extends({}, attributes, {\n      className: mapToCssModules(classNames__default[\"default\"](dialogBaseClass, this.props.className, (_classNames = {}, _classNames[\"modal-\" + this.props.size] = this.props.size, _classNames[dialogBaseClass + \"-centered\"] = this.props.centered, _classNames[dialogBaseClass + \"-scrollable\"] = this.props.scrollable, _classNames['modal-fullscreen'] = this.props.fullscreen === true, _classNames[\"modal-fullscreen-\" + this.props.fullscreen + \"-down\"] = typeof this.props.fullscreen === 'string', _classNames)), this.props.cssModule),\n      role: \"document\",\n      ref: function ref(c) {\n        _this3._dialog = c;\n      }\n    }), /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n      className: mapToCssModules(classNames__default[\"default\"]('modal-content', this.props.contentClassName), this.props.cssModule)\n    }, this.props.children));\n  };\n\n  _proto.render = function render() {\n    var unmountOnClose = this.props.unmountOnClose;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      var isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isModalHidden ? 'none' : 'block';\n      var _this$props2 = this.props,\n          wrapClassName = _this$props2.wrapClassName,\n          modalClassName = _this$props2.modalClassName,\n          backdropClassName = _this$props2.backdropClassName,\n          cssModule = _this$props2.cssModule,\n          isOpen = _this$props2.isOpen,\n          backdrop = _this$props2.backdrop,\n          role = _this$props2.role,\n          labelledBy = _this$props2.labelledBy,\n          external = _this$props2.external,\n          innerRef = _this$props2.innerRef;\n      var modalAttributes = {\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown,\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        style: {\n          display: 'block'\n        },\n        'aria-labelledby': labelledBy,\n        role: role,\n        tabIndex: '-1'\n      };\n      var hasTransition = this.props.fade;\n\n      var modalTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), this.props.modalTransition), {}, {\n        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n        timeout: hasTransition ? this.props.modalTransition.timeout : 0\n      });\n\n      var backdropTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), this.props.backdropTransition), {}, {\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0\n      });\n\n      var Backdrop = backdrop && (hasTransition ? /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, backdropTransition, {\n        \"in\": isOpen && !!backdrop,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames__default[\"default\"]('modal-backdrop', backdropClassName), cssModule)\n      })) : /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n        className: mapToCssModules(classNames__default[\"default\"]('modal-backdrop', 'show', backdropClassName), cssModule)\n      }));\n      return /*#__PURE__*/React__default[\"default\"].createElement(Portal$1, {\n        node: this._element\n      }, /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n        className: mapToCssModules(wrapClassName)\n      }, /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, modalAttributes, modalTransition, {\n        \"in\": isOpen,\n        onEntered: this.onOpened,\n        onExited: this.onClosed,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames__default[\"default\"]('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule),\n        innerRef: innerRef\n      }), external, this.renderModalDialog()), Backdrop));\n    }\n\n    return null;\n  };\n\n  return Modal;\n}(React__default[\"default\"].Component);\n\nModal.propTypes = propTypes$z;\nModal.defaultProps = defaultProps$z;\nModal.openCount = 0;\nModal.originalBodyOverflow = null;\nvar Modal$1 = Modal;\n\nvar _excluded$v = [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\"];\nvar propTypes$y = {\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Custom close button */\n  close: PropTypes__default[\"default\"].object,\n  closeAriaLabel: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Function to be triggered when close button is clicked */\n  toggle: PropTypes__default[\"default\"].func,\n  wrapTag: tagPropType\n};\nvar defaultProps$y = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close'\n};\n\nfunction ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$v);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React__default[\"default\"].createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React__default[\"default\"].createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n}\n\nModalHeader.propTypes = propTypes$y;\nModalHeader.defaultProps = defaultProps$y;\n\nvar _excluded$u = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$x = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$x = {\n  tag: 'div'\n};\n\nfunction ModalBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$u);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'modal-body'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nModalBody.propTypes = propTypes$x;\nModalBody.defaultProps = defaultProps$x;\n\nvar _excluded$t = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$w = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$w = {\n  tag: 'div'\n};\n\nfunction ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$t);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nModalFooter.propTypes = propTypes$w;\nModalFooter.defaultProps = defaultProps$w;\n\nvar defaultProps$v = {\n  placement: 'top',\n  autohide: true,\n  placementPrefix: 'bs-tooltip',\n  trigger: 'hover focus'\n};\n\nfunction Tooltip(props) {\n  var popperClasses = classNames__default[\"default\"]('tooltip', 'show', props.popperClassName);\n  var classes = classNames__default[\"default\"]('tooltip-inner', props.innerClassName);\n  return /*#__PURE__*/React__default[\"default\"].createElement(TooltipPopoverWrapper$1, _extends({}, props, {\n    arrowClassName: \"tooltip-arrow\",\n    popperClassName: popperClasses,\n    innerClassName: classes\n  }));\n}\n\nTooltip.propTypes = propTypes$E;\nTooltip.defaultProps = defaultProps$v;\n\nvar _excluded$s = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nvar propTypes$v = {\n  /** Adds border to all sides of table */\n  bordered: PropTypes__default[\"default\"].bool,\n\n  /** Removes all borders */\n  borderless: PropTypes__default[\"default\"].bool,\n\n  /** Adds custom class name to component */\n  className: PropTypes__default[\"default\"].string,\n\n  /**  */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Makes the table dark */\n  dark: PropTypes__default[\"default\"].bool,\n\n  /** Enables a hover state on the rows within `<tbody>` */\n  hover: PropTypes__default[\"default\"].bool,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].object]),\n\n  /** Responsive tables allow tables to be scrolled horizontally with ease */\n  responsive: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string]),\n  responsiveTag: tagPropType,\n\n  /** Make tables more compact by cutting cell padding in half when setting size as sm. */\n  size: PropTypes__default[\"default\"].string,\n\n  /** Adds zebra-striping to any table row within the `<tbody>` */\n  striped: PropTypes__default[\"default\"].bool,\n\n  /** Add custom tag to the component */\n  tag: tagPropType\n};\nvar defaultProps$u = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nfunction Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$s);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n}\n\nTable.propTypes = propTypes$v;\nTable.defaultProps = defaultProps$u;\n\nvar _excluded$r = [\"className\", \"cssModule\", \"tag\", \"flush\", \"horizontal\", \"numbered\"];\nvar propTypes$u = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Remove borders to make the list appear flush */\n  flush: PropTypes__default[\"default\"].bool,\n\n  /** Make the list horizontal instead of vertical */\n  horizontal: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string]),\n\n  /** Add number to the ListItems */\n  numbered: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$t = {\n  tag: 'ul',\n  horizontal: false,\n  numbered: false\n};\n\nvar getHorizontalClass = function getHorizontalClass(horizontal) {\n  if (horizontal === false) {\n    return false;\n  }\n\n  if (horizontal === true || horizontal === 'xs') {\n    return 'list-group-horizontal';\n  }\n\n  return \"list-group-horizontal-\" + horizontal;\n};\n\nfunction ListGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      flush = props.flush,\n      horizontal = props.horizontal,\n      numbered = props.numbered,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$r);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'list-group', // list-group-horizontal cannot currently be mixed with list-group-flush\n  // we only try to apply horizontal classes if flush is false\n  flush ? 'list-group-flush' : getHorizontalClass(horizontal), {\n    'list-group-numbered': numbered\n  }), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nListGroup.propTypes = propTypes$u;\nListGroup.defaultProps = defaultProps$t;\n\nvar _excluded$q = [\"className\", \"cssModule\", \"tag\", \"innerRef\"];\nvar propTypes$t = {\n  children: PropTypes__default[\"default\"].node,\n  tag: tagPropType,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$s = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$q);\n\n    var classes = mapToCssModules(className, cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(React.Component);\n\nForm.propTypes = propTypes$t;\nForm.defaultProps = defaultProps$s;\nvar Form$1 = Form;\n\nvar _excluded$p = [\"className\", \"cssModule\", \"valid\", \"tooltip\", \"tag\"];\nvar propTypes$s = {\n  children: PropTypes__default[\"default\"].node,\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  valid: PropTypes__default[\"default\"].bool,\n  tooltip: PropTypes__default[\"default\"].bool\n};\nvar defaultProps$r = {\n  tag: 'div',\n  valid: undefined\n};\n\nfunction FormFeedback(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      valid = props.valid,\n      tooltip = props.tooltip,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$p);\n\n  var validMode = tooltip ? 'tooltip' : 'feedback';\n  var classes = mapToCssModules(classNames__default[\"default\"](className, valid ? \"valid-\" + validMode : \"invalid-\" + validMode), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nFormFeedback.propTypes = propTypes$s;\nFormFeedback.defaultProps = defaultProps$r;\n\nvar _excluded$o = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"floating\", \"tag\", \"switch\"];\nvar propTypes$r = {\n  children: PropTypes__default[\"default\"].node,\n  row: PropTypes__default[\"default\"].bool,\n  check: PropTypes__default[\"default\"].bool,\n  \"switch\": PropTypes__default[\"default\"].bool,\n  inline: PropTypes__default[\"default\"].bool,\n  floating: PropTypes__default[\"default\"].bool,\n  disabled: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$q = {\n  tag: 'div'\n};\n\nfunction FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      floating = props.floating,\n      Tag = props.tag,\n      switchProp = props[\"switch\"],\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$o);\n\n  var formCheck = check || switchProp;\n  var classes = mapToCssModules(classNames__default[\"default\"](className, row ? 'row' : false, formCheck ? 'form-check' : 'mb-3', switchProp ? 'form-switch' : false, formCheck && inline ? 'form-check-inline' : false, formCheck && disabled ? 'disabled' : false, floating && 'form-floating'), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nFormGroup.propTypes = propTypes$r;\nFormGroup.defaultProps = defaultProps$q;\n\nvar _excluded$n = [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"];\nvar propTypes$q = {\n  children: PropTypes__default[\"default\"].node,\n  inline: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  color: PropTypes__default[\"default\"].string,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$p = {\n  tag: 'small',\n  color: 'muted'\n};\n\nfunction FormText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      inline = props.inline,\n      color = props.color,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$n);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nFormText.propTypes = propTypes$q;\nFormText.defaultProps = defaultProps$p;\n\nvar _excluded$m = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\nvar propTypes$p = {\n  children: PropTypes__default[\"default\"].node,\n  type: PropTypes__default[\"default\"].string,\n  size: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string]),\n  bsSize: PropTypes__default[\"default\"].string,\n  valid: PropTypes__default[\"default\"].bool,\n  invalid: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n  plaintext: PropTypes__default[\"default\"].bool,\n  addon: PropTypes__default[\"default\"].bool,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$o = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded$m);\n\n    var checkInput = ['switch', 'radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = /\\D/g;\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (rangeInput) {\n      formControlClass = 'form-range';\n    } else if (selectInput) {\n      formControlClass = 'form-select';\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames__default[\"default\"](className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? selectInput ? \"form-select-\" + bsSize : \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type === 'switch' ? 'checkbox' : type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React__default[\"default\"].Component);\n\nInput.propTypes = propTypes$p;\nInput.defaultProps = defaultProps$o;\nvar Input$1 = Input;\n\nvar _excluded$l = [\"className\", \"cssModule\", \"tag\", \"type\", \"size\"];\nvar propTypes$o = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Sets size of InputGroup */\n  size: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  type: PropTypes__default[\"default\"].string\n};\nvar defaultProps$n = {\n  tag: 'div'\n};\n\nfunction InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$l);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n\n  if (props.type === 'dropdown') {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Dropdown$1, _extends({}, attributes, {\n      className: classes\n    }));\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(InputGroupContext.Provider, {\n    value: {\n      insideInputGroup: true\n    }\n  }, /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  })));\n}\n\nInputGroup.propTypes = propTypes$o;\nInputGroup.defaultProps = defaultProps$n;\n\nvar _excluded$k = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$n = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$m = {\n  tag: 'span'\n};\n\nfunction InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$k);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nInputGroupText.propTypes = propTypes$n;\nInputGroupText.defaultProps = defaultProps$m;\n\nvar _excluded$j = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar stringOrNumberProp = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string]);\nvar columnProps = PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].bool, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes$m = {\n  children: PropTypes__default[\"default\"].node,\n  hidden: PropTypes__default[\"default\"].bool,\n  check: PropTypes__default[\"default\"].bool,\n  size: PropTypes__default[\"default\"].string,\n  \"for\": PropTypes__default[\"default\"].string,\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  widths: PropTypes__default[\"default\"].array\n};\nvar defaultProps$l = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  }\n\n  if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nfunction Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props[\"for\"],\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$j);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames__default[\"default\"]((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var colFormLabel = size || colClasses.length;\n  var formLabel = !(check || colFormLabel);\n  var classes = mapToCssModules(classNames__default[\"default\"](className, hidden ? 'visually-hidden' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colFormLabel ? 'col-form-label' : false, formLabel ? 'form-label' : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n}\n\nLabel.propTypes = propTypes$m;\nLabel.defaultProps = defaultProps$l;\n\nvar _excluded$i = [\"body\", \"bottom\", \"className\", \"cssModule\", \"heading\", \"left\", \"list\", \"middle\", \"object\", \"right\", \"tag\", \"top\"];\nvar propTypes$l = {\n  body: PropTypes__default[\"default\"].bool,\n  bottom: PropTypes__default[\"default\"].bool,\n  children: PropTypes__default[\"default\"].node,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  heading: PropTypes__default[\"default\"].bool,\n  left: PropTypes__default[\"default\"].bool,\n  list: PropTypes__default[\"default\"].bool,\n  middle: PropTypes__default[\"default\"].bool,\n  object: PropTypes__default[\"default\"].bool,\n  right: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  top: PropTypes__default[\"default\"].bool\n};\n\nfunction Media(props) {\n  var body = props.body,\n      bottom = props.bottom,\n      className = props.className,\n      cssModule = props.cssModule,\n      heading = props.heading,\n      left = props.left,\n      list = props.list,\n      middle = props.middle,\n      object = props.object,\n      right = props.right,\n      tag = props.tag,\n      top = props.top,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$i);\n\n  var defaultTag;\n\n  if (heading) {\n    defaultTag = 'h4';\n  } else if (attributes.href) {\n    defaultTag = 'a';\n  } else if (attributes.src || object) {\n    defaultTag = 'img';\n  } else if (list) {\n    defaultTag = 'ul';\n  } else {\n    defaultTag = 'div';\n  }\n\n  var Tag = tag || defaultTag;\n  var classes = mapToCssModules(classNames__default[\"default\"](className, {\n    'media-body': body,\n    'media-heading': heading,\n    'media-left': left,\n    'media-right': right,\n    'media-top': top,\n    'media-bottom': bottom,\n    'media-middle': middle,\n    'media-object': object,\n    'media-list': list,\n    media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list\n  }), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nMedia.propTypes = propTypes$l;\n\nfunction noop() {}\n\nvar FadePropTypes = PropTypes__default[\"default\"].shape(Fade.propTypes);\nvar propTypes$k = {\n  autoFocus: PropTypes__default[\"default\"].bool,\n  backdrop: PropTypes__default[\"default\"].bool,\n  backdropClassName: PropTypes__default[\"default\"].string,\n  backdropTransition: FadePropTypes,\n  children: PropTypes__default[\"default\"].node,\n  className: PropTypes__default[\"default\"].string,\n  container: targetPropType,\n  cssModule: PropTypes__default[\"default\"].object,\n  direction: PropTypes__default[\"default\"].oneOf(['start', 'end', 'bottom', 'top']),\n  fade: PropTypes__default[\"default\"].bool,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n  isOpen: PropTypes__default[\"default\"].bool,\n  keyboard: PropTypes__default[\"default\"].bool,\n  labelledBy: PropTypes__default[\"default\"].string,\n  offcanvasTransition: FadePropTypes,\n  onClosed: PropTypes__default[\"default\"].func,\n  onEnter: PropTypes__default[\"default\"].func,\n  onExit: PropTypes__default[\"default\"].func,\n  style: PropTypes__default[\"default\"].object,\n  onOpened: PropTypes__default[\"default\"].func,\n  returnFocusAfterClose: PropTypes__default[\"default\"].bool,\n  role: PropTypes__default[\"default\"].string,\n  scrollable: PropTypes__default[\"default\"].bool,\n  toggle: PropTypes__default[\"default\"].func,\n  trapFocus: PropTypes__default[\"default\"].bool,\n  unmountOnClose: PropTypes__default[\"default\"].bool,\n  zIndex: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].number, PropTypes__default[\"default\"].string])\n};\nvar propsToOmit = Object.keys(propTypes$k);\nvar defaultProps$k = {\n  isOpen: false,\n  autoFocus: true,\n  direction: 'start',\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  offcanvasTransition: {\n    timeout: TransitionTimeouts.Offcanvas\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade // uses standard fade transition\n\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nvar Offcanvas = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Offcanvas, _React$Component);\n\n  function Offcanvas(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._element = null;\n    _this._originalBodyPadding = null;\n    _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_this));\n    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_this));\n    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_this));\n    _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_this));\n    _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_this));\n    _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_this));\n    _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_this));\n    _this.manageFocusAfterClose = _this.manageFocusAfterClose.bind(_assertThisInitialized(_this));\n    _this.clearBackdropAnimationTimeout = _this.clearBackdropAnimationTimeout.bind(_assertThisInitialized(_this));\n    _this.trapFocus = _this.trapFocus.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  var _proto = Offcanvas.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        isOpen = _this$props.isOpen,\n        autoFocus = _this$props.autoFocus,\n        onEnter = _this$props.onEnter;\n\n    if (isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      });\n\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    } // traps focus inside the Offcanvas, even if the browser address bar is focused\n\n\n    document.addEventListener('focus', this.trapFocus, true);\n    this._isMounted = true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({\n        isOpen: true\n      });\n      return;\n    } // now Offcanvas Dialog is rendered and we can refer this._element and this._dialog\n\n\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  ;\n\n  _proto.handleBackdropClick = function handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      var backdrop = this._backdrop;\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  };\n\n  _proto.handleTab = function handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.offcanvasIndex < Offcanvas.openCount - 1) return; // last opened offcanvas\n\n    var focusableChildren = this.getFocusableChildren();\n    var totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    var currentFocus = this.getFocusedChild();\n    var focusedIndex = 0;\n\n    for (var i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  };\n\n  _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  };\n\n  _proto.handleEscape = function handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.toggle(e);\n      }\n    }\n  };\n\n  _proto.onOpened = function onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.offcanvasTransition.onEntered || noop)(node, isAppearing);\n  };\n\n  _proto.onClosed = function onClosed(node) {\n    var unmountOnClose = this.props.unmountOnClose; // so all methods get called before it is unmounted\n\n    this.props.onClosed();\n    (this.props.offcanvasTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  _proto.setFocus = function setFocus() {\n    if (this._dialog && typeof this._dialog.focus === 'function') {\n      this._dialog.focus();\n    }\n  };\n\n  _proto.getFocusableChildren = function getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  };\n\n  _proto.getFocusedChild = function getFocusedChild() {\n    var currentFocus;\n    var focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n\n    return currentFocus;\n  };\n\n  _proto.trapFocus = function trapFocus(ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) {\n      // element is not attached\n      return;\n    }\n\n    if (this._dialog === ev.target) {\n      // initial focus when the Offcanvas is opened\n      return;\n    }\n\n    if (this.offcanvasIndex < Offcanvas.openCount - 1) {\n      // last opened offcanvas\n      return;\n    }\n\n    var children = this.getFocusableChildren();\n\n    for (var i = 0; i < children.length; i += 1) {\n      // focus is already inside the Offcanvas\n      if (children[i] === ev.target) return;\n    }\n\n    if (children.length > 0) {\n      // otherwise focus the first focusable element in the Offcanvas\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  };\n\n  _proto.init = function init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n\n      this._element.setAttribute('tabindex', '-1');\n\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n\n    if (Offcanvas.openCount === 0 && this.props.backdrop && !this.props.scrollable) {\n      document.body.style.overflow = 'hidden';\n    }\n\n    this.offcanvasIndex = Offcanvas.openCount;\n    Offcanvas.openCount += 1;\n  };\n\n  _proto.destroy = function destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  };\n\n  _proto.manageFocusAfterClose = function manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      var returnFocusAfterClose = this.props.returnFocusAfterClose;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  };\n\n  _proto.close = function close() {\n    this.manageFocusAfterClose();\n    Offcanvas.openCount = Math.max(0, Offcanvas.openCount - 1);\n    document.body.style.overflow = null;\n    setScrollbarWidth(this._originalBodyPadding);\n  };\n\n  _proto.clearBackdropAnimationTimeout = function clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        direction = _this$props2.direction,\n        unmountOnClose = _this$props2.unmountOnClose;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      var isOffcanvasHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isOffcanvasHidden ? 'none' : 'block';\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          backdropClassName = _this$props3.backdropClassName,\n          cssModule = _this$props3.cssModule,\n          isOpen = _this$props3.isOpen,\n          backdrop = _this$props3.backdrop,\n          role = _this$props3.role,\n          labelledBy = _this$props3.labelledBy,\n          style = _this$props3.style;\n      var offcanvasAttributes = {\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        'aria-labelledby': labelledBy,\n        role: role,\n        tabIndex: '-1'\n      };\n      var hasTransition = this.props.fade;\n\n      var offcanvasTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), this.props.offcanvasTransition), {}, {\n        baseClass: hasTransition ? this.props.offcanvasTransition.baseClass : '',\n        timeout: hasTransition ? this.props.offcanvasTransition.timeout : 0\n      });\n\n      var backdropTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), this.props.backdropTransition), {}, {\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0\n      });\n\n      var Backdrop = backdrop && (hasTransition ? /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, backdropTransition, {\n        \"in\": isOpen && !!backdrop,\n        innerRef: function innerRef(c) {\n          _this2._backdrop = c;\n        },\n        cssModule: cssModule,\n        className: mapToCssModules(classNames__default[\"default\"]('offcanvas-backdrop', backdropClassName), cssModule),\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown\n      })) : /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n        className: mapToCssModules(classNames__default[\"default\"]('offcanvas-backdrop', 'show', backdropClassName), cssModule),\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown\n      }));\n      var attributes = omit(this.props, propsToOmit);\n      return /*#__PURE__*/React__default[\"default\"].createElement(Portal$1, {\n        node: this._element\n      }, /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, attributes, offcanvasAttributes, offcanvasTransition, {\n        \"in\": isOpen,\n        onEntered: this.onOpened,\n        onExited: this.onClosed,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames__default[\"default\"]('offcanvas', className, \"offcanvas-\" + direction), cssModule),\n        innerRef: function innerRef(c) {\n          _this2._dialog = c;\n        },\n        style: _objectSpread2(_objectSpread2({}, style), {}, {\n          visibility: isOpen ? 'visible' : 'hidden'\n        })\n      }), this.props.children), Backdrop);\n    }\n\n    return null;\n  };\n\n  return Offcanvas;\n}(React__default[\"default\"].Component);\n\nOffcanvas.propTypes = propTypes$k;\nOffcanvas.defaultProps = defaultProps$k;\nOffcanvas.openCount = 0;\nvar Offcanvas$1 = Offcanvas;\n\nvar _excluded$h = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$j = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$j = {\n  tag: 'div'\n};\n\nfunction OffcanvasBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$h);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'offcanvas-body'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nOffcanvasBody.propTypes = propTypes$j;\nOffcanvasBody.defaultProps = defaultProps$j;\n\nvar _excluded$g = [\"children\", \"className\", \"close\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"toggle\", \"wrapTag\"];\nvar propTypes$i = {\n  children: PropTypes__default[\"default\"].node,\n  className: PropTypes__default[\"default\"].string,\n  close: PropTypes__default[\"default\"].object,\n  closeAriaLabel: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  tag: tagPropType,\n  toggle: PropTypes__default[\"default\"].func,\n  wrapTag: tagPropType\n};\nvar defaultProps$i = {\n  closeAriaLabel: 'Close',\n  tag: 'h5',\n  wrapTag: 'div'\n};\n\nfunction OffcanvasHeader(props) {\n  var closeButton;\n\n  var children = props.children,\n      className = props.className,\n      close = props.close,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      toggle = props.toggle,\n      WrapTag = props.wrapTag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$g);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'offcanvas-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React__default[\"default\"].createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React__default[\"default\"].createElement(Tag, {\n    className: mapToCssModules('offcanvas-title', cssModule)\n  }, children), close || closeButton);\n}\n\nOffcanvasHeader.propTypes = propTypes$i;\nOffcanvasHeader.defaultProps = defaultProps$i;\n\nvar _excluded$f = [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"];\nvar propTypes$h = {\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Add custom class for list */\n  listClassName: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Make the Pagination bigger or smaller  */\n  size: PropTypes__default[\"default\"].string,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Set a custom element for list component */\n  listTag: tagPropType,\n  'aria-label': PropTypes__default[\"default\"].string\n};\nvar defaultProps$h = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nfunction Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$f);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className), cssModule);\n  var listClasses = mapToCssModules(classNames__default[\"default\"](listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, /*#__PURE__*/React__default[\"default\"].createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n}\n\nPagination.propTypes = propTypes$h;\nPagination.defaultProps = defaultProps$h;\n\nvar _excluded$e = [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"];\nvar propTypes$g = {\n  /** Set item as active */\n  active: PropTypes__default[\"default\"].bool,\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set item as disabled */\n  disabled: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$g = {\n  tag: 'li'\n};\n\nfunction PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$e);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nPaginationItem.propTypes = propTypes$g;\nPaginationItem.defaultProps = defaultProps$g;\n\nvar _excluded$d = [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"];\nvar propTypes$f = {\n  'aria-label': PropTypes__default[\"default\"].string,\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Add to next button to add default aria label and icon */\n  next: PropTypes__default[\"default\"].bool,\n\n  /** Add to previous button to add default aria label and icon */\n  previous: PropTypes__default[\"default\"].bool,\n\n  /** Add to first button to add default aria label and icon */\n  first: PropTypes__default[\"default\"].bool,\n\n  /** Add to last button to add default aria label and icon */\n  last: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$f = {\n  tag: 'a'\n};\n\nfunction PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$d);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [/*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n      className: \"visually-hidden\",\n      key: \"ariaLabel\"\n    }, ariaLabel)];\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n}\n\nPaginationLink.propTypes = propTypes$f;\nPaginationLink.defaultProps = defaultProps$f;\n\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nvar TabContext = React__default[\"default\"].createContext({});\n\nvar propTypes$e = {\n  tag: tagPropType,\n  activeTab: PropTypes__default[\"default\"].any,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps$e = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes$e));\n    var classes = mapToCssModules(classNames__default[\"default\"]('tab-content', className), cssModule);\n    return /*#__PURE__*/React__default[\"default\"].createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(React.Component);\n\nvar TabContent$1 = TabContent;\nTabContent.propTypes = propTypes$e;\nTabContent.defaultProps = defaultProps$e;\n\nvar _excluded$c = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nvar propTypes$d = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  tabId: PropTypes__default[\"default\"].any\n};\nvar defaultProps$d = {\n  tag: 'div'\n};\nfunction TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$c);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames__default[\"default\"]('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes$d;\nTabPane.defaultProps = defaultProps$d;\n\nvar _excluded$b = [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"];\nvar propTypes$c = {\n  /** Pass children so this component can wrap the child elements */\n  children: PropTypes__default[\"default\"].node,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Add custom class for close button */\n  closeClassName: PropTypes__default[\"default\"].string,\n\n  /** Aria label for close button */\n  closeAriaLabel: PropTypes__default[\"default\"].string,\n\n  /** Change color of alert */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Toggle fade animation */\n  fade: PropTypes__default[\"default\"].bool,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func]),\n\n  /** Control visibility state of Alert */\n  isOpen: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Function to toggle visibility */\n  toggle: PropTypes__default[\"default\"].func,\n\n  /** Props to be passed to `Fade` to modify transition */\n  transition: PropTypes__default[\"default\"].shape(Fade.propTypes)\n};\nvar defaultProps$c = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2(_objectSpread2({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$b);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames__default[\"default\"]('btn-close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    \"in\": isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React__default[\"default\"].createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }) : null, children);\n}\n\nAlert.propTypes = propTypes$c;\nAlert.defaultProps = defaultProps$c;\n\nvar _excluded$a = [\"className\", \"cssModule\", \"tag\", \"isOpen\", \"children\", \"transition\", \"fade\", \"innerRef\"];\nvar propTypes$b = {\n  children: PropTypes__default[\"default\"].node,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  fade: PropTypes__default[\"default\"].bool,\n  isOpen: PropTypes__default[\"default\"].bool,\n  tag: tagPropType,\n  transition: PropTypes__default[\"default\"].shape(Fade.propTypes),\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func])\n};\nvar defaultProps$b = {\n  isOpen: true,\n  tag: 'div',\n  fade: true,\n  transition: _objectSpread2(_objectSpread2({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Toast(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      isOpen = props.isOpen,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$a);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'toast'), cssModule);\n\n  var toastTransition = _objectSpread2(_objectSpread2(_objectSpread2({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Fade, _extends({}, attributes, toastTransition, {\n    tag: Tag,\n    className: classes,\n    \"in\": isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), children);\n}\n\nToast.propTypes = propTypes$b;\nToast.defaultProps = defaultProps$b;\n\nvar _excluded$9 = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nvar propTypes$a = {\n  tag: tagPropType,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].func])\n};\nvar defaultProps$a = {\n  tag: 'div'\n};\n\nfunction ToastBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$9);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'toast-body'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\n\nToastBody.propTypes = propTypes$a;\nToastBody.defaultProps = defaultProps$a;\n\nvar _excluded$8 = [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\", \"tagClassName\", \"icon\"];\nvar propTypes$9 = {\n  tag: tagPropType,\n  icon: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].node]),\n  wrapTag: tagPropType,\n  toggle: PropTypes__default[\"default\"].func,\n  className: PropTypes__default[\"default\"].string,\n  cssModule: PropTypes__default[\"default\"].object,\n  children: PropTypes__default[\"default\"].node,\n  closeAriaLabel: PropTypes__default[\"default\"].string,\n  charCode: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].string, PropTypes__default[\"default\"].number]),\n  close: PropTypes__default[\"default\"].object,\n  tagClassName: PropTypes__default[\"default\"].string\n};\nvar defaultProps$9 = {\n  tag: 'strong',\n  wrapTag: 'div',\n  tagClassName: 'me-auto',\n  closeAriaLabel: 'Close'\n};\n\nfunction ToastHeader(props) {\n  var closeButton;\n  var icon;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      close = props.close,\n      tagClassName = props.tagClassName,\n      iconProp = props.icon,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$8);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'toast-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React__default[\"default\"].createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  if (typeof iconProp === 'string') {\n    icon = /*#__PURE__*/React__default[\"default\"].createElement(\"svg\", {\n      className: mapToCssModules(\"rounded text-\" + iconProp),\n      width: \"20\",\n      height: \"20\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      preserveAspectRatio: \"xMidYMid slice\",\n      focusable: \"false\",\n      role: \"img\"\n    }, /*#__PURE__*/React__default[\"default\"].createElement(\"rect\", {\n      fill: \"currentColor\",\n      width: \"100%\",\n      height: \"100%\"\n    }));\n  } else if (iconProp) {\n    icon = iconProp;\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), icon, /*#__PURE__*/React__default[\"default\"].createElement(Tag, {\n    className: mapToCssModules(classNames__default[\"default\"](tagClassName, {\n      'ms-2': icon != null\n    }), cssModule)\n  }, children), close || closeButton);\n}\n\nToastHeader.propTypes = propTypes$9;\nToastHeader.defaultProps = defaultProps$9;\n\nvar _excluded$7 = [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"];\nvar propTypes$8 = {\n  /** Add action prop to give effects while hovering over element */\n  action: PropTypes__default[\"default\"].bool,\n\n  /** Add active prop to make the current selection active */\n  active: PropTypes__default[\"default\"].bool,\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Add background colour to the list item */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Make the list item appear disabled */\n  disabled: PropTypes__default[\"default\"].bool,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$8 = {\n  tag: 'li'\n};\n\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\n\nfunction ListGroupItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      active = props.active,\n      disabled = props.disabled,\n      action = props.action,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$7);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nListGroupItem.propTypes = propTypes$8;\nListGroupItem.defaultProps = defaultProps$8;\n\nvar _excluded$6 = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$7 = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$7 = {\n  tag: 'h5'\n};\n\nfunction ListGroupItemHeading(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$6);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'list-group-item-heading'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nListGroupItemHeading.propTypes = propTypes$7;\nListGroupItemHeading.defaultProps = defaultProps$7;\n\nvar _excluded$5 = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$6 = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$6 = {\n  tag: 'p'\n};\n\nfunction ListGroupItemText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$5);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'list-group-item-text'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\n\nListGroupItemText.propTypes = propTypes$6;\nListGroupItemText.defaultProps = defaultProps$6;\n\nvar _excluded$4 = [\"className\", \"cssModule\", \"tag\", \"type\"];\nvar propTypes$5 = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Type of list `unstyled` or `inline` */\n  type: PropTypes__default[\"default\"].string\n};\nvar defaultProps$5 = {\n  tag: 'ul'\n};\nvar List = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      type = props.type,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$4);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, type ? \"list-\" + type : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: ref\n  }));\n});\nList.name = 'List';\nList.propTypes = propTypes$5;\nList.defaultProps = defaultProps$5;\nvar List$1 = List;\n\nvar _excluded$3 = [\"className\", \"cssModule\", \"tag\"];\nvar propTypes$4 = {\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar defaultProps$4 = {\n  tag: 'li'\n};\nvar ListInlineItem = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, 'list-inline-item'), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: ref\n  }));\n});\nListInlineItem.name = 'ListInlineItem';\nListInlineItem.propTypes = propTypes$4;\nListInlineItem.defaultProps = defaultProps$4;\nvar ListInlineItem$1 = ListInlineItem;\n\nvar UncontrolledAlert = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledAlert, _Component);\n\n  function UncontrolledAlert(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: true\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledAlert.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState(function (prevState) {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Alert, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, this.props));\n  };\n\n  return UncontrolledAlert;\n}(React.Component);\n\nvar UncontrolledAlert$1 = UncontrolledAlert;\n\nvar omitKeys$3 = ['defaultOpen'];\n\nvar UncontrolledButtonDropdown = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledButtonDropdown, _Component);\n\n  function UncontrolledButtonDropdown(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledButtonDropdown.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState(function (prevState) {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default[\"default\"].createElement(ButtonDropdown, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys$3)));\n  };\n\n  return UncontrolledButtonDropdown;\n}(React.Component);\nUncontrolledButtonDropdown.propTypes = _objectSpread2({\n  defaultOpen: PropTypes__default[\"default\"].bool\n}, ButtonDropdown.propTypes);\n\nvar omitKeys$2 = ['toggleEvents', 'defaultOpen'];\nvar propTypes$3 = {\n  /** set if Collapse is open by default */\n  defaultOpen: PropTypes__default[\"default\"].bool,\n\n  /** id of the element that should trigger toggle */\n  toggler: PropTypes__default[\"default\"].string.isRequired,\n\n  /** Events that should trigger the toggle */\n  toggleEvents: PropTypes__default[\"default\"].arrayOf(PropTypes__default[\"default\"].string)\n};\nvar defaultProps$3 = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Collapse$1, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys$2)));\n  };\n\n  return UncontrolledCollapse;\n}(React.Component);\n\nUncontrolledCollapse.propTypes = propTypes$3;\nUncontrolledCollapse.defaultProps = defaultProps$3;\nvar UncontrolledCollapse$1 = UncontrolledCollapse;\n\nvar omitKeys$1 = ['defaultOpen'];\n\nvar UncontrolledDropdown = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledDropdown, _Component);\n\n  function UncontrolledDropdown(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledDropdown.prototype;\n\n  _proto.toggle = function toggle(e) {\n    var _this2 = this;\n\n    this.setState(function (prevState) {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    }, function () {\n      if (_this2.props.onToggle) {\n        _this2.props.onToggle(e, _this2.state.isOpen);\n      }\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Dropdown$1, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys$1)));\n  };\n\n  return UncontrolledDropdown;\n}(React.Component);\nUncontrolledDropdown.propTypes = _objectSpread2({\n  defaultOpen: PropTypes__default[\"default\"].bool,\n  onToggle: PropTypes__default[\"default\"].func\n}, Dropdown$1.propTypes);\n\nvar omitKeys = ['defaultOpen'];\n\nvar UncontrolledTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledTooltip, _Component);\n\n  function UncontrolledTooltip(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledTooltip.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState(function (prevState) {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React__default[\"default\"].createElement(Tooltip, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledTooltip;\n}(React.Component);\nUncontrolledTooltip.propTypes = _objectSpread2({\n  defaultOpen: PropTypes__default[\"default\"].bool\n}, Tooltip.propTypes);\n\nvar _excluded$2 = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nvar propTypes$2 = {\n  /** Set a custom element for this component */\n  tag: tagPropType,\n\n  /** Change animation of spinner */\n  type: PropTypes__default[\"default\"].oneOf(['border', 'grow']),\n\n  /** Change size of spinner */\n  size: PropTypes__default[\"default\"].oneOf(['sm']),\n\n  /** Change color of spinner */\n  color: PropTypes__default[\"default\"].oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']),\n\n  /** Add custom class */\n  className: PropTypes__default[\"default\"].string,\n\n  /** Change existing className with a new className */\n  cssModule: PropTypes__default[\"default\"].object,\n\n  /** Pass children so this component can wrap the child elements */\n  children: PropTypes__default[\"default\"].string\n};\nvar defaultProps$2 = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nfunction Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React__default[\"default\"].createElement(\"span\", {\n    className: mapToCssModules('visually-hidden', cssModule)\n  }, children));\n}\n\nSpinner.propTypes = propTypes$2;\nSpinner.defaultProps = defaultProps$2;\n\nvar _excluded$1 = [\"className\", \"cssModule\", \"color\", \"innerRef\", \"tag\", \"animation\", \"size\", \"widths\"];\n\nvar propTypes$1 = _objectSpread2(_objectSpread2({}, Col.propTypes), {}, {\n  /** Add custom color to the placeholder */\n  color: PropTypes__default[\"default\"].string,\n\n  /** Add custom tag. */\n  tag: tagPropType,\n\n  /** Apply either `glow` or `wave` animation. */\n  animation: PropTypes__default[\"default\"].oneOf(['glow', 'wave']),\n  innerRef: PropTypes__default[\"default\"].oneOfType([PropTypes__default[\"default\"].object, PropTypes__default[\"default\"].func, PropTypes__default[\"default\"].string]),\n\n  /** Make the size larger */\n  size: PropTypes__default[\"default\"].oneOf(['lg', 'sm', 'xs'])\n});\n\nvar defaultProps$1 = {\n  tag: 'span'\n};\n\nfunction Placeholder(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      animation = props.animation,\n      size = props.size,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  var _getColumnClasses = getColumnClasses(attributes, cssModule, widths),\n      modifiedAttributes = _getColumnClasses.attributes,\n      colClasses = _getColumnClasses.colClasses;\n\n  var classes = mapToCssModules(classNames__default[\"default\"](className, colClasses, 'placeholder' + (animation ? '-' + animation : ''), size ? 'placeholder-' + size : false, color ? 'bg-' + color : false), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Tag, _extends({}, modifiedAttributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\n\nPlaceholder.propTypes = propTypes$1;\nPlaceholder.defaultProps = defaultProps$1;\n\nvar _excluded = [\"cssModule\", \"className\", \"tag\"];\nvar propTypes = {\n  size: PropTypes__default[\"default\"].string,\n  color: PropTypes__default[\"default\"].string,\n  outline: PropTypes__default[\"default\"].bool,\n  className: PropTypes__default[\"default\"].string,\n  tag: tagPropType,\n  cssModule: PropTypes__default[\"default\"].object\n};\nvar defaultProps = {\n  color: 'primary',\n  tag: Button\n};\n\nfunction PlaceholderButton(props) {\n  var cssModule = props.cssModule,\n      className = props.className,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _getColumnClasses = getColumnClasses(attributes, cssModule),\n      modifiedAttributes = _getColumnClasses.attributes,\n      colClasses = _getColumnClasses.colClasses;\n\n  var classes = mapToCssModules(classNames__default[\"default\"]('placeholder', className, colClasses), cssModule);\n  return /*#__PURE__*/React__default[\"default\"].createElement(Button, _extends({}, modifiedAttributes, {\n    className: classes,\n    disabled: true\n  }));\n}\n\nPlaceholderButton.propTypes = propTypes;\nPlaceholderButton.defaultProps = defaultProps;\n\n(function () {\n  if (typeof window !== 'object' || typeof window.CustomEvent === 'function') return;\n\n  var CustomEvent = function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: null\n    };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n\n  window.CustomEvent = CustomEvent;\n})();\n\n(function () {\n  if (typeof Object.values === 'function') return;\n\n  var values = function values(O) {\n    return Object.keys(O).map(function (key) {\n      return O[key];\n    });\n  };\n\n  Object.values = values;\n})();\n\nvar polyfill = {\n  __proto__: null\n};\n\nexports.Accordion = Accordion;\nexports.AccordionBody = AccordionBody;\nexports.AccordionContext = AccordionContext;\nexports.AccordionHeader = AccordionHeader;\nexports.AccordionItem = AccordionItem;\nexports.Alert = Alert;\nexports.Badge = Badge;\nexports.Breadcrumb = Breadcrumb;\nexports.BreadcrumbItem = BreadcrumbItem;\nexports.Button = Button;\nexports.ButtonDropdown = ButtonDropdown;\nexports.ButtonGroup = ButtonGroup;\nexports.ButtonToggle = ButtonToggle;\nexports.ButtonToolbar = ButtonToolbar;\nexports.Card = Card;\nexports.CardBody = CardBody;\nexports.CardColumns = CardColumns;\nexports.CardDeck = CardDeck;\nexports.CardFooter = CardFooter;\nexports.CardGroup = CardGroup;\nexports.CardHeader = CardHeader;\nexports.CardImg = CardImg;\nexports.CardImgOverlay = CardImgOverlay;\nexports.CardLink = CardLink;\nexports.CardSubtitle = CardSubtitle;\nexports.CardText = CardText;\nexports.CardTitle = CardTitle;\nexports.Carousel = Carousel$1;\nexports.CarouselCaption = CarouselCaption;\nexports.CarouselControl = CarouselControl;\nexports.CarouselIndicators = CarouselIndicators;\nexports.CarouselItem = CarouselItem$1;\nexports.CloseButton = CloseButton;\nexports.Col = Col;\nexports.Collapse = Collapse$1;\nexports.Container = Container;\nexports.Dropdown = Dropdown$1;\nexports.DropdownContext = DropdownContext;\nexports.DropdownItem = DropdownItem$1;\nexports.DropdownMenu = DropdownMenu$1;\nexports.DropdownToggle = DropdownToggle$1;\nexports.Fade = Fade;\nexports.Form = Form$1;\nexports.FormFeedback = FormFeedback;\nexports.FormGroup = FormGroup;\nexports.FormText = FormText;\nexports.Input = Input$1;\nexports.InputGroup = InputGroup;\nexports.InputGroupText = InputGroupText;\nexports.Label = Label;\nexports.List = List$1;\nexports.ListGroup = ListGroup;\nexports.ListGroupItem = ListGroupItem;\nexports.ListGroupItemHeading = ListGroupItemHeading;\nexports.ListGroupItemText = ListGroupItemText;\nexports.ListInlineItem = ListInlineItem$1;\nexports.Media = Media;\nexports.Modal = Modal$1;\nexports.ModalBody = ModalBody;\nexports.ModalFooter = ModalFooter;\nexports.ModalHeader = ModalHeader;\nexports.Nav = Nav;\nexports.NavItem = NavItem;\nexports.NavLink = NavLink$1;\nexports.Navbar = Navbar;\nexports.NavbarBrand = NavbarBrand;\nexports.NavbarText = NavbarText;\nexports.NavbarToggler = NavbarToggler;\nexports.Offcanvas = Offcanvas$1;\nexports.OffcanvasBody = OffcanvasBody;\nexports.OffcanvasHeader = OffcanvasHeader;\nexports.Pagination = Pagination;\nexports.PaginationItem = PaginationItem;\nexports.PaginationLink = PaginationLink;\nexports.Placeholder = Placeholder;\nexports.PlaceholderButton = PlaceholderButton;\nexports.Polyfill = polyfill;\nexports.Popover = Popover;\nexports.PopoverBody = PopoverBody;\nexports.PopoverHeader = PopoverHeader;\nexports.PopperContent = PopperContent$1;\nexports.PopperTargetHelper = PopperTargetHelper;\nexports.Progress = Progress;\nexports.Row = Row;\nexports.Spinner = Spinner;\nexports.TabContent = TabContent$1;\nexports.TabPane = TabPane;\nexports.Table = Table;\nexports.Toast = Toast;\nexports.ToastBody = ToastBody;\nexports.ToastHeader = ToastHeader;\nexports.Tooltip = Tooltip;\nexports.UncontrolledAccordion = UncontrolledAccordion;\nexports.UncontrolledAlert = UncontrolledAlert$1;\nexports.UncontrolledButtonDropdown = UncontrolledButtonDropdown;\nexports.UncontrolledCarousel = UncontrolledCarousel$1;\nexports.UncontrolledCollapse = UncontrolledCollapse$1;\nexports.UncontrolledDropdown = UncontrolledDropdown;\nexports.UncontrolledPopover = UncontrolledPopover;\nexports.UncontrolledTooltip = UncontrolledTooltip;\nexports.Util = utils;\n//# sourceMappingURL=reactstrap.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reactstrap/dist/reactstrap.cjs\n");

/***/ }),

/***/ "./pages/profile.js":
/*!**************************!*\
  !*** ./pages/profile.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Profile; });\n/* harmony import */ var _lib_auth2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/auth2 */ \"./lib/auth2.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var reactstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! reactstrap */ \"./node_modules/reactstrap/dist/reactstrap.cjs\");\n/* harmony import */ var reactstrap__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(reactstrap__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-cookie */ \"js-cookie\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _services_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/api */ \"./services/api.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);\nvar _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/profile.js\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\n\nfunction Profile() {\n  // const { user } = useAuth();\n\n  return __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Form\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"FormGroup\"], {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Label\"], {\n    for: \"exampleEmail\",\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Col\"], {\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Input\"], {\n    name: \"email\",\n    placeholder: \"test\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))), __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"FormGroup\"], {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Label\"], {\n    for: \"username\",\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Username\"), __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Col\"], {\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(reactstrap__WEBPACK_IMPORTED_MODULE_2__[\"Input\"], {\n    name: \"username\",\n    placeholder: \"test\",\n    type: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }))));\n}\n\n// export async function getServerSideProps() {\n//   const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n//   const token = Cookies.get(\"token\");\n\n//   // const { user: user } = await api.get(\"users/me\");\n//   // console.log(`user object: ${user}`);\n\n//   const { user } = await axios.get(`${API_URL}/users/me`, {\n//     baseURL: API_URL[process.env.NODE_ENV],\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\",\n//       Authorization: `Bearer ${token}`,\n//     },\n//   });\n\n//   if (!user) {\n//     return {\n//       notFound: true,\n//     };\n//   }\n//   console.log(\"ssr\" + user);\n\n//   const data = user;\n//   return {\n//     props: {\n//       data,\n//     },\n//   };\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9wcm9maWxlLmpzPzViZTIiXSwibmFtZXMiOlsiUHJvZmlsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDQztBQUN3QjtBQUNoQztBQUNFO0FBQ1I7QUFFWCxTQUFTQSxPQUFPLEdBQUc7RUFDaEM7O0VBRUEsT0FDRSxNQUFDLCtDQUFJO0lBQUE7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0VBQUEsR0FDSCxNQUFDLG9EQUFTO0lBQUMsR0FBRztJQUFBO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtFQUFBLEdBQ1osTUFBQyxnREFBSztJQUNKLEdBQUcsRUFBQyxjQUFjO0lBQ2xCLEVBQUUsRUFBRSxDQUFFO0lBQUE7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0VBQUEsV0FFQSxFQUNSLE1BQUMsOENBQUc7SUFBQyxFQUFFLEVBQUUsRUFBRztJQUFBO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtFQUFBLEdBQ1YsTUFBQyxnREFBSztJQUNKLElBQUksRUFBQyxPQUFPO0lBQ1osV0FBVyxFQUFDLE1BQU07SUFDbEIsSUFBSSxFQUFDLE9BQU87SUFBQTtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7RUFBQSxFQUNaLENBQ0UsQ0FDSSxFQUNaLE1BQUMsb0RBQVM7SUFBQyxHQUFHO0lBQUE7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0VBQUEsR0FDWixNQUFDLGdEQUFLO0lBQ0osR0FBRyxFQUFDLFVBQVU7SUFDZCxFQUFFLEVBQUUsQ0FBRTtJQUFBO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtFQUFBLGNBRUEsRUFDUixNQUFDLDhDQUFHO0lBQUMsRUFBRSxFQUFFLEVBQUc7SUFBQTtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7RUFBQSxHQUNWLE1BQUMsZ0RBQUs7SUFDSixJQUFJLEVBQUMsVUFBVTtJQUNmLFdBQVcsRUFBQyxNQUFNO0lBQ2xCLElBQUksRUFBQyxVQUFVO0lBQUE7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0VBQUEsRUFDZixDQUNFLENBQ0ksQ0FDUDtBQUVYOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vcGFnZXMvcHJvZmlsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUF1dGggfSBmcm9tIFwiLi4vbGliL2F1dGgyXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEZvcm0sIEZvcm1Hcm91cCwgTGFiZWwsIElucHV0LCBDb2wgfSBmcm9tIFwicmVhY3RzdHJhcFwiO1xuaW1wb3J0IENvb2tpZXMgZnJvbSBcImpzLWNvb2tpZVwiO1xuaW1wb3J0IGFwaSBmcm9tIFwiLi4vc2VydmljZXMvYXBpXCI7XG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFByb2ZpbGUoKSB7XG4gIC8vIGNvbnN0IHsgdXNlciB9ID0gdXNlQXV0aCgpO1xuXG4gIHJldHVybiAoXG4gICAgPEZvcm0+XG4gICAgICA8Rm9ybUdyb3VwIHJvdz5cbiAgICAgICAgPExhYmVsXG4gICAgICAgICAgZm9yPSdleGFtcGxlRW1haWwnXG4gICAgICAgICAgc209ezJ9PlxuICAgICAgICAgIEVtYWlsXG4gICAgICAgIDwvTGFiZWw+XG4gICAgICAgIDxDb2wgc209ezEwfT5cbiAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgIG5hbWU9J2VtYWlsJ1xuICAgICAgICAgICAgcGxhY2Vob2xkZXI9J3Rlc3QnXG4gICAgICAgICAgICB0eXBlPSdlbWFpbCdcbiAgICAgICAgICAvPlxuICAgICAgICA8L0NvbD5cbiAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgPEZvcm1Hcm91cCByb3c+XG4gICAgICAgIDxMYWJlbFxuICAgICAgICAgIGZvcj0ndXNlcm5hbWUnXG4gICAgICAgICAgc209ezJ9PlxuICAgICAgICAgIFVzZXJuYW1lXG4gICAgICAgIDwvTGFiZWw+XG4gICAgICAgIDxDb2wgc209ezEwfT5cbiAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgIG5hbWU9J3VzZXJuYW1lJ1xuICAgICAgICAgICAgcGxhY2Vob2xkZXI9J3Rlc3QnXG4gICAgICAgICAgICB0eXBlPSd1c2VybmFtZSdcbiAgICAgICAgICAvPlxuICAgICAgICA8L0NvbD5cbiAgICAgIDwvRm9ybUdyb3VwPlxuICAgIDwvRm9ybT5cbiAgKTtcbn1cblxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcygpIHtcbi8vICAgY29uc3QgQVBJX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgXCJodHRwOi8vbG9jYWxob3N0OjEzMzdcIjtcbi8vICAgY29uc3QgdG9rZW4gPSBDb29raWVzLmdldChcInRva2VuXCIpO1xuXG4vLyAgIC8vIGNvbnN0IHsgdXNlcjogdXNlciB9ID0gYXdhaXQgYXBpLmdldChcInVzZXJzL21lXCIpO1xuLy8gICAvLyBjb25zb2xlLmxvZyhgdXNlciBvYmplY3Q6ICR7dXNlcn1gKTtcblxuLy8gICBjb25zdCB7IHVzZXIgfSA9IGF3YWl0IGF4aW9zLmdldChgJHtBUElfVVJMfS91c2Vycy9tZWAsIHtcbi8vICAgICBiYXNlVVJMOiBBUElfVVJMW3Byb2Nlc3MuZW52Lk5PREVfRU5WXSxcbi8vICAgICBoZWFkZXJzOiB7XG4vLyAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuLy8gICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4vLyAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCxcbi8vICAgICB9LFxuLy8gICB9KTtcblxuLy8gICBpZiAoIXVzZXIpIHtcbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgbm90Rm91bmQ6IHRydWUsXG4vLyAgICAgfTtcbi8vICAgfVxuLy8gICBjb25zb2xlLmxvZyhcInNzclwiICsgdXNlcik7XG5cbi8vICAgY29uc3QgZGF0YSA9IHVzZXI7XG4vLyAgIHJldHVybiB7XG4vLyAgICAgcHJvcHM6IHtcbi8vICAgICAgIGRhdGEsXG4vLyAgICAgfSxcbi8vICAgfTtcbi8vIH1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/profile.js\n");

/***/ }),

/***/ "./services/api.js":
/*!*************************!*\
  !*** ./services/api.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n// api.js\n\nlet urls = {\n  test: `http://localhost:1337`,\n  development: \"http://localhost:1337/\"\n  //   production: \"https://your-production-url.com/\",\n};\n\nconst api = axios__WEBPACK_IMPORTED_MODULE_0___default.a.create({\n  baseURL: urls[\"development\"],\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n//Headers are defined and updated here\n//to be used inside DAL requests//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zZXJ2aWNlcy9hcGkuanM/ZDhjNCJdLCJuYW1lcyI6WyJ1cmxzIiwidGVzdCIsImRldmVsb3BtZW50IiwiYXBpIiwiQXhpb3MiLCJjcmVhdGUiLCJiYXNlVVJMIiwiaGVhZGVycyIsIkFjY2VwdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDMEI7QUFFMUIsSUFBSUEsSUFBSSxHQUFHO0VBQ1RDLElBQUksRUFBRyx1QkFBc0I7RUFDN0JDLFdBQVcsRUFBRTtFQUNiO0FBQ0YsQ0FBQzs7QUFDRCxNQUFNQyxHQUFHLEdBQUdDLDRDQUFLLENBQUNDLE1BQU0sQ0FBQztFQUN2QkMsT0FBTyxFQUFFTixJQUFJLGVBQXNCO0VBQ25DTyxPQUFPLEVBQUU7SUFDUEMsTUFBTSxFQUFFLGtCQUFrQjtJQUMxQixjQUFjLEVBQUU7RUFDbEI7QUFDRixDQUFDLENBQUM7QUFFYUwsa0VBQUcsRUFBQzs7QUFFbkI7QUFDQSIsImZpbGUiOiIuL3NlcnZpY2VzL2FwaS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGFwaS5qc1xuaW1wb3J0IEF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG5sZXQgdXJscyA9IHtcbiAgdGVzdDogYGh0dHA6Ly9sb2NhbGhvc3Q6MTMzN2AsXG4gIGRldmVsb3BtZW50OiBcImh0dHA6Ly9sb2NhbGhvc3Q6MTMzNy9cIixcbiAgLy8gICBwcm9kdWN0aW9uOiBcImh0dHBzOi8veW91ci1wcm9kdWN0aW9uLXVybC5jb20vXCIsXG59O1xuY29uc3QgYXBpID0gQXhpb3MuY3JlYXRlKHtcbiAgYmFzZVVSTDogdXJsc1twcm9jZXNzLmVudi5OT0RFX0VOVl0sXG4gIGhlYWRlcnM6IHtcbiAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwaTtcblxuLy9IZWFkZXJzIGFyZSBkZWZpbmVkIGFuZCB1cGRhdGVkIGhlcmVcbi8vdG8gYmUgdXNlZCBpbnNpZGUgREFMIHJlcXVlc3RzXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./services/api.js\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"axios\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJheGlvc1wiPzcwYzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiYXhpb3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJheGlvc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///axios\n");

/***/ }),

/***/ "classnames":
/*!*****************************!*\
  !*** external "classnames" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"classnames\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJjbGFzc25hbWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiY2xhc3NuYW1lc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///classnames\n");

/***/ }),

/***/ "js-cookie":
/*!****************************!*\
  !*** external "js-cookie" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"js-cookie\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqcy1jb29raWVcIj8wM2MxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImpzLWNvb2tpZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImpzLWNvb2tpZVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///js-cookie\n");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"next/router\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJuZXh0L3JvdXRlclwiP2Q4M2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoibmV4dC9yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJuZXh0L3JvdXRlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///next/router\n");

/***/ }),

/***/ "prop-types":
/*!*****************************!*\
  !*** external "prop-types" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"prop-types\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJwcm9wLXR5cGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicHJvcC10eXBlc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///prop-types\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react-dom\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1kb21cIj81ZTlhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InJlYWN0LWRvbS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LWRvbVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react-dom\n");

/***/ }),

/***/ "react-popper":
/*!*******************************!*\
  !*** external "react-popper" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react-popper\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1wb3BwZXJcIj9hOGY0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6InJlYWN0LXBvcHBlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXBvcHBlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react-popper\n");

/***/ }),

/***/ "react-transition-group":
/*!*****************************************!*\
  !*** external "react-transition-group" ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"react-transition-group\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC10cmFuc2l0aW9uLWdyb3VwXCI/ZGRlMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC10cmFuc2l0aW9uLWdyb3VwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3QtdHJhbnNpdGlvbi1ncm91cFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react-transition-group\n");

/***/ })

/******/ });