{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[id].js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport client from \"../client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\nexport default function Test(_ref) {\n  _s();\n  var id = _ref.id;\n  console.log(id);\n  var _useContext = useContext(AppContext),\n    addItem = _useContext.addItem;\n  var GET_RESTAURANT_DISHES = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query ($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  \"])));\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n      variables: {\n        id: id\n      }\n    }),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  return __jsx(Dishes, {\n    restId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, \" \");\n}\n_s(Test, \"2IiZu96LzC4KzwsvR/Bt1ejWkMs=\", false, function () {\n  return [useQuery];\n});\n_c = Test;\nTest.getInitialProps = function (ctx) {\n  var id = ctx.query.id;\n  console.log(\" id from getInitialProps \".concat(id));\n  return {\n    id: id\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["gql","useQuery","Dishes","Container","Row","client","useState","useContext","AppContext","Test","id","console","log","addItem","GET_RESTAURANT_DISHES","variables","loading","error","data","getInitialProps","ctx","query"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[id].js"],"sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport client from \"../client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\n\nexport default function Test({ id }) {\n  console.log(id);\n  const { addItem } = useContext(AppContext);\n\n  const GET_RESTAURANT_DISHES = gql`\n    query ($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: id },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  return <Dishes restId={id}> </Dishes>;\n}\n\nTest.getInitialProps = function (ctx) {\n  const { id } = ctx.query;\n  console.log(` id from getInitialProps ${id}`);\n  return { id };\n};\n"],"mappings":";;;;;;AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,EAAEC,GAAG,QAAQ,YAAY;AAC3C,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,eAAe,SAASC,IAAI,OAAS;EAAA;EAAA,IAANC,EAAE,QAAFA,EAAE;EAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EACf,kBAAoBH,UAAU,CAACC,UAAU,CAAC;IAAlCK,OAAO,eAAPA,OAAO;EAEf,IAAMC,qBAAqB,GAAGd,GAAG,4TAgBhC;EAED,gBAAiCC,QAAQ,CAACa,qBAAqB,EAAE;MAC/DC,SAAS,EAAE;QAAEL,EAAE,EAAEA;MAAG;IACtB,CAAC,CAAC;IAFMM,OAAO,aAAPA,OAAO;IAAEC,KAAK,aAALA,KAAK;IAAEC,IAAI,aAAJA,IAAI;EAI5B,IAAIF,OAAO,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiB;EACrC,IAAIC,KAAK,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiB;EACnC,IAAI,CAACC,IAAI,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAgB;EAElC,OAAO,MAAC,MAAM;IAAC,MAAM,EAAER,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAW;AACvC;AAAC,GA/BuBD,IAAI;EAAA,QAsBOR,QAAQ;AAAA;AAAA,KAtBnBQ,IAAI;AAiC5BA,IAAI,CAACU,eAAe,GAAG,UAAUC,GAAG,EAAE;EACpC,IAAQV,EAAE,GAAKU,GAAG,CAACC,KAAK,CAAhBX,EAAE;EACVC,OAAO,CAACC,GAAG,oCAA6BF,EAAE,EAAG;EAC7C,OAAO;IAAEA,EAAE,EAAFA;EAAG,CAAC;AACf,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}