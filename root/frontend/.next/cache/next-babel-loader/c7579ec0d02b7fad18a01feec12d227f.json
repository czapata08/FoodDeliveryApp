{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject;\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row, InputGroup, Input } from \"reactstrap\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\nimport Cart from \"../../components/cart\";\nimport HeroSection from \"../../components/hero\";\nimport PopOver from \"../../components/popOver\";\nexport default function Test(_ref) {\n  var id = _ref.id;\n  console.log(id);\n  var addItem = useContext(AppContext);\n  var _useState = useState(\"\"),\n    query = _useState[0],\n    setQuery = _useState[1];\n\n  //APOLLO CLIENT QUERY\n  var GET_RESTAURANT_DISHES = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query GET_RESTAURANT_DISHES($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  \"])));\n  //APOLLO CLIENT QUERY\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n      variables: {\n        id: id\n      }\n    }),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  // console.log(JSON.stringify(data.restaurant.dishes));\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  var restaurant = data.restaurant;\n  console.log(restaurant.dishes);\n  console.log(query);\n  return __jsx(React.Fragment, null, __jsx(HeroSection, {\n    src: \"http://localhost:1337\" + restaurant.image.url,\n    title: restaurant.name,\n    text: restaurant.description\n  }), __jsx(PopOver, null), __jsx(Container, null, __jsx(\"div\", {\n    className: \"search\"\n  }, __jsx(\"h2\", null, restaurant.name), __jsx(InputGroup, null, __jsx(InputGroup, {\n    type: \"append\"\n  }, \" Search \"), __jsx(Input, {\n    onChange: function onChange(e) {\n      return setQuery(e.target.value.toLocaleLowerCase());\n    },\n    value: query\n  })), __jsx(\"br\", null))), __jsx(Container, null, __jsx(Dishes, {\n    restId: id,\n    search: query\n  }), addItem.cart.items.length !== 0 && __jsx(Row, {\n    xs: \"8\"\n  }, __jsx(Cart, null))));\n}\nTest.getInitialProps = function (ctx) {\n  var id = ctx.query.id;\n  console.log(\" id from getInitialProps \".concat(id));\n  return {\n    id: id\n  };\n};","map":null,"metadata":{},"sourceType":"module"}