{"ast":null,"code":"var _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[restaurantSlug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Dishes from \"../../components/dishes\";\nimport { useRouter } from \"next/router\";\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nexport default function Restaurant() {\n  const router = useRouter();\n  const renderDishes = restaurantID => {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, \" \");\n  };\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, router.query.restaurant), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, renderDishes(restaurantID)));\n}\nexport async function getStaticPaths() {\n  const GET_PAGE_DISHES = gql`\n    query ($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  return {\n    paths: []\n  };\n}","map":{"version":3,"names":["Dishes","useRouter","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Restaurant","router","renderDishes","restaurantID","query","restaurant","getStaticPaths","GET_PAGE_DISHES","gql","paths"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[restaurantSlug].js"],"sourcesContent":["import Dishes from \"../../components/dishes\";\nimport { useRouter } from \"next/router\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\n\nexport default function Restaurant() {\n  const router = useRouter();\n\n  const renderDishes = (restaurantID) => {\n    return <Dishes restId={restaurantID}> </Dishes>;\n  };\n\n  return (\n    <>\n      <div>{router.query.restaurant}</div>\n\n      <div>{renderDishes(restaurantID)}</div>\n    </>\n  );\n}\n\nexport async function getStaticPaths() {\n  const GET_PAGE_DISHES = gql`\n    query ($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  return {\n    paths: [],\n  };\n}\n"],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,aAAa;AACvC,SACEC,cAAc,EACdC,YAAY,EACZC,QAAQ,EACRC,aAAa,QACR,gBAAgB;AAEvB,eAAe,SAASC,UAAU,GAAG;EACnC,MAAMC,MAAM,GAAGN,SAAS,EAAE;EAE1B,MAAMO,YAAY,GAAIC,YAAY,IAAK;IACrC,OAAO,MAAC,MAAM;MAAC,MAAM,EAAEA,YAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,OAAW;EACjD,CAAC;EAED,OACE,4BACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMF,MAAM,CAACG,KAAK,CAACC,UAAU,CAAO,EAEpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMH,YAAY,CAACC,YAAY,CAAC,CAAO,CACtC;AAEP;AAEA,OAAO,eAAeG,cAAc,GAAG;EACrC,MAAMC,eAAe,GAAGC,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,OAAO;IACLC,KAAK,EAAE;EACT,CAAC;AACH"},"metadata":{},"sourceType":"module"}