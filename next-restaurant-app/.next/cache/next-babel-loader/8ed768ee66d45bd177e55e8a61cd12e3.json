{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/* /components/Layout.js */\n\nimport React, { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport { useAuth } from \"../lib/auth2\";\nimport Cart from \"../components/cart\";\nimport Link from \"next/link\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartShopping, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n//Styling\nimport { Collapse, Container, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, NavbarText } from \"reactstrap\";\nimport AppContext from \"./context\";\nimport PopOver from \"../components/popOver\";\nconst Layout = props => {\n  const title = \"Welcome to Nextjs\";\n  var {\n    user,\n    setUser,\n    logout\n  } = useAuth();\n  const toggle = () => setIsOpen(!isOpen);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    cart,\n    addItem,\n    cleanCart\n  } = useContext(AppContext);\n  const {\n    0: totalItems,\n    1: setTotalItems\n  } = useState(0);\n  const itemsCart = cart.items.map(ele => ele.quantity);\n  const total = [totalItems, ...itemsCart];\n  const total2 = total.reduce((a, b) => a + b);\n  console.log(`user from layout ${user}`);\n  console.log(`getItems = ${JSON.stringify(total2)}`);\n  // console.log(`total quantity ${total.grand}`);\n\n  return __jsx(\"div\", {\n    className: \"jsx-1733949228\"\n  }, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1733949228\"\n  }, title), __jsx(\"meta\", {\n    charSet: \"utf-8\",\n    className: \"jsx-1733949228\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1733949228\"\n  }), __jsx(\"script\", {\n    src: \"https://js.stripe.com/v3\",\n    className: \"jsx-1733949228\"\n  }), __jsx(\"script\", {\n    src: \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\",\n    integrity: \"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\",\n    crossOrigin: \"anonymous\",\n    className: \"jsx-1733949228\"\n  })), __jsx(_JSXStyle, {\n    id: \"1733949228\"\n  }, [\"a.jsx-1733949228{color:white;}\", \"h5.jsx-1733949228{color:white;padding-top:11px;}\", \".navItemsWrapper.jsx-1733949228{backgroundcolor:black;}\"]), __jsx(Navbar, _extends({\n    className: \"navbar navbar-light navbar-expand-md\"\n  }, props), __jsx(NavbarToggler, {\n    onClick: toggle\n  }), __jsx(NavbarBrand, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"img\", {\n    alt: \"logo\",\n    src: \"http://localhost:1337/uploads/774d3400cbda43be9e1f69057fefa221.png\",\n    style: {\n      height: 80,\n      width: 100\n    },\n    className: \"jsx-1733949228\"\n  }))), cart.items.length > 0 && __jsx(React.Fragment, null, __jsx(PopOver, {\n    total: total2\n  })), __jsx(Collapse, {\n    isOpen: isOpen,\n    navbar: true\n  }, __jsx(Nav, {\n    className: \"me-auto\",\n    navbar: true\n  }, __jsx(NavItem, {\n    className: \"ml-auto\"\n  }, !user && __jsx(NavLink, {\n    href: \"/register\"\n  }, \"Sign Up\")), __jsx(NavItem, null, user && __jsx(Link, {\n    href: \"/profile\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1733949228\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faUser,\n    className: \"me-2\"\n  }), __jsx(NavbarText, null, user.username)))), __jsx(NavItem, null, user ? __jsx(NavLink, {\n    href: \"/\",\n    onClick: () => {\n      logout();\n      setUser(null);\n    }\n  }, \"Logout\") : __jsx(NavLink, {\n    className: \"navItemsWrapper\",\n    href: \"/login\"\n  }, \"Login\"))))), __jsx(Container, {\n    fluid: true\n  }, props.children));\n};\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}