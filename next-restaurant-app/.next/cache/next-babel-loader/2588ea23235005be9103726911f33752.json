{"ast":null,"code":"var _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\nimport Cart from \"../../components/cart\";\nexport default function Test({\n  id\n}) {\n  console.log(id);\n  const addItem = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n    query GET_RESTAURANT_DISHES($id: ID!) {\n      query: restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: id\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Dishes, {\n    restId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \" \"), addItem.cart.items.length !== 0 && __jsx(Row, {\n    xs: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })));\n}\nTest.getInitialProps = function (ctx) {\n  const {\n    id\n  } = ctx.query;\n  console.log(` id from getInitialProps ${id}`);\n  return {\n    id\n  };\n};","map":{"version":3,"names":["gql","useQuery","Dishes","Container","Row","useState","useContext","AppContext","Cart","Test","id","console","log","addItem","GET_RESTAURANT_DISHES","loading","error","data","variables","cart","items","length","getInitialProps","ctx","query"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[id].js"],"sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\nimport Cart from \"../../components/cart\";\n\nexport default function Test({ id }) {\n  console.log(id);\n  const addItem = useContext(AppContext);\n\n  const GET_RESTAURANT_DISHES = gql`\n    query GET_RESTAURANT_DISHES($id: ID!) {\n      query: restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: id },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  return (\n    <Container>\n      <Dishes restId={id}> </Dishes>\n      {addItem.cart.items.length !== 0 && (\n        <Row xs='8'>\n          <Cart />\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nTest.getInitialProps = function (ctx) {\n  const { id } = ctx.query;\n  console.log(` id from getInitialProps ${id}`);\n  return { id };\n};\n"],"mappings":";;;AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,EAAEC,GAAG,QAAQ,YAAY;AAC3C,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,uBAAuB;AAExC,eAAe,SAASC,IAAI,CAAC;EAAEC;AAAG,CAAC,EAAE;EACnCC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EACf,MAAMG,OAAO,GAAGP,UAAU,CAACC,UAAU,CAAC;EAEtC,MAAMO,qBAAqB,GAAGd,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,MAAM;IAAEe,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGhB,QAAQ,CAACa,qBAAqB,EAAE;IAC/DI,SAAS,EAAE;MAAER,EAAE,EAAEA;IAAG;EACtB,CAAC,CAAC;EAEF,IAAIK,OAAO,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiB;EACrC,IAAIC,KAAK,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiB;EACnC,IAAI,CAACC,IAAI,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAgB;EAElC,OACE,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACR,MAAC,MAAM;IAAC,MAAM,EAAEP,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAW,EAC7BG,OAAO,CAACM,IAAI,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,IAC9B,MAAC,GAAG;IAAC,EAAE,EAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACT,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEX,CACS;AAEhB;AAEAZ,IAAI,CAACa,eAAe,GAAG,UAAUC,GAAG,EAAE;EACpC,MAAM;IAAEb;EAAG,CAAC,GAAGa,GAAG,CAACC,KAAK;EACxBb,OAAO,CAACC,GAAG,CAAE,4BAA2BF,EAAG,EAAC,CAAC;EAC7C,OAAO;IAAEA;EAAG,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"module"}