{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/setting-up-graphql-with-apollo_starter/frontend/lib/auth2.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, createContext, useContext, useState } from \"react\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { responsePathAsArray } from \"graphql\";\nvar API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\nimport api from \"../services/api\";\nvar AuthContext = /*#__PURE__*/createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    function loadUserFromCookies() {\n      return _loadUserFromCookies.apply(this, arguments);\n    }\n\n    function _loadUserFromCookies() {\n      _loadUserFromCookies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var token, _headerToken, _ref2, _user;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = Cookies.get(\"token\");\n                console.log(JSON.stringify(Cookies.get()));\n\n                if (token) {\n                  console.log(\"Got a token in the cookies, let's see if it is valid\");\n                  _headerToken = \"Bearer \".concat(token);\n                  _ref2 = {}, _user = _ref2.data;\n                  if (_user) setUser(_user);\n                }\n\n                setLoading(false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadUserFromCookies.apply(this, arguments);\n    }\n\n    loadUserFromCookies();\n  }, []); //CAN'T GET USER TO UPDATE\n\n  var login = function login(identifier, password) {\n    //prevent function from being ran on the server\n    if (false) {\n      return;\n    }\n\n    return new Promise(function (resolve, reject) {\n      axios.post(\"\".concat(API_URL, \"/auth/local/\"), {\n        identifier: identifier,\n        password: password\n      }).then(function (res) {\n        //set token response from Strapi for server validation\n        Cookies.set(\"token\", res.data.jwt); //set user with data response\n\n        var user = res.data.data;\n        setUser(user);\n        console.log(\"AUTHENTICATED LOGIN USER = \".concat(user)); //resolve the promise to set loading to false in SignUp form\n\n        resolve(res); //redirect back to home page for restaurance selection\n\n        Router.push(\"/\");\n      })[\"catch\"](function (error) {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n    });\n  };\n\n  var registerUser = function registerUser(username, email, password) {\n    //prevent function from being ran on the server\n    //to make sure that it is on the client side,\n    //if window is not defined, than it is running on server\n    if (false) {\n      return;\n    }\n\n    return new Promise(function (resolve, reject) {\n      axios.post(\"\".concat(API_URL, \"/auth/local/register\"), {\n        username: username,\n        email: email,\n        password: password\n      }).then(function (res) {\n        //use Cookie capability to store JWT token\n        //set token response from Strapi for server validation\n        Cookies.set(\"token\", res.data.jwt);\n        var user = res.data.data;\n        setUser(user);\n        console.log(\"USER HAS BEEN REGISTERED, USER = \".concat(user)); //resolve the promise to set loading to false in SignUp form\n\n        resolve(res); //redirect back to home page for restaurance selection\n\n        Router.push(\"/\");\n      })[\"catch\"](function (error) {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n    });\n  };\n\n  var logout = function logout(email, password) {\n    //remove token and user cookie\n    Cookies.remove(\"token\");\n    delete window.__user; // sync logout between multiple windows\n\n    window.localStorage.setItem(\"logout\", Date.now()); //Set user to null\n\n    setUser(null);\n    headerToken = \"\"; //redirect to the home page\n\n    Router.push(\"/\");\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user: user,\n      login: login,\n      registerUser: registerUser,\n      loading: loading,\n      logout: logout\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/carloszapata/Desktop/CAPSTONE/setting-up-graphql-with-apollo_starter/frontend/lib/auth2.js"],"names":["useEffect","createContext","useContext","useState","Router","axios","Cookies","responsePathAsArray","API_URL","process","env","NEXT_PUBLIC_API_URL","api","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","loadUserFromCookies","token","get","console","log","JSON","stringify","headerToken","data","login","identifier","password","Promise","resolve","reject","post","then","res","set","jwt","push","error","registerUser","username","email","logout","remove","window","__user","localStorage","setItem","Date","now","isAuthenticated","useAuth"],"mappings":"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","sourcesContent":["import { useEffect, createContext, useContext, useState } from \"react\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { responsePathAsArray } from \"graphql\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\nimport api from \"../services/api\";\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadUserFromCookies() {\n      const token = Cookies.get(\"token\");\n      console.log(JSON.stringify(Cookies.get()));\n      if (token) {\n        console.log(\"Got a token in the cookies, let's see if it is valid\");\n        const headerToken = `Bearer ${token}`;\n        const { data: user } = {};\n        if (user) setUser(user);\n      }\n      setLoading(false);\n    }\n    loadUserFromCookies();\n  }, []);\n  //CAN'T GET USER TO UPDATE\n  const login = (identifier, password) => {\n    //prevent function from being ran on the server\n    if (typeof window === \"undefined\") {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      axios\n        .post(`${API_URL}/auth/local/`, { identifier, password })\n        .then((res) => {\n          //set token response from Strapi for server validation\n          Cookies.set(\"token\", res.data.jwt);\n          //set user with data response\n          const { data: user } = res.data;\n          setUser(user);\n          console.log(`AUTHENTICATED LOGIN USER = ${user}`);\n          //resolve the promise to set loading to false in SignUp form\n          resolve(res);\n          //redirect back to home page for restaurance selection\n          Router.push(\"/\");\n        })\n        .catch((error) => {\n          //reject the promise and pass the error object back to the form\n          reject(error);\n        });\n    });\n  };\n\n  const registerUser = (username, email, password) => {\n    //prevent function from being ran on the server\n    //to make sure that it is on the client side,\n    //if window is not defined, than it is running on server\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios\n        .post(`${API_URL}/auth/local/register`, { username, email, password })\n        .then((res) => {\n          //use Cookie capability to store JWT token\n          //set token response from Strapi for server validation\n          Cookies.set(\"token\", res.data.jwt);\n          const { data: user } = res.data;\n          setUser(user);\n          console.log(`USER HAS BEEN REGISTERED, USER = ${user}`);\n          //resolve the promise to set loading to false in SignUp form\n          resolve(res);\n          //redirect back to home page for restaurance selection\n          Router.push(\"/\");\n        })\n        .catch((error) => {\n          //reject the promise and pass the error object back to the form\n          reject(error);\n        });\n    });\n  };\n\n  const logout = (email, password) => {\n    //remove token and user cookie\n    Cookies.remove(\"token\");\n    delete window.__user;\n    // sync logout between multiple windows\n    window.localStorage.setItem(\"logout\", Date.now());\n    //Set user to null\n    setUser(null);\n    headerToken = \"\";\n    //redirect to the home page\n    Router.push(\"/\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        login,\n        registerUser,\n        loading,\n        logout,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}