{"ast":null,"code":"var _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport client from \"../client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\n\n// export default function retaurant({ dish }) {\n//   return (\n//     <Row xs='3'>\n//       <h1>Hello</h1>\n//     </Row>\n//   );\n// }\n\n// export async function getStaticProps({ params }) {\n//   const router = useRouter();\n//   const restaurantID = router.query;\n//   const GET_RESTAURANT_DISHES = gql`\n//     query ($id: ID!) {\n//       restaurant(id: $id) {\n//         id\n//         name\n//         dishes {\n//           id\n//           name\n//           description\n//           price\n//           image {\n//             url\n//           }\n//         }\n//       }\n//     }\n//   `;\n\n//   const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n//     variables: { id: restaurantID },\n//   });\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>ERROR here</p>;\n//   if (!data) return <p>Not found</p>;\n\n//   let restaurant = data.restaurant;\n//   console.log(restaurant);\n\n//   return {\n//     props: restaurant,\n//   };\n// }\n\n// export async function getStaticPaths() {\n//   const GET_RESTAURANT_DISHES = gql`\n//     query ($id: ID!) {\n//       restaurant(id: $id) {\n//         id\n//         name\n//         dishes {\n//           id\n//           name\n//           description\n//           price\n//           image {\n//             url\n//           }\n//         }\n//       }\n//     }\n//   `;\n\n//   const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n//     variables: { id: restaurantID },\n//   });\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>ERROR here</p>;\n//   if (!data) return <p>Not found</p>;\n\n//   let restaurant = data.restaurant;\n//   console.log(restaurant);\n\n//   const paths = restaurant.dishes.map((res) => {\n//     return {\n//       params: {\n//         id: res.slug,\n//       },\n//     };\n//   });\n\n//   return {\n//     paths,\n//     fallback: false,\n//   };\n// }\n\nexport default function Test(_ref) {\n  var id = _ref.id;\n  console.log(id);\n  return __jsx(Dishes, {\n    restId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, \" \");\n}\n_c = Test;\nTest.getInitialProps = function (ctx) {\n  var id = ctx.query.id;\n  console.log(\" id from getInitialProps \".concat(id));\n  return {\n    id: id\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["gql","useQuery","useRouter","Dishes","Container","Row","client","useState","useContext","AppContext","Test","id","console","log","getInitialProps","ctx","query"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/[id].js"],"sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Dishes from \"../../components/dishes\";\nimport { Container, Row } from \"reactstrap\";\nimport client from \"../client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"../../components/context\";\n\n// export default function retaurant({ dish }) {\n//   return (\n//     <Row xs='3'>\n//       <h1>Hello</h1>\n//     </Row>\n//   );\n// }\n\n// export async function getStaticProps({ params }) {\n//   const router = useRouter();\n//   const restaurantID = router.query;\n//   const GET_RESTAURANT_DISHES = gql`\n//     query ($id: ID!) {\n//       restaurant(id: $id) {\n//         id\n//         name\n//         dishes {\n//           id\n//           name\n//           description\n//           price\n//           image {\n//             url\n//           }\n//         }\n//       }\n//     }\n//   `;\n\n//   const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n//     variables: { id: restaurantID },\n//   });\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>ERROR here</p>;\n//   if (!data) return <p>Not found</p>;\n\n//   let restaurant = data.restaurant;\n//   console.log(restaurant);\n\n//   return {\n//     props: restaurant,\n//   };\n// }\n\n// export async function getStaticPaths() {\n//   const GET_RESTAURANT_DISHES = gql`\n//     query ($id: ID!) {\n//       restaurant(id: $id) {\n//         id\n//         name\n//         dishes {\n//           id\n//           name\n//           description\n//           price\n//           image {\n//             url\n//           }\n//         }\n//       }\n//     }\n//   `;\n\n//   const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n//     variables: { id: restaurantID },\n//   });\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>ERROR here</p>;\n//   if (!data) return <p>Not found</p>;\n\n//   let restaurant = data.restaurant;\n//   console.log(restaurant);\n\n//   const paths = restaurant.dishes.map((res) => {\n//     return {\n//       params: {\n//         id: res.slug,\n//       },\n//     };\n//   });\n\n//   return {\n//     paths,\n//     fallback: false,\n//   };\n// }\n\nexport default function Test({ id }) {\n  console.log(id);\n\n  return <Dishes restId={id}> </Dishes>;\n}\n\nTest.getInitialProps = function (ctx) {\n  const { id } = ctx.query;\n  console.log(` id from getInitialProps ${id}`);\n  return { id };\n};\n"],"mappings":";;;AAAA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,EAAEC,GAAG,QAAQ,YAAY;AAC3C,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,IAAI,OAAS;EAAA,IAANC,EAAE,QAAFA,EAAE;EAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,OAAO,MAAC,MAAM;IAAC,MAAM,EAAEA,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAW;AACvC;AAAC,KAJuBD,IAAI;AAM5BA,IAAI,CAACI,eAAe,GAAG,UAAUC,GAAG,EAAE;EACpC,IAAQJ,EAAE,GAAKI,GAAG,CAACC,KAAK,CAAhBL,EAAE;EACVC,OAAO,CAACC,GAAG,oCAA6BF,EAAE,EAAG;EAC7C,OAAO;IAAEA,EAAE,EAAFA;EAAG,CAAC;AACf,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}