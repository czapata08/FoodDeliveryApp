{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject;\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport Link from \"next/link\";\nimport Dishes from \"../../components/dishes\";\nimport { useContext, useState } from \"react\";\nimport AppContext from \"../../components/context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, CardGroup, Container, Row, Col } from \"reactstrap\";\nfunction RestaurantList(props) {\n  var _useState = useState(0),\n    restaurantID = _useState[0],\n    setRestaurantID = _useState[1];\n  var _useContext = useContext(AppContext),\n    cart = _useContext.cart;\n  var _useState2 = useState(cart),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var GET_RESTAURANTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"])));\n  var _useQuery = useQuery(GET_RESTAURANTS),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n\n  //search query value is defined in index --\n  //loop and\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n  var restId = searchQuery[0] ? searchQuery[0].id : null;\n\n  // define renderer for Dishes\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID\n    }, \" \");\n  };\n  //get each restaurants and store in list and render with properties below\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"12\",\n        md: \"4\",\n        xl: \"4\",\n        className: \"p-0\"\n      }, __jsx(Card, {\n        key: res.id,\n        className: \"h-100\"\n      }, __jsx(CardImg, {\n        top: true,\n        className: \"fluid\",\n        style: {\n          height: 180,\n          minWidth: 80\n        },\n        src: \"http://localhost:1337\" + res.image.url\n      }), __jsx(CardBody, null, __jsx(CardText, null, res.description)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Link, {\n        as: \"/restaurants/\" + res.id,\n        href: \"restaurants/[...id]\"\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        }\n      }, res.name)))));\n    });\n    return (\n      //3 col in the row\n      //Just pass the element and all styling done in index.js\n      __jsx(React.Fragment, null, __jsx(Row, {\n        className: \"d-flex align-items-stretch\"\n      }, restList))\n    );\n  } else {\n    return __jsx(\"h1\", null, \" No Restaurants Found\");\n  }\n}\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}