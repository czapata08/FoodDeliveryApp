{"ast":null,"code":"var _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/lib/auth2.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, createContext, useContext, useState } from \"react\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\nimport api from \"../services/api\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    async function loadUserFromCookies() {\n      const token = Cookies.get(\"token\");\n      console.log(JSON.stringify(Cookies.get()));\n      if (token) {\n        console.log(\"Got a token in the cookies, let's see if it is valid\");\n        api.defaults.headers.Authorization = `Bearer ${token}`;\n        const {\n          user: user\n        } = await api.get(\"users/me\");\n        console.log(`user object: ${user}`);\n        if (user) setUser(user);\n      }\n      setLoading(false);\n    }\n    loadUserFromCookies();\n  }, []);\n  //CAN'T GET USER TO UPDATE\n\n  const login = (identifier, password) => {\n    //prevent function from being ran on the server\n    if (true) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios.post(`${API_URL}/auth/local/`, {\n        identifier,\n        password\n      }).then(res => {\n        //set token response from Strapi for server validation\n        Cookies.set(\"token\", res.data.jwt);\n        //set user with data response\n        const {\n          user: user\n        } = res.data;\n        setUser(user);\n        console.log(`AUTHENTICATED LOGIN USER = ${JSON.stringify(user)}`);\n        //resolve the promise to set loading to false in SignUp form\n        resolve(res);\n        //redirect back to home page for restaurance selection\n        Router.push(\"/\");\n      }).catch(error => {\n        //reject the promise and pass the error object back to the form\n        console.log(error);\n        reject(error);\n      });\n    });\n  };\n  const registerUser = (username, email, password) => {\n    //prevent function from being ran on the server\n    //to make sure that it is on the client side,\n    //if window is not defined, than it is running on server\n    if (true) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios.post(`${API_URL}/auth/local/register`, {\n        username,\n        email,\n        password\n      }).then(res => {\n        //use Cookie capability to store JWT token\n        //set token response from Strapi for server validation\n        Cookies.set(\"token\", res.data.jwt);\n        const {\n          user: user\n        } = res.data;\n        setUser(user);\n        console.log(`USER HAS BEEN REGISTERED, USER = ${JSON.stringify(user)}`);\n        //resolve the promise to set loading to false in SignUp form\n        resolve(res);\n        //redirect back to home page for restaurance selection\n        Router.push(\"/\");\n      }).catch(error => {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n    });\n  };\n\n  // Only Authenticated User Can Have Access To This Route\n  //Therefore JWT must be provided\n  //response should have updated user data\n  //test route with POSTMAN\n\n  const updateUser = (id, username) => {\n    if (true) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios.put(`${API_URL}/auth/local/updateUser`, {\n        query: {\n          where: {\n            id: id\n          },\n          data: {\n            username: username\n          }\n        }\n      }).then(res => {\n        console.log(res.data);\n        const {\n          user: user\n        } = res.data;\n        setUser(user);\n        resolve(res);\n      }).catch(error => {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n    });\n  };\n  const logout = (email, password) => {\n    //remove token and user cookie\n    Cookies.remove(\"token\");\n    delete window.__user;\n    // sync logout between multiple windows\n    window.localStorage.setItem(\"logout\", Date.now());\n    //Set user to null\n    setUser(null);\n    headerToken = \"\";\n    console.log(`USER HAS BEEN LOGGED OUT`);\n    //redirect to the home page\n    Router.push(\"/\");\n  };\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user,\n      login,\n      updateUser,\n      registerUser,\n      loading,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useAuth = () => useContext(AuthContext);","map":{"version":3,"names":["useEffect","createContext","useContext","useState","Router","axios","Cookies","API_URL","process","env","NEXT_PUBLIC_API_URL","api","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","loadUserFromCookies","token","get","console","log","JSON","stringify","defaults","headers","Authorization","login","identifier","password","Promise","resolve","reject","post","then","res","set","data","jwt","push","catch","error","registerUser","username","email","updateUser","id","put","query","where","logout","remove","window","__user","localStorage","setItem","Date","now","headerToken","isAuthenticated","useAuth"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/lib/auth2.js"],"sourcesContent":["import { useEffect, createContext, useContext, useState } from \"react\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\nimport api from \"../services/api\";\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadUserFromCookies() {\n      const token = Cookies.get(\"token\");\n      console.log(JSON.stringify(Cookies.get()));\n      if (token) {\n        console.log(\"Got a token in the cookies, let's see if it is valid\");\n        api.defaults.headers.Authorization = `Bearer ${token}`;\n        const { user: user } = await api.get(\"users/me\");\n        console.log(`user object: ${user}`);\n        if (user) setUser(user);\n      }\n      setLoading(false);\n    }\n    loadUserFromCookies();\n  }, []);\n  //CAN'T GET USER TO UPDATE\n\n  const login = (identifier, password) => {\n    //prevent function from being ran on the server\n    if (typeof window === \"undefined\") {\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      axios\n        .post(`${API_URL}/auth/local/`, { identifier, password })\n        .then((res) => {\n          //set token response from Strapi for server validation\n          Cookies.set(\"token\", res.data.jwt);\n          //set user with data response\n          const { user: user } = res.data;\n          setUser(user);\n          console.log(`AUTHENTICATED LOGIN USER = ${JSON.stringify(user)}`);\n          //resolve the promise to set loading to false in SignUp form\n          resolve(res);\n          //redirect back to home page for restaurance selection\n          Router.push(\"/\");\n        })\n        .catch((error) => {\n          //reject the promise and pass the error object back to the form\n          console.log(error);\n          reject(error);\n        });\n    });\n  };\n\n  const registerUser = (username, email, password) => {\n    //prevent function from being ran on the server\n    //to make sure that it is on the client side,\n    //if window is not defined, than it is running on server\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios\n        .post(`${API_URL}/auth/local/register`, { username, email, password })\n        .then((res) => {\n          //use Cookie capability to store JWT token\n          //set token response from Strapi for server validation\n          Cookies.set(\"token\", res.data.jwt);\n          const { user: user } = res.data;\n          setUser(user);\n          console.log(\n            `USER HAS BEEN REGISTERED, USER = ${JSON.stringify(user)}`\n          );\n          //resolve the promise to set loading to false in SignUp form\n          resolve(res);\n          //redirect back to home page for restaurance selection\n          Router.push(\"/\");\n        })\n        .catch((error) => {\n          //reject the promise and pass the error object back to the form\n          reject(error);\n        });\n    });\n  };\n\n  // Only Authenticated User Can Have Access To This Route\n  //Therefore JWT must be provided\n  //response should have updated user data\n  //test route with POSTMAN\n\n  const updateUser = (id, username) => {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      axios\n        .put(`${API_URL}/auth/local/updateUser`, {\n          query: {\n            where: { id: id },\n            data: {\n              username: username,\n            },\n          },\n        })\n        .then((res) => {\n          console.log(res.data);\n          const { user: user } = res.data;\n          setUser(user);\n          resolve(res);\n        })\n        .catch((error) => {\n          //reject the promise and pass the error object back to the form\n          reject(error);\n        });\n    });\n  };\n\n  const logout = (email, password) => {\n    //remove token and user cookie\n    Cookies.remove(\"token\");\n    delete window.__user;\n    // sync logout between multiple windows\n    window.localStorage.setItem(\"logout\", Date.now());\n    //Set user to null\n    setUser(null);\n    headerToken = \"\";\n    console.log(`USER HAS BEEN LOGGED OUT`);\n    //redirect to the home page\n    Router.push(\"/\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        user,\n        login,\n        updateUser,\n        registerUser,\n        loading,\n        logout,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}