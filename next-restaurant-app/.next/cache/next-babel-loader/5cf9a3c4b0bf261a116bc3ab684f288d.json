{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/setting-up-graphql-with-apollo_starter/frontend/lib/auth.js\";\n\nvar __jsx = React.createElement;\n\n/* /lib/auth.js */\n//the goal here is to identify client and server\n//by passing JWT tokens and access strapi database\n//authenticate user to use the and access the application\nimport React, { useEffect, createContext } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { responsePathAsArray } from \"graphql\";\nvar AuthContext = /*#__PURE__*/createContext();\nvar API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\"; //register a new user\n\nexport var registerUser = function registerUser(username, email, password) {\n  //prevent function from being ran on the server\n  //to make sure that it is on the client side,\n  //if window is not defined, than it is running on server\n  if (false) {\n    return;\n  }\n\n  return new Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/auth/local/register\"), {\n      username: username,\n      email: email,\n      password: password\n    }).then(function (res) {\n      //use Cookie capability to store JWT token\n      //set token response from Strapi for server validation\n      Cookie.set(\"token\", res.data.jwt); //resolve the promise to set loading to false in SignUp form\n\n      resolve(res); //redirect back to home page for restaurance selection\n\n      Router.push(\"/\");\n    })[\"catch\"](function (error) {\n      //reject the promise and pass the error object back to the form\n      reject(error);\n    });\n  });\n};\nexport var login = function login(identifier, password) {\n  //prevent function from being ran on the server\n  if (false) {\n    return;\n  }\n\n  return new Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/auth/local/\"), {\n      identifier: identifier,\n      password: password\n    }).then(function (res) {\n      //set token response from Strapi for server validation\n      Cookie.set(\"token\", res.data.jwt); //create user context\n\n      __jsx(AuthContext.Provider, {\n        value: res.data.user,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }); //resolve the promise to set loading to false in SignUp form\n\n\n      resolve(res); //redirect back to home page for restaurance selection\n\n      Router.push(\"/\");\n    })[\"catch\"](function (error) {\n      //reject the promise and pass the error object back to the form\n      reject(error);\n    });\n  });\n};\nexport var logout = function logout() {\n  //remove token and user cookie\n  Cookie.remove(\"token\");\n  delete window.__user; // sync logout between multiple windows\n\n  window.localStorage.setItem(\"logout\", Date.now()); //redirect to the home page\n\n  Router.push(\"/\");\n}; //Higher Order Component to wrap our pages and logout simultaneously logged in tabs\n// THIS IS NOT USED in the tutorial, only provided if you wanted to implement\n\nexport var withAuthSync = function withAuthSync(Component) {\n  var _s = $RefreshSig$();\n\n  var Wrapper = function Wrapper(props) {\n    _s();\n\n    var syncLogout = function syncLogout(event) {\n      if (event.key === \"logout\") {\n        Router.push(\"/login\");\n      }\n    };\n\n    useEffect(function () {\n      window.addEventListener(\"storage\", syncLogout);\n      return function () {\n        window.removeEventListener(\"storage\", syncLogout);\n        window.localStorage.removeItem(\"logout\");\n      };\n    }, []);\n    return __jsx(Component, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  _s(Wrapper, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  if (Component.getInitialProps) {\n    Wrapper.getInitialProps = Component.getInitialProps;\n  }\n\n  return Wrapper;\n};\nexport var authContext = AuthContext;\nexport var AuthConsumer = AuthContext.Consumer;","map":{"version":3,"sources":["/Users/carloszapata/Desktop/CAPSTONE/setting-up-graphql-with-apollo_starter/frontend/lib/auth.js"],"names":["React","useEffect","createContext","Router","Cookie","axios","responsePathAsArray","AuthContext","API_URL","process","env","NEXT_PUBLIC_API_URL","registerUser","username","email","password","Promise","resolve","reject","post","then","res","set","data","jwt","push","error","login","identifier","user","logout","remove","window","__user","localStorage","setItem","Date","now","withAuthSync","Component","Wrapper","props","syncLogout","event","key","addEventListener","removeEventListener","removeItem","getInitialProps","authContext","AuthConsumer","Consumer"],"mappings":"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","sourcesContent":["/* /lib/auth.js */\n\n//the goal here is to identify client and server\n//by passing JWT tokens and access strapi database\n//authenticate user to use the and access the application\n\nimport React, { useEffect, createContext } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { responsePathAsArray } from \"graphql\";\n\nconst AuthContext = createContext();\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\n//register a new user\nexport const registerUser = (username, email, password) => {\n  //prevent function from being ran on the server\n  //to make sure that it is on the client side,\n  //if window is not defined, than it is running on server\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${API_URL}/auth/local/register`, { username, email, password })\n      .then((res) => {\n        //use Cookie capability to store JWT token\n        //set token response from Strapi for server validation\n        Cookie.set(\"token\", res.data.jwt);\n\n        //resolve the promise to set loading to false in SignUp form\n        resolve(res);\n        //redirect back to home page for restaurance selection\n        Router.push(\"/\");\n      })\n      .catch((error) => {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n  });\n};\n\nexport const login = (identifier, password) => {\n  //prevent function from being ran on the server\n  if (typeof window === \"undefined\") {\n    return;\n  }\n\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${API_URL}/auth/local/`, { identifier, password })\n      .then((res) => {\n        //set token response from Strapi for server validation\n        Cookie.set(\"token\", res.data.jwt);\n        //create user context\n        <AuthContext.Provider value={res.data.user} />;\n        //resolve the promise to set loading to false in SignUp form\n        resolve(res);\n        //redirect back to home page for restaurance selection\n        Router.push(\"/\");\n      })\n      .catch((error) => {\n        //reject the promise and pass the error object back to the form\n        reject(error);\n      });\n  });\n};\n\nexport const logout = () => {\n  //remove token and user cookie\n  Cookie.remove(\"token\");\n  delete window.__user;\n  // sync logout between multiple windows\n  window.localStorage.setItem(\"logout\", Date.now());\n  //redirect to the home page\n  Router.push(\"/\");\n};\n\n//Higher Order Component to wrap our pages and logout simultaneously logged in tabs\n// THIS IS NOT USED in the tutorial, only provided if you wanted to implement\nexport const withAuthSync = (Component) => {\n  const Wrapper = (props) => {\n    const syncLogout = (event) => {\n      if (event.key === \"logout\") {\n        Router.push(\"/login\");\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener(\"storage\", syncLogout);\n\n      return () => {\n        window.removeEventListener(\"storage\", syncLogout);\n        window.localStorage.removeItem(\"logout\");\n      };\n    }, []);\n\n    return <Component {...props} />;\n  };\n\n  if (Component.getInitialProps) {\n    Wrapper.getInitialProps = Component.getInitialProps;\n  }\n\n  return Wrapper;\n};\n\nexport const authContext = AuthContext;\nexport const AuthConsumer = AuthContext.Consumer;\n"]},"metadata":{},"sourceType":"module"}