{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/restaurantList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { fromPromise, gql, useQuery } from \"@apollo/client\";\nimport Link from \"next/link\";\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, CardGroup, Container, Row, Col } from \"reactstrap\";\nfunction RestaurantList(props) {\n  _s();\n  var _this = this;\n  var _useState = useState(0),\n    restaurantID = _useState[0],\n    setRestaurantID = _useState[1];\n  var _useContext = useContext(AppContext),\n    cart = _useContext.cart;\n  var _useState2 = useState(cart),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var GET_RESTAURANTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"])));\n  var _useQuery = useQuery(GET_RESTAURANTS),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n\n  //search query value is defined in index --\n  //loop and\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n  var restId = searchQuery[0] ? searchQuery[0].id : null;\n\n  // define renderer for Dishes\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \" \");\n  };\n  //get each restaurants and store in list and render with properties below\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"12\",\n        md: \"4\",\n        xl: \"4\",\n        className: \"p-0\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        key: res.id,\n        className: \"h-100\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        className: \"fluid\",\n        style: {\n          height: 180,\n          minWidth: 80\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, __jsx(Link, {\n        as: \"/restaurants/\" + res.name,\n        href: \"restaurants/[restaurant].js\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, res.name)))));\n    });\n    return (\n      //3 col in the row\n      //Just pass the element and all styling done in index.js\n      __jsx(React.Fragment, null, __jsx(Row, {\n        className: \"d-flex align-items-stretch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, restList), __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, renderDishes(restaurantID)))\n    );\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n_s(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n  return [useQuery];\n});\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["fromPromise","gql","useQuery","Link","Dishes","useContext","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","CardGroup","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","restId","id","renderDishes","length","restList","map","height","minWidth","image","url","description"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/restaurantList.js"],"sourcesContent":["import { fromPromise, gql, useQuery } from \"@apollo/client\";\nimport Link from \"next/link\";\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from \"react\";\n\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardGroup,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  //search query value is defined in index --\n  //loop and\n  let searchQuery =\n    data.restaurants.filter((res) => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n\n  let restId = searchQuery[0] ? searchQuery[0].id : null;\n\n  // define renderer for Dishes\n  const renderDishes = (restaurantID) => {\n    return <Dishes restId={restaurantID}> </Dishes>;\n  };\n  //get each restaurants and store in list and render with properties below\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map((res) => (\n      <Col\n        xs='12'\n        md='4'\n        xl='4'\n        className='p-0'>\n        <Card\n          key={res.id}\n          className='h-100'>\n          <CardImg\n            top={true}\n            className='fluid'\n            style={{ height: 180, minWidth: 80 }}\n            src={`http://localhost:1337` + res.image.url}\n          />\n          <CardBody>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className='card-footer'>\n            <Link\n              as={\"/restaurants/\" + res.name}\n              href='restaurants/[restaurant].js'>\n              <Button onClick={() => setRestaurantID(res.id)}>\n                {res.name}\n              </Button>\n            </Link>\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      //3 col in the row\n      //Just pass the element and all styling done in index.js\n      <>\n        <Row className='d-flex align-items-stretch'>{restList}</Row>\n\n        <Row xs='3'>{renderDishes(restaurantID)}</Row>\n      </>\n    );\n  } else {\n    return <h1> No Restaurants Found</h1>;\n  }\n}\nexport default RestaurantList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}