{"ast":null,"code":"var _jsxFileName = \"/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/restaurantList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { fromPromise, gql, useQuery } from \"@apollo/client\";\nimport Link from \"next/link\";\nimport Dishes from \"../../components/dishes\";\nimport { useContext, useState } from \"react\";\nimport AppContext from \"../../components/context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, CardGroup, Container, Row, Col } from \"reactstrap\";\nfunction RestaurantList(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${JSON.stringify(data.restaurants)}`);\n\n  //search query value is defined in index --\n  //loop and\n  let searchQuery = data.restaurants.filter(res => {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n  let restId = searchQuery[0] ? searchQuery[0].id : null;\n\n  // define renderer for Dishes\n  const renderDishes = restaurantID => {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \" \");\n  };\n  //get each restaurants and store in list and render with properties below\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map(res => __jsx(Col, {\n      xs: \"12\",\n      md: \"4\",\n      xl: \"4\",\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      key: res.id,\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      className: \"fluid\",\n      style: {\n        height: 180,\n        minWidth: 80\n      },\n      src: `http://localhost:1337` + res.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      as: \"/restaurants/\" + restaurantID,\n      href: \"restaurants/[restaurant].js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })))));\n    return (\n      //3 col in the row\n      //Just pass the element and all styling done in index.js\n      __jsx(React.Fragment, null, __jsx(Row, {\n        className: \"d-flex align-items-stretch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, restList), __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, renderDishes(restaurantID)))\n    );\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\nexport default RestaurantList;","map":{"version":3,"names":["fromPromise","gql","useQuery","Link","Dishes","useContext","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","CardGroup","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","JSON","stringify","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","restId","id","renderDishes","length","restList","map","height","minWidth","image","url","description"],"sources":["/Users/carloszapata/Desktop/CAPSTONE/main/root/frontend/pages/restaurants/restaurantList.js"],"sourcesContent":["import { fromPromise, gql, useQuery } from \"@apollo/client\";\nimport Link from \"next/link\";\nimport Dishes from \"../../components/dishes\";\nimport { useContext, useState } from \"react\";\n\nimport AppContext from \"../../components/context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardGroup,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${JSON.stringify(data.restaurants)}`);\n\n  //search query value is defined in index --\n  //loop and\n  let searchQuery =\n    data.restaurants.filter((res) => {\n      return res.name.toLowerCase().includes(props.search);\n    }) || [];\n\n  let restId = searchQuery[0] ? searchQuery[0].id : null;\n\n  // define renderer for Dishes\n  const renderDishes = (restaurantID) => {\n    return <Dishes restId={restaurantID}> </Dishes>;\n  };\n  //get each restaurants and store in list and render with properties below\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map((res) => (\n      <Col\n        xs='12'\n        md='4'\n        xl='4'\n        className='p-0'>\n        <Card\n          key={res.id}\n          className='h-100'>\n          <CardImg\n            top={true}\n            className='fluid'\n            style={{ height: 180, minWidth: 80 }}\n            src={`http://localhost:1337` + res.image.url}\n          />\n          <CardBody>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className='card-footer'>\n            <Link\n              as={\"/restaurants/\" + restaurantID}\n              href='restaurants/[restaurant].js'></Link>\n            {/* <Button onClick={() => setRestaurantID(res.id)}>{res.name}</Button> */}\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      //3 col in the row\n      //Just pass the element and all styling done in index.js\n      <>\n        <Row className='d-flex align-items-stretch'>{restList}</Row>\n\n        <Row xs='3'>{renderDishes(restaurantID)}</Row>\n      </>\n    );\n  } else {\n    return <h1> No Restaurants Found</h1>;\n  }\n}\nexport default RestaurantList;\n"],"mappings":";;;AAAA,SAASA,WAAW,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC3D,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE5C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SACEC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,OAAO,EACPC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,GAAG,EACHC,GAAG,QACE,YAAY;AAEnB,SAASC,cAAc,CAACC,KAAK,EAAE;EAC7B,MAAM;IAAA,GAACC,YAAY;IAAA,GAAEC;EAAe,IAAIf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM;IAAEgB;EAAK,CAAC,GAAGjB,UAAU,CAACE,UAAU,CAAC;EACvC,MAAM;IAAA,GAACgB,KAAK;IAAA,GAAEC;EAAQ,IAAIlB,QAAQ,CAACgB,IAAI,CAAC;EACxC,MAAMG,eAAe,GAAGxB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAM;IAAEyB,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAG1B,QAAQ,CAACuB,eAAe,CAAC;EAC1D,IAAIC,OAAO,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAiB;EACrC,IAAIC,KAAK,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAY;EAC9B,IAAI,CAACC,IAAI,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAgB;EAClCC,OAAO,CAACC,GAAG,CAAE,eAAcC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACK,WAAW,CAAE,EAAC,CAAC;;EAE9D;EACA;EACA,IAAIC,WAAW,GACbN,IAAI,CAACK,WAAW,CAACE,MAAM,CAAEC,GAAG,IAAK;IAC/B,OAAOA,GAAG,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACpB,KAAK,CAACqB,MAAM,CAAC;EACtD,CAAC,CAAC,IAAI,EAAE;EAEV,IAAIC,MAAM,GAAGP,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,CAACQ,EAAE,GAAG,IAAI;;EAEtD;EACA,MAAMC,YAAY,GAAIvB,YAAY,IAAK;IACrC,OAAO,MAAC,MAAM;MAAC,MAAM,EAAEA,YAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,OAAW;EACjD,CAAC;EACD;EACA,IAAIc,WAAW,CAACU,MAAM,GAAG,CAAC,EAAE;IAC1B,MAAMC,QAAQ,GAAGX,WAAW,CAACY,GAAG,CAAEV,GAAG,IACnC,MAAC,GAAG;MACF,EAAE,EAAC,IAAI;MACP,EAAE,EAAC,GAAG;MACN,EAAE,EAAC,GAAG;MACN,SAAS,EAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACf,MAAC,IAAI;MACH,GAAG,EAAEA,GAAG,CAACM,EAAG;MACZ,SAAS,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACjB,MAAC,OAAO;MACN,GAAG,EAAE,IAAK;MACV,SAAS,EAAC,OAAO;MACjB,KAAK,EAAE;QAAEK,MAAM,EAAE,GAAG;QAAEC,QAAQ,EAAE;MAAG,CAAE;MACrC,GAAG,EAAG,uBAAsB,GAAGZ,GAAG,CAACa,KAAK,CAACC,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC7C,EACF,MAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACP,MAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEd,GAAG,CAACe,WAAW,CAAY,CAC7B,EACX;MAAK,SAAS,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC1B,MAAC,IAAI;MACH,EAAE,EAAE,eAAe,GAAG/B,YAAa;MACnC,IAAI,EAAC,6BAA6B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAQ,CAExC,CACD,CAEV,CAAC;IAEF;MACE;MACA;MACA,4BACE,MAAC,GAAG;QAAC,SAAS,EAAC,4BAA4B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEyB,QAAQ,CAAO,EAE5D,MAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEF,YAAY,CAACvB,YAAY,CAAC,CAAO;IAC7C;EAEP,CAAC,MAAM;IACL,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,2BAA8B;EACvC;AACF;AACA,eAAeF,cAAc"},"metadata":{},"sourceType":"module"}