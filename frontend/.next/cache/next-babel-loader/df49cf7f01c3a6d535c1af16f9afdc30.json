{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (error) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"ERROR\"\n  });\n  if (!data) return /*#__PURE__*/_jsx(\"p\", {\n    children: \"Not found\"\n  });\n  console.log(\"Query Data: \".concat(data.restaurants)); //search query value is defined in index --\n  //loop and\n\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }) || [];\n  var restId = searchQuery[0] ? searchQuery[0].id : null; // define renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID) {\n    return /*#__PURE__*/_jsx(Dishes, {\n      restId: restaurantID,\n      children: \" \"\n    });\n  }; //get each restaurants and store in list and render with properties below\n\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return /*#__PURE__*/_jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        children: /*#__PURE__*/_jsxs(Card, {\n          style: {\n            margin: \"0 0.5rem 20px 0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsx(CardImg, {\n            top: true,\n            style: {\n              height: 200\n            },\n            src: \"http://localhost:1337\" + res.image.url\n          }), /*#__PURE__*/_jsx(CardBody, {\n            children: /*#__PURE__*/_jsx(CardText, {\n              children: res.description\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsx(Button, {\n              color: \"info\",\n              onClick: function onClick() {\n                return setRestaurantID(res.id);\n              },\n              children: res.name\n            })\n          })]\n        })\n      }, res.id);\n    });\n    return (\n      /*#__PURE__*/\n      //3 col in the row\n      _jsxs(Container, {\n        children: [/*#__PURE__*/_jsx(Row, {\n          xs: \"3\",\n          children: restList\n        }), /*#__PURE__*/_jsx(Row, {\n          xs: \"3\",\n          children: renderDishes(restaurantID)\n        })]\n      })\n    );\n  } else {\n    return /*#__PURE__*/_jsx(\"h1\", {\n      children: \" No Restaurants Found\"\n    });\n  }\n}\n\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}